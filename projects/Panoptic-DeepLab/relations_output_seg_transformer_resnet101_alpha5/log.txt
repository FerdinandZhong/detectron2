[10/10 10:16:04] detectron2 INFO: Rank of current process: 0. World size: 2
[10/10 10:16:05] detectron2 INFO: Environment info:
----------------------  ----------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]
numpy                   1.23.3
detectron2              0.6 @/root/autodl-tmp/detectron2/detectron2
Compiler                GCC 7.5
CUDA compiler           CUDA 11.1
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.12.0+cu113 @/root/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1                 Tesla V100S-PCIE-32GB (arch=7.0)
Driver version          470.82.00
CUDA_HOME               /usr/local/cuda
Pillow                  9.1.1
torchvision             0.13.0+cu113 @/root/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     4.6.0
----------------------  ----------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[10/10 10:16:05] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-PanopticSegmentation/panoptic_deeplab_R_52_os16_mg124_poly_200k_bs64_crop_640_640_coco_dsconv_custom.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/10 10:16:05] detectron2 INFO: Contents of args.config_file=configs/COCO-PanopticSegmentation/panoptic_deeplab_R_52_os16_mg124_poly_200k_bs64_crop_640_640_coco_dsconv_custom.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m../Cityscapes-PanopticSegmentation/Base-PanopticDeepLab-OS16.yaml
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://DeepLab/R-103.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;242m# WEIGHTS: "./relations_output_seg_transformer_resnet101/model_best.pth"[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m123.675[39m,[38;5;15m [39m[38;5;15m116.280[39m,[38;5;15m [39m[38;5;15m103.530[39m]
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m58.395[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m57.375[39m]
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_deeplab_backbone[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m,[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m,[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m]
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mRES5_MULTI_GRID[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m1[39m,[38;5;15m [39m[38;5;15m2[39m,[38;5;15m [39m[38;5;15m4[39m]
[38;5;15m    [39m[38;5;197mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdeeplab[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m133
[38;5;15m    [39m[38;5;197mLOSS_TOP_K[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m  [39m[38;5;197mPANOPTIC_DEEPLAB[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTUFF_AREA[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mNMS_KERNEL[39m[38;5;15m:[39m[38;5;15m [39m41
[38;5;15m    [39m[38;5;197mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mPREDICT_INSTANCES[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mPSG_RELATION_NET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENCODER_DEPTH[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mTOTAL_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39m56
[38;5;15m    [39m[38;5;197mTOTAL_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m133
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mALPHA[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m("psg_train",)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m("psg_val",)
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m5e-4
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m20000
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mGAUSSIAN_SIGMA[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;81m!!python/object/apply:eval[39m[38;5;15m [39m[[38;5;186m"[39m[38;5;186m[int(x[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m0.1[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m640)[39m[38;5;15m [39m[38;5;186mfor[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186min[39m[38;5;15m [39m[38;5;186mrange(5,[39m[38;5;15m [39m[38;5;186m16)][39m[38;5;186m"[39m]
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mchoice[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m960
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mabsolute[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m[38;5;15m [39m(640, 640)
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./relations_output_seg_transformer_resnet101_alpha5[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m

[10/10 10:16:05] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m10
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mpsg_val
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mpsg_train
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m640
[38;5;15m    [39m-[38;5;15m [39m640
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mabsolute
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mRGB
[38;5;15m  [39m[38;5;197mGAUSSIAN_SIGMA[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mIGNORE_CROWD_IN_SEMANTIC[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mIGNORE_STUFF_IN_OFFSET[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m960
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m320
[38;5;15m  [39m-[38;5;15m [39m384
[38;5;15m  [39m-[38;5;15m [39m448
[38;5;15m  [39m-[38;5;15m [39m512
[38;5;15m  [39m-[38;5;15m [39m576
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m832
[38;5;15m  [39m-[38;5;15m [39m896
[38;5;15m  [39m-[38;5;15m [39m960
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;15m  [39m[38;5;197mSMALL_INSTANCE_AREA[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m  [39m[38;5;197mSMALL_INSTANCE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m3
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m      [39m-[38;5;15m [39m64
[38;5;15m      [39m-[38;5;15m [39m128
[38;5;15m      [39m-[38;5;15m [39m256
[38;5;15m      [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_deeplab_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mINS_EMBED_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m6
[38;5;15m    [39m-[38;5;15m [39m12
[38;5;15m    [39m-[38;5;15m [39m18
[38;5;15m    [39m[38;5;197mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mCENTER_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m200.0
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mHEAD_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLabInsEmbedHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mSyncBN
[38;5;15m    [39m[38;5;197mOFFSET_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLab
[38;5;15m  [39m[38;5;197mPANOPTIC_DEEPLAB[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBENCHMARK_NETWORK_SPEED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCENTER_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mNMS_KERNEL[39m[38;5;15m:[39m[38;5;15m [39m41
[38;5;15m    [39m[38;5;197mPREDICT_INSTANCES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m    [39m[38;5;197mSTUFF_AREA[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mTOP_K_INSTANCE[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mPSG_RELATION_NET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mALPHA[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mCLS_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mENCODER_DEPTH[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mFEATURE_NAME_LIST[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mPSGRelationNet
[38;5;15m    [39m[38;5;197mTOTAL_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m133
[38;5;15m    [39m[38;5;197mTOTAL_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39m56
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m-[38;5;15m [39m2
[38;5;15m    [39m-[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39mdeeplab
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m50
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRes5ROIHeads
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mMaskRCNNConvUpsampleHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m6000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m12000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m6
[38;5;15m    [39m-[38;5;15m [39m12
[38;5;15m    [39m-[38;5;15m [39m18
[38;5;15m    [39m[38;5;197mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mHEAD_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mLOSS_TOP_K[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39mhard_pixel_mining
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLabSemSegHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mSyncBN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m133
[38;5;15m    [39m[38;5;197mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39mdetectron2://DeepLab/R-103.pkl
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m./relations_output_seg_transformer_resnet101_alpha5
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.0005
[38;5;15m  [39m[38;5;197mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupPolyLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m20000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m3
[38;5;15m  [39m[38;5;197mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39mADAM
[38;5;15m  [39m[38;5;197mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m  [39m[38;5;197mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m30000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m100
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[10/10 10:16:05] detectron2 INFO: Full config saved to ./relations_output_seg_transformer_resnet101_alpha5/config.yaml
[10/10 10:16:05] d2.utils.env INFO: Using a generated random seed 6353369
[10/10 10:16:09] d2.engine.defaults INFO: Model:
PanopticDeepLab(
  (backbone): ResNet(
    (stem): DeepLabStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
      )
      (conv2): Conv2d(
        64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
      )
      (conv3): Conv2d(
        64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv1): Conv2d(
          128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (6): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (7): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (8): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (9): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (10): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (11): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (12): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (13): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (14): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (15): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (16): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (17): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (18): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (19): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (20): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (21): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (22): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=0.0001)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=0.0001)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=0.0001)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(8, 8), dilation=(8, 8), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=0.0001)
        )
      )
    )
  )
  (sem_seg_head): PanopticDeepLabSemSegHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False
            (norm): SyncBatchNorm(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            288, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False
            (norm): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            320, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(40, 40), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (head): DepthwiseSeparableConv2d(
      (depthwise): Conv2d(
        256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=256, bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (pointwise): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (predictor): Conv2d(256, 133, kernel_size=(1, 1), stride=(1, 1))
    (loss): DeepLabCE(
      (criterion): CrossEntropyLoss()
    )
  )
  (ins_embed_head): PanopticDeepLabInsEmbedHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            160, 160, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=160, bias=False
            (norm): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False
            (norm): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(40, 40), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (center_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (center_predictor): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
    (offset_head): DepthwiseSeparableConv2d(
      (depthwise): Conv2d(
        128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128, bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (pointwise): Conv2d(
        128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (offset_predictor): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
    (center_loss): MSELoss()
    (offset_loss): L1Loss()
  )
  (psg_relation_net): PSGRelationNet(
    (map_dict): ModuleDict(
      (res3): Linear(in_features=512, out_features=256, bias=True)
      (res5): Linear(in_features=2048, out_features=256, bias=True)
    )
    (tf_encoder): Transformer(
      (blocks): ModuleList(
        (0): Block(
          (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=256, out_features=768, bias=False)
            (attn_drop): Dropout(p=0.3, inplace=False)
            (proj): Linear(in_features=256, out_features=256, bias=True)
            (proj_drop): Dropout(p=0.3, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (mlp): Mlp(
            (fc1): Linear(in_features=256, out_features=768, bias=True)
            (act): GELU(approximate=none)
            (fc2): Linear(in_features=768, out_features=256, bias=True)
            (drop): Dropout(p=0.3, inplace=False)
          )
        )
        (1): Block(
          (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=256, out_features=768, bias=False)
            (attn_drop): Dropout(p=0.3, inplace=False)
            (proj): Linear(in_features=256, out_features=256, bias=True)
            (proj_drop): Dropout(p=0.3, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (mlp): Mlp(
            (fc1): Linear(in_features=256, out_features=768, bias=True)
            (act): GELU(approximate=none)
            (fc2): Linear(in_features=768, out_features=256, bias=True)
            (drop): Dropout(p=0.3, inplace=False)
          )
        )
        (2): Block(
          (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=256, out_features=768, bias=False)
            (attn_drop): Dropout(p=0.3, inplace=False)
            (proj): Linear(in_features=256, out_features=256, bias=True)
            (proj_drop): Dropout(p=0.3, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (mlp): Mlp(
            (fc1): Linear(in_features=256, out_features=768, bias=True)
            (act): GELU(approximate=none)
            (fc2): Linear(in_features=768, out_features=256, bias=True)
            (drop): Dropout(p=0.3, inplace=False)
          )
        )
        (3): Block(
          (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=256, out_features=768, bias=False)
            (attn_drop): Dropout(p=0.3, inplace=False)
            (proj): Linear(in_features=256, out_features=256, bias=True)
            (proj_drop): Dropout(p=0.3, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (mlp): Mlp(
            (fc1): Linear(in_features=256, out_features=768, bias=True)
            (act): GELU(approximate=none)
            (fc2): Linear(in_features=768, out_features=256, bias=True)
            (drop): Dropout(p=0.3, inplace=False)
          )
        )
      )
      (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (pos_drop): Dropout(p=0.3, inplace=False)
    )
    (tf_decoder): Attention(
      (qkv): Linear(in_features=256, out_features=512, bias=True)
      (attn_drop): Dropout(p=0.3, inplace=False)
      (proj_cls): Linear(in_features=256, out_features=256, bias=True)
      (proj_rel): Linear(in_features=256, out_features=256, bias=True)
      (proj_drop): Dropout(p=0.3, inplace=False)
    )
    (cls_fc): Linear(in_features=256, out_features=1, bias=True)
    (rel_fc): Linear(in_features=256, out_features=1, bias=True)
  )
)
[10/10 10:16:09] d2.projects.panoptic_deeplab.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960), max_size=960, sample_style='choice'), RandomCrop(crop_type='absolute', crop_size=[640, 640]), RandomFlip()]
[10/10 10:16:10] d2.data.build INFO: Removed 0 images with no usable annotations. 4500 images left.
[10/10 10:16:10] d2.data.build INFO: Distribution of instances among all 133 categories:
[36m|   category    | #instances   |   category    | #instances   |   category    | #instances   |
|:-------------:|:-------------|:-------------:|:-------------|:-------------:|:-------------|
|    person     | 25660        |    bicycle    | 913          |      car      | 3591         |
|  motorcycle   | 866          |   airplane    | 89           |      bus      | 433          |
|     train     | 179          |     truck     | 537          |     boat      | 269          |
| traffic light | 883          | fire hydrant  | 59           |   stop sign   | 70           |
| parking meter | 75           |     bench     | 805          |     bird      | 420          |
|      cat      | 65           |      dog      | 267          |     horse     | 478          |
|     sheep     | 415          |      cow      | 448          |   elephant    | 219          |
|     bear      | 29           |     zebra     | 137          |    giraffe    | 140          |
|   backpack    | 1070         |   umbrella    | 1038         |    handbag    | 1651         |
|      tie      | 447          |   suitcase    | 359          |    frisbee    | 218          |
|     skis      | 220          |   snowboard   | 98           |  sports ball  | 805          |
|     kite      | 544          | baseball bat  | 512          | baseball gl.. | 621          |
|  skateboard   | 442          |   surfboard   | 257          | tennis racket | 490          |
|    bottle     | 691          |  wine glass   | 257          |      cup      | 573          |
|     fork      | 105          |     knife     | 188          |     spoon     | 90           |
|     bowl      | 229          |    banana     | 157          |     apple     | 73           |
|   sandwich    | 42           |    orange     | 71           |   broccoli    | 9            |
|    carrot     | 52           |    hot dog    | 55           |     pizza     | 130          |
|     donut     | 104          |     cake      | 134          |     chair     | 2464         |
|     couch     | 169          | potted plant  | 313          |      bed      | 52           |
| dining table  | 444          |    toilet     | 24           |      tv       | 151          |
|    laptop     | 201          |     mouse     | 34           |    remote     | 239          |
|   keyboard    | 26           |  cell phone   | 501          |   microwave   | 14           |
|     oven      | 28           |    toaster    | 0            |     sink      | 23           |
| refrigerator  | 30           |     book      | 431          |     clock     | 168          |
|     vase      | 54           |   scissors    | 17           |  teddy bear   | 88           |
|  hair drier   | 5            |  toothbrush   | 28           |    banner     | 431          |
|    blanket    | 49           |    bridge     | 84           |   cardboard   | 115          |
|    counter    | 56           |    curtain    | 121          |  door-stuff   | 283          |
|  floor-wood   | 148          |    flower     | 118          |     fruit     | 29           |
|    gravel     | 112          |     house     | 349          |     light     | 481          |
| mirror-stuff  | 66           |      net      | 140          |    pillow     | 46           |
|   platform    | 132          | playingfield  | 699          |   railroad    | 128          |
|     river     | 66           |     road      | 1178         |     roof      | 286          |
|     sand      | 295          |      sea      | 228          |     shelf     | 91           |
|     snow      | 146          |    stairs     | 237          |     tent      | 149          |
|     towel     | 53           |  wall-brick   | 281          |  wall-stone   | 90           |
|   wall-tile   | 88           |   wall-wood   | 181          |  water-other  | 67           |
| window-blind  | 66           | window-other  | 565          |  tree-merged  | 2047         |
| fence-merged  | 1051         | ceiling-mer.. | 409          | sky-other-m.. | 1874         |
| cabinet-mer.. | 105          | table-merged  | 321          | floor-other.. | 474          |
| pavement-me.. | 1437         | mountain-me.. | 287          | grass-merged  | 1186         |
|  dirt-merged  | 638          | paper-merged  | 283          | food-other-.. | 118          |
| building-ot.. | 1578         |  rock-merged  | 155          | wall-other-.. | 1685         |
|  rug-merged   | 203          |               |              |               |              |
|     total     | 75788        |               |              |               |              |[0m
[10/10 10:16:10] d2.data.build INFO: Using training sampler TrainingSampler
[10/10 10:16:10] d2.data.common INFO: Serializing 4500 elements to byte tensors and concatenating them all ...
[10/10 10:16:10] d2.data.common INFO: Serialized dataset takes 8.84 MiB
[10/10 10:16:10] fvcore.common.checkpoint INFO: [Checkpointer] Loading from detectron2://DeepLab/R-103.pkl ...
[10/10 10:16:10] fvcore.common.checkpoint INFO: Reading a file from 'torchvision'
[10/10 10:16:11] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone:
| Names in Model    | Names in Checkpoint                                                               | Shapes                                          |
|:------------------|:----------------------------------------------------------------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,128,1,1)            |
| res2.0.conv2.*    | res2.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) (256,) (256,) (256,) (256,128,1,1)       |
| res2.1.conv1.*    | res2.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3.3.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3.3.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3.3.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.10.conv1.*   | res4.10.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.10.conv2.*   | res4.10.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.10.conv3.*   | res4.10.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.11.conv1.*   | res4.11.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.11.conv2.*   | res4.11.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.11.conv3.*   | res4.11.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.12.conv1.*   | res4.12.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.12.conv2.*   | res4.12.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.12.conv3.*   | res4.12.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.13.conv1.*   | res4.13.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.13.conv2.*   | res4.13.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.13.conv3.*   | res4.13.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.14.conv1.*   | res4.14.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.14.conv2.*   | res4.14.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.14.conv3.*   | res4.14.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.15.conv1.*   | res4.15.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.15.conv2.*   | res4.15.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.15.conv3.*   | res4.15.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.16.conv1.*   | res4.16.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.16.conv2.*   | res4.16.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.16.conv3.*   | res4.16.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.17.conv1.*   | res4.17.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.17.conv2.*   | res4.17.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.17.conv3.*   | res4.17.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.18.conv1.*   | res4.18.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.18.conv2.*   | res4.18.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.18.conv3.*   | res4.18.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.19.conv1.*   | res4.19.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.19.conv2.*   | res4.19.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.19.conv3.*   | res4.19.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.20.conv1.*   | res4.20.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.20.conv2.*   | res4.20.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.20.conv3.*   | res4.20.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.21.conv1.*   | res4.21.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.21.conv2.*   | res4.21.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.21.conv3.*   | res4.21.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.22.conv1.*   | res4.22.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.22.conv2.*   | res4.22.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.22.conv3.*   | res4.22.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4.3.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4.3.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4.3.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4.4.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4.4.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4.4.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4.5.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4.5.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4.5.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.6.conv1.*    | res4.6.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.6.conv2.*    | res4.6.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.6.conv3.*    | res4.6.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.7.conv1.*    | res4.7.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.7.conv2.*    | res4.7.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.7.conv3.*    | res4.7.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.8.conv1.*    | res4.8.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.8.conv2.*    | res4.8.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.8.conv3.*    | res4.8.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.9.conv1.*    | res4.9.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.9.conv2.*    | res4.9.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.9.conv3.*    | res4.9.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.*      | stem.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (64,) (64,) (64,) (64,) (64,3,3,3)              |
| stem.conv2.*      | stem.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| stem.conv3.*      | stem.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (128,) (128,) (128,) (128,) (128,64,3,3)        |
[10/10 10:16:11] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mins_embed_head.center_head.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.center_head.0.weight[0m
[34mins_embed_head.center_head.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.center_head.1.weight[0m
[34mins_embed_head.center_predictor.{bias, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.depthwise.weight[0m
[34mins_embed_head.decoder.res2.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.pointwise.weight[0m
[34mins_embed_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.project_conv.weight[0m
[34mins_embed_head.decoder.res3.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.fuse_conv.depthwise.weight[0m
[34mins_embed_head.decoder.res3.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.fuse_conv.pointwise.weight[0m
[34mins_embed_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.project_conv.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.0.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.depthwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.pointwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.depthwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.pointwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.depthwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.pointwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.4.1.{bias, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.project.weight[0m
[34mins_embed_head.offset_head.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.offset_head.depthwise.weight[0m
[34mins_embed_head.offset_head.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.offset_head.pointwise.weight[0m
[34mins_embed_head.offset_predictor.{bias, weight}[0m
[34mpsg_relation_net.cls_fc.{bias, weight}[0m
[34mpsg_relation_net.map_dict.res3.{bias, weight}[0m
[34mpsg_relation_net.map_dict.res5.{bias, weight}[0m
[34mpsg_relation_net.rel_fc.{bias, weight}[0m
[34mpsg_relation_net.tf_decoder.proj_cls.{bias, weight}[0m
[34mpsg_relation_net.tf_decoder.proj_rel.{bias, weight}[0m
[34mpsg_relation_net.tf_decoder.qkv.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.0.attn.proj.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.0.attn.qkv.weight[0m
[34mpsg_relation_net.tf_encoder.blocks.0.mlp.fc1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.0.mlp.fc2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.0.norm1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.0.norm2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.1.attn.proj.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.1.attn.qkv.weight[0m
[34mpsg_relation_net.tf_encoder.blocks.1.mlp.fc1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.1.mlp.fc2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.1.norm1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.1.norm2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.2.attn.proj.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.2.attn.qkv.weight[0m
[34mpsg_relation_net.tf_encoder.blocks.2.mlp.fc1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.2.mlp.fc2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.2.norm1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.2.norm2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.3.attn.proj.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.3.attn.qkv.weight[0m
[34mpsg_relation_net.tf_encoder.blocks.3.mlp.fc1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.3.mlp.fc2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.3.norm1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.3.norm2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.norm.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.pos_embed[0m
[34mpsg_relation_net.{Q_cls, Q_rel}[0m
[34msem_seg_head.decoder.res2.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.depthwise.weight[0m
[34msem_seg_head.decoder.res2.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.pointwise.weight[0m
[34msem_seg_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.project_conv.weight[0m
[34msem_seg_head.decoder.res3.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.fuse_conv.depthwise.weight[0m
[34msem_seg_head.decoder.res3.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.fuse_conv.pointwise.weight[0m
[34msem_seg_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.project_conv.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.0.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.depthwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.pointwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.depthwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.pointwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.depthwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.pointwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.4.1.{bias, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.project.weight[0m
[34msem_seg_head.head.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.head.depthwise.weight[0m
[34msem_seg_head.head.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.head.pointwise.weight[0m
[34msem_seg_head.predictor.{bias, weight}[0m
[10/10 10:16:11] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mres2.0.conv1.norm.num_batches_tracked[0m
  [35mres2.0.conv2.norm.num_batches_tracked[0m
  [35mres2.0.conv3.norm.num_batches_tracked[0m
  [35mres2.0.shortcut.norm.num_batches_tracked[0m
  [35mres2.1.conv1.norm.num_batches_tracked[0m
  [35mres2.1.conv2.norm.num_batches_tracked[0m
  [35mres2.1.conv3.norm.num_batches_tracked[0m
  [35mres2.2.conv1.norm.num_batches_tracked[0m
  [35mres2.2.conv2.norm.num_batches_tracked[0m
  [35mres2.2.conv3.norm.num_batches_tracked[0m
  [35mres3.0.conv1.norm.num_batches_tracked[0m
  [35mres3.0.conv2.norm.num_batches_tracked[0m
  [35mres3.0.conv3.norm.num_batches_tracked[0m
  [35mres3.0.shortcut.norm.num_batches_tracked[0m
  [35mres3.1.conv1.norm.num_batches_tracked[0m
  [35mres3.1.conv2.norm.num_batches_tracked[0m
  [35mres3.1.conv3.norm.num_batches_tracked[0m
  [35mres3.2.conv1.norm.num_batches_tracked[0m
  [35mres3.2.conv2.norm.num_batches_tracked[0m
  [35mres3.2.conv3.norm.num_batches_tracked[0m
  [35mres3.3.conv1.norm.num_batches_tracked[0m
  [35mres3.3.conv2.norm.num_batches_tracked[0m
  [35mres3.3.conv3.norm.num_batches_tracked[0m
  [35mres4.0.conv1.norm.num_batches_tracked[0m
  [35mres4.0.conv2.norm.num_batches_tracked[0m
  [35mres4.0.conv3.norm.num_batches_tracked[0m
  [35mres4.0.shortcut.norm.num_batches_tracked[0m
  [35mres4.1.conv1.norm.num_batches_tracked[0m
  [35mres4.1.conv2.norm.num_batches_tracked[0m
  [35mres4.1.conv3.norm.num_batches_tracked[0m
  [35mres4.10.conv1.norm.num_batches_tracked[0m
  [35mres4.10.conv2.norm.num_batches_tracked[0m
  [35mres4.10.conv3.norm.num_batches_tracked[0m
  [35mres4.11.conv1.norm.num_batches_tracked[0m
  [35mres4.11.conv2.norm.num_batches_tracked[0m
  [35mres4.11.conv3.norm.num_batches_tracked[0m
  [35mres4.12.conv1.norm.num_batches_tracked[0m
  [35mres4.12.conv2.norm.num_batches_tracked[0m
  [35mres4.12.conv3.norm.num_batches_tracked[0m
  [35mres4.13.conv1.norm.num_batches_tracked[0m
  [35mres4.13.conv2.norm.num_batches_tracked[0m
  [35mres4.13.conv3.norm.num_batches_tracked[0m
  [35mres4.14.conv1.norm.num_batches_tracked[0m
  [35mres4.14.conv2.norm.num_batches_tracked[0m
  [35mres4.14.conv3.norm.num_batches_tracked[0m
  [35mres4.15.conv1.norm.num_batches_tracked[0m
  [35mres4.15.conv2.norm.num_batches_tracked[0m
  [35mres4.15.conv3.norm.num_batches_tracked[0m
  [35mres4.16.conv1.norm.num_batches_tracked[0m
  [35mres4.16.conv2.norm.num_batches_tracked[0m
  [35mres4.16.conv3.norm.num_batches_tracked[0m
  [35mres4.17.conv1.norm.num_batches_tracked[0m
  [35mres4.17.conv2.norm.num_batches_tracked[0m
  [35mres4.17.conv3.norm.num_batches_tracked[0m
  [35mres4.18.conv1.norm.num_batches_tracked[0m
  [35mres4.18.conv2.norm.num_batches_tracked[0m
  [35mres4.18.conv3.norm.num_batches_tracked[0m
  [35mres4.19.conv1.norm.num_batches_tracked[0m
  [35mres4.19.conv2.norm.num_batches_tracked[0m
  [35mres4.19.conv3.norm.num_batches_tracked[0m
  [35mres4.2.conv1.norm.num_batches_tracked[0m
  [35mres4.2.conv2.norm.num_batches_tracked[0m
  [35mres4.2.conv3.norm.num_batches_tracked[0m
  [35mres4.20.conv1.norm.num_batches_tracked[0m
  [35mres4.20.conv2.norm.num_batches_tracked[0m
  [35mres4.20.conv3.norm.num_batches_tracked[0m
  [35mres4.21.conv1.norm.num_batches_tracked[0m
  [35mres4.21.conv2.norm.num_batches_tracked[0m
  [35mres4.21.conv3.norm.num_batches_tracked[0m
  [35mres4.22.conv1.norm.num_batches_tracked[0m
  [35mres4.22.conv2.norm.num_batches_tracked[0m
  [35mres4.22.conv3.norm.num_batches_tracked[0m
  [35mres4.3.conv1.norm.num_batches_tracked[0m
  [35mres4.3.conv2.norm.num_batches_tracked[0m
  [35mres4.3.conv3.norm.num_batches_tracked[0m
  [35mres4.4.conv1.norm.num_batches_tracked[0m
  [35mres4.4.conv2.norm.num_batches_tracked[0m
  [35mres4.4.conv3.norm.num_batches_tracked[0m
  [35mres4.5.conv1.norm.num_batches_tracked[0m
  [35mres4.5.conv2.norm.num_batches_tracked[0m
  [35mres4.5.conv3.norm.num_batches_tracked[0m
  [35mres4.6.conv1.norm.num_batches_tracked[0m
  [35mres4.6.conv2.norm.num_batches_tracked[0m
  [35mres4.6.conv3.norm.num_batches_tracked[0m
  [35mres4.7.conv1.norm.num_batches_tracked[0m
  [35mres4.7.conv2.norm.num_batches_tracked[0m
  [35mres4.7.conv3.norm.num_batches_tracked[0m
  [35mres4.8.conv1.norm.num_batches_tracked[0m
  [35mres4.8.conv2.norm.num_batches_tracked[0m
  [35mres4.8.conv3.norm.num_batches_tracked[0m
  [35mres4.9.conv1.norm.num_batches_tracked[0m
  [35mres4.9.conv2.norm.num_batches_tracked[0m
  [35mres4.9.conv3.norm.num_batches_tracked[0m
  [35mres5.0.conv1.norm.num_batches_tracked[0m
  [35mres5.0.conv2.norm.num_batches_tracked[0m
  [35mres5.0.conv3.norm.num_batches_tracked[0m
  [35mres5.0.shortcut.norm.num_batches_tracked[0m
  [35mres5.1.conv1.norm.num_batches_tracked[0m
  [35mres5.1.conv2.norm.num_batches_tracked[0m
  [35mres5.1.conv3.norm.num_batches_tracked[0m
  [35mres5.2.conv1.norm.num_batches_tracked[0m
  [35mres5.2.conv2.norm.num_batches_tracked[0m
  [35mres5.2.conv3.norm.num_batches_tracked[0m
  [35mstem.conv1.norm.num_batches_tracked[0m
  [35mstem.conv2.norm.num_batches_tracked[0m
  [35mstem.conv3.norm.num_batches_tracked[0m
  [35mstem.fc.{bias, weight}[0m
[10/10 10:16:11] d2.engine.train_loop INFO: Starting training from iteration 0
[10/10 10:16:54] d2.utils.events INFO:  eta: 7:52:12  iter: 19  total_loss: 22.85  loss_sem_seg: 18.82  loss_relation: 1.438  loss_center: 1.162  loss_offset: 1.325  time: 1.4183  data_time: 0.6955  lr: 9.982e-06  max_mem: 29130M
[10/10 10:17:23] d2.utils.events INFO:  eta: 7:53:42  iter: 39  total_loss: 23.08  loss_sem_seg: 19.27  loss_relation: 1.194  loss_center: 1.212  loss_offset: 1.198  time: 1.4362  data_time: 0.0292  lr: 1.9945e-05  max_mem: 29130M
[10/10 10:17:52] d2.utils.events INFO:  eta: 7:55:56  iter: 59  total_loss: 24.06  loss_sem_seg: 20.19  loss_relation: 1.075  loss_center: 1.144  loss_offset: 1.179  time: 1.4398  data_time: 0.0280  lr: 2.9891e-05  max_mem: 29130M
[10/10 10:18:21] d2.utils.events INFO:  eta: 7:54:17  iter: 79  total_loss: 23.1  loss_sem_seg: 19.81  loss_relation: 1.008  loss_center: 1.175  loss_offset: 1.351  time: 1.4360  data_time: 0.0266  lr: 3.9818e-05  max_mem: 29130M
[10/10 10:18:49] d2.utils.events INFO:  eta: 7:53:05  iter: 99  total_loss: 21.85  loss_sem_seg: 18.76  loss_relation: 0.9607  loss_center: 1.003  loss_offset: 1.353  time: 1.4329  data_time: 0.0272  lr: 4.9728e-05  max_mem: 29130M
[10/10 10:19:17] d2.utils.events INFO:  eta: 7:51:38  iter: 119  total_loss: 21.01  loss_sem_seg: 17.91  loss_relation: 0.928  loss_center: 0.9769  loss_offset: 1.281  time: 1.4301  data_time: 0.0257  lr: 5.9619e-05  max_mem: 29130M
[10/10 10:19:46] d2.utils.events INFO:  eta: 7:50:51  iter: 139  total_loss: 21.12  loss_sem_seg: 17.64  loss_relation: 0.9115  loss_center: 0.9335  loss_offset: 1.2  time: 1.4275  data_time: 0.0275  lr: 6.9493e-05  max_mem: 29130M
[10/10 10:20:14] d2.utils.events INFO:  eta: 7:50:06  iter: 159  total_loss: 17.88  loss_sem_seg: 14.79  loss_relation: 0.8624  loss_center: 1.055  loss_offset: 1.237  time: 1.4255  data_time: 0.0255  lr: 7.9348e-05  max_mem: 29130M
[10/10 10:20:42] d2.utils.events INFO:  eta: 7:49:14  iter: 179  total_loss: 18.8  loss_sem_seg: 15.73  loss_relation: 0.8127  loss_center: 0.9657  loss_offset: 1.278  time: 1.4238  data_time: 0.0272  lr: 8.9186e-05  max_mem: 29130M
[10/10 10:21:10] d2.utils.events INFO:  eta: 7:48:25  iter: 199  total_loss: 18.59  loss_sem_seg: 15.52  loss_relation: 0.7432  loss_center: 1.127  loss_offset: 1.194  time: 1.4226  data_time: 0.0270  lr: 9.9005e-05  max_mem: 29130M
[10/10 10:21:39] d2.utils.events INFO:  eta: 7:47:41  iter: 219  total_loss: 17.19  loss_sem_seg: 14.39  loss_relation: 0.6914  loss_center: 0.8452  loss_offset: 1.279  time: 1.4216  data_time: 0.0281  lr: 0.00010881  max_mem: 29130M
[10/10 10:22:07] d2.utils.events INFO:  eta: 7:46:54  iter: 239  total_loss: 17.1  loss_sem_seg: 14.19  loss_relation: 0.6686  loss_center: 0.8749  loss_offset: 1.293  time: 1.4203  data_time: 0.0253  lr: 0.00011859  max_mem: 29130M
[10/10 10:22:35] d2.utils.events INFO:  eta: 7:46:07  iter: 259  total_loss: 15.84  loss_sem_seg: 12.94  loss_relation: 0.6096  loss_center: 1.016  loss_offset: 1.274  time: 1.4195  data_time: 0.0288  lr: 0.00012836  max_mem: 29130M
[10/10 10:23:03] d2.utils.events INFO:  eta: 7:45:32  iter: 279  total_loss: 16.13  loss_sem_seg: 13.16  loss_relation: 0.6111  loss_center: 0.9923  loss_offset: 1.219  time: 1.4189  data_time: 0.0299  lr: 0.0001381  max_mem: 29130M
[10/10 10:23:31] d2.utils.events INFO:  eta: 7:44:50  iter: 299  total_loss: 14.12  loss_sem_seg: 11.35  loss_relation: 0.5956  loss_center: 0.8759  loss_offset: 1.278  time: 1.4180  data_time: 0.0262  lr: 0.00014783  max_mem: 29130M
[10/10 10:23:59] d2.utils.events INFO:  eta: 7:43:46  iter: 319  total_loss: 14.82  loss_sem_seg: 11.98  loss_relation: 0.6009  loss_center: 1.035  loss_offset: 1.258  time: 1.4172  data_time: 0.0273  lr: 0.00015754  max_mem: 29130M
[10/10 10:24:28] d2.utils.events INFO:  eta: 7:43:18  iter: 339  total_loss: 13.77  loss_sem_seg: 11.03  loss_relation: 0.5989  loss_center: 0.9239  loss_offset: 1.085  time: 1.4169  data_time: 0.0289  lr: 0.00016724  max_mem: 29130M
[10/10 10:24:56] d2.utils.events INFO:  eta: 7:42:34  iter: 359  total_loss: 13.52  loss_sem_seg: 10.8  loss_relation: 0.5882  loss_center: 0.9422  loss_offset: 1.226  time: 1.4163  data_time: 0.0252  lr: 0.00017691  max_mem: 29130M
[10/10 10:25:24] d2.utils.events INFO:  eta: 7:42:00  iter: 379  total_loss: 13.33  loss_sem_seg: 10.64  loss_relation: 0.5794  loss_center: 0.9908  loss_offset: 1.247  time: 1.4159  data_time: 0.0281  lr: 0.00018657  max_mem: 29130M
[10/10 10:25:52] d2.utils.events INFO:  eta: 7:41:28  iter: 399  total_loss: 12.19  loss_sem_seg: 9.574  loss_relation: 0.5584  loss_center: 1.103  loss_offset: 1.159  time: 1.4154  data_time: 0.0275  lr: 0.00019621  max_mem: 29130M
[10/10 10:26:20] d2.utils.events INFO:  eta: 7:40:54  iter: 419  total_loss: 13.93  loss_sem_seg: 11.05  loss_relation: 0.5736  loss_center: 0.8867  loss_offset: 1.391  time: 1.4151  data_time: 0.0262  lr: 0.00020583  max_mem: 29130M
[10/10 10:26:48] d2.utils.events INFO:  eta: 7:40:17  iter: 439  total_loss: 13.6  loss_sem_seg: 10.95  loss_relation: 0.5806  loss_center: 0.9584  loss_offset: 1.126  time: 1.4148  data_time: 0.0289  lr: 0.00021543  max_mem: 29130M
[10/10 10:27:17] d2.utils.events INFO:  eta: 7:39:46  iter: 459  total_loss: 12.81  loss_sem_seg: 9.902  loss_relation: 0.574  loss_center: 0.9381  loss_offset: 1.341  time: 1.4146  data_time: 0.0288  lr: 0.00022502  max_mem: 29130M
[10/10 10:27:45] d2.utils.events INFO:  eta: 7:39:15  iter: 479  total_loss: 12.62  loss_sem_seg: 9.66  loss_relation: 0.5854  loss_center: 1.001  loss_offset: 1.242  time: 1.4146  data_time: 0.0290  lr: 0.00023459  max_mem: 29130M
[10/10 10:28:13] d2.utils.events INFO:  eta: 7:38:39  iter: 499  total_loss: 12.65  loss_sem_seg: 9.678  loss_relation: 0.5742  loss_center: 0.948  loss_offset: 1.174  time: 1.4144  data_time: 0.0281  lr: 0.00024414  max_mem: 29130M
[10/10 10:28:41] d2.utils.events INFO:  eta: 7:37:58  iter: 519  total_loss: 12.4  loss_sem_seg: 9.772  loss_relation: 0.5652  loss_center: 1.042  loss_offset: 1.065  time: 1.4142  data_time: 0.0291  lr: 0.00025367  max_mem: 29130M
[10/10 10:29:10] d2.utils.events INFO:  eta: 7:37:28  iter: 539  total_loss: 12.77  loss_sem_seg: 9.829  loss_relation: 0.581  loss_center: 1.03  loss_offset: 1.063  time: 1.4142  data_time: 0.0268  lr: 0.00026318  max_mem: 29130M
[10/10 10:29:38] d2.utils.events INFO:  eta: 7:36:55  iter: 559  total_loss: 12.73  loss_sem_seg: 10  loss_relation: 0.5669  loss_center: 0.9026  loss_offset: 1.029  time: 1.4140  data_time: 0.0287  lr: 0.00027267  max_mem: 29130M
[10/10 10:30:06] d2.utils.events INFO:  eta: 7:36:24  iter: 579  total_loss: 13.3  loss_sem_seg: 10.51  loss_relation: 0.5899  loss_center: 0.9857  loss_offset: 1.102  time: 1.4138  data_time: 0.0281  lr: 0.00028215  max_mem: 29130M
[10/10 10:30:34] d2.utils.events INFO:  eta: 7:35:54  iter: 599  total_loss: 11.23  loss_sem_seg: 8.681  loss_relation: 0.5717  loss_center: 0.9505  loss_offset: 1.058  time: 1.4136  data_time: 0.0269  lr: 0.00029161  max_mem: 29130M
[10/10 10:31:02] d2.utils.events INFO:  eta: 7:35:23  iter: 619  total_loss: 11.38  loss_sem_seg: 8.475  loss_relation: 0.5709  loss_center: 1.065  loss_offset: 1.176  time: 1.4134  data_time: 0.0279  lr: 0.00030105  max_mem: 29130M
[10/10 10:31:31] d2.utils.events INFO:  eta: 7:34:54  iter: 639  total_loss: 11.32  loss_sem_seg: 8.949  loss_relation: 0.5518  loss_center: 0.9162  loss_offset: 1.12  time: 1.4133  data_time: 0.0297  lr: 0.00031047  max_mem: 29130M
[10/10 10:31:59] d2.utils.events INFO:  eta: 7:34:26  iter: 659  total_loss: 12.26  loss_sem_seg: 9.704  loss_relation: 0.5681  loss_center: 0.9231  loss_offset: 1.027  time: 1.4133  data_time: 0.0274  lr: 0.00031988  max_mem: 29130M
[10/10 10:32:27] d2.utils.events INFO:  eta: 7:33:58  iter: 679  total_loss: 11.76  loss_sem_seg: 8.982  loss_relation: 0.5626  loss_center: 0.8912  loss_offset: 1.029  time: 1.4132  data_time: 0.0294  lr: 0.00032926  max_mem: 29130M
[10/10 10:32:55] d2.utils.events INFO:  eta: 7:33:29  iter: 699  total_loss: 11.3  loss_sem_seg: 8.695  loss_relation: 0.5568  loss_center: 0.8467  loss_offset: 1.044  time: 1.4130  data_time: 0.0279  lr: 0.00033863  max_mem: 29130M
[10/10 10:33:23] d2.utils.events INFO:  eta: 7:33:00  iter: 719  total_loss: 12.6  loss_sem_seg: 9.843  loss_relation: 0.5782  loss_center: 1.036  loss_offset: 1.022  time: 1.4129  data_time: 0.0280  lr: 0.00034798  max_mem: 29130M
[10/10 10:33:51] d2.utils.events INFO:  eta: 7:32:27  iter: 739  total_loss: 11.95  loss_sem_seg: 9.055  loss_relation: 0.5643  loss_center: 1.012  loss_offset: 1.095  time: 1.4128  data_time: 0.0271  lr: 0.00035732  max_mem: 29130M
[10/10 10:34:20] d2.utils.events INFO:  eta: 7:32:04  iter: 759  total_loss: 12.39  loss_sem_seg: 9.81  loss_relation: 0.5859  loss_center: 0.9467  loss_offset: 1.083  time: 1.4128  data_time: 0.0325  lr: 0.00036663  max_mem: 29130M
[10/10 10:34:48] d2.utils.events INFO:  eta: 7:31:34  iter: 779  total_loss: 11.44  loss_sem_seg: 8.869  loss_relation: 0.5501  loss_center: 0.9832  loss_offset: 0.9734  time: 1.4126  data_time: 0.0273  lr: 0.00037593  max_mem: 29130M
[10/10 10:35:16] d2.utils.events INFO:  eta: 7:31:01  iter: 799  total_loss: 11.07  loss_sem_seg: 8.631  loss_relation: 0.5642  loss_center: 1.047  loss_offset: 0.8859  time: 1.4125  data_time: 0.0279  lr: 0.0003852  max_mem: 29130M
[10/10 10:35:44] d2.utils.events INFO:  eta: 7:30:33  iter: 819  total_loss: 11.52  loss_sem_seg: 8.452  loss_relation: 0.5876  loss_center: 1.043  loss_offset: 0.9519  time: 1.4124  data_time: 0.0291  lr: 0.00039446  max_mem: 29130M
[10/10 10:36:13] d2.utils.events INFO:  eta: 7:30:05  iter: 839  total_loss: 10.62  loss_sem_seg: 8.042  loss_relation: 0.5806  loss_center: 1.116  loss_offset: 0.8752  time: 1.4124  data_time: 0.0269  lr: 0.00040371  max_mem: 29130M
[10/10 10:36:41] d2.utils.events INFO:  eta: 7:29:37  iter: 859  total_loss: 10.1  loss_sem_seg: 7.732  loss_relation: 0.5514  loss_center: 1.009  loss_offset: 0.9114  time: 1.4123  data_time: 0.0276  lr: 0.00041293  max_mem: 29130M
[10/10 10:37:09] d2.utils.events INFO:  eta: 7:29:06  iter: 879  total_loss: 10.26  loss_sem_seg: 7.963  loss_relation: 0.559  loss_center: 1.009  loss_offset: 0.8249  time: 1.4123  data_time: 0.0256  lr: 0.00042213  max_mem: 29130M
[10/10 10:37:37] d2.utils.events INFO:  eta: 7:28:36  iter: 899  total_loss: 9.874  loss_sem_seg: 7.479  loss_relation: 0.5431  loss_center: 0.9797  loss_offset: 0.8329  time: 1.4122  data_time: 0.0262  lr: 0.00043132  max_mem: 29130M
[10/10 10:38:05] d2.utils.events INFO:  eta: 7:28:07  iter: 919  total_loss: 10.89  loss_sem_seg: 8.36  loss_relation: 0.5555  loss_center: 0.9722  loss_offset: 0.8828  time: 1.4120  data_time: 0.0262  lr: 0.00044049  max_mem: 29130M
[10/10 10:38:33] d2.utils.events INFO:  eta: 7:27:38  iter: 939  total_loss: 10.56  loss_sem_seg: 8.039  loss_relation: 0.5669  loss_center: 1.015  loss_offset: 0.8089  time: 1.4120  data_time: 0.0272  lr: 0.00044964  max_mem: 29130M
[10/10 10:39:01] d2.utils.events INFO:  eta: 7:27:08  iter: 959  total_loss: 9.926  loss_sem_seg: 7.486  loss_relation: 0.5672  loss_center: 1.011  loss_offset: 0.8467  time: 1.4118  data_time: 0.0260  lr: 0.00045878  max_mem: 29130M
[10/10 10:39:30] d2.utils.events INFO:  eta: 7:26:40  iter: 979  total_loss: 10.59  loss_sem_seg: 8.035  loss_relation: 0.5455  loss_center: 0.9773  loss_offset: 0.898  time: 1.4118  data_time: 0.0297  lr: 0.00046789  max_mem: 29130M
[10/10 10:39:58] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_0000999.pth
[10/10 10:40:00] d2.data.build INFO: Distribution of instances among all 133 categories:
[36m|   category    | #instances   |   category    | #instances   |   category    | #instances   |
|:-------------:|:-------------|:-------------:|:-------------|:-------------:|:-------------|
|    person     | 1980         |    bicycle    | 80           |      car      | 332          |
|  motorcycle   | 51           |   airplane    | 15           |      bus      | 38           |
|     train     | 21           |     truck     | 70           |     boat      | 53           |
| traffic light | 93           | fire hydrant  | 9            |   stop sign   | 8            |
| parking meter | 1            |     bench     | 56           |     bird      | 86           |
|      cat      | 8            |      dog      | 18           |     horse     | 42           |
|     sheep     | 47           |      cow      | 30           |   elephant    | 29           |
|     bear      | 10           |     zebra     | 47           |    giraffe    | 33           |
|   backpack    | 55           |   umbrella    | 44           |    handbag    | 130          |
|      tie      | 33           |   suitcase    | 18           |    frisbee    | 7            |
|     skis      | 44           |   snowboard   | 11           |  sports ball  | 46           |
|     kite      | 94           | baseball bat  | 24           | baseball gl.. | 32           |
|  skateboard   | 37           |   surfboard   | 55           | tennis racket | 30           |
|    bottle     | 77           |  wine glass   | 41           |      cup      | 104          |
|     fork      | 23           |     knife     | 30           |     spoon     | 23           |
|     bowl      | 51           |    banana     | 52           |     apple     | 14           |
|   sandwich    | 5            |    orange     | 13           |   broccoli    | 3            |
|    carrot     | 16           |    hot dog    | 8            |     pizza     | 14           |
|     donut     | 9            |     cake      | 15           |     chair     | 197          |
|     couch     | 17           | potted plant  | 10           |      bed      | 10           |
| dining table  | 45           |    toilet     | 6            |      tv       | 12           |
|    laptop     | 16           |     mouse     | 2            |    remote     | 23           |
|   keyboard    | 2            |  cell phone   | 25           |   microwave   | 0            |
|     oven      | 3            |    toaster    | 0            |     sink      | 7            |
| refrigerator  | 2            |     book      | 74           |     clock     | 11           |
|     vase      | 1            |   scissors    | 0            |  teddy bear   | 33           |
|  hair drier   | 0            |  toothbrush   | 8            |    banner     | 29           |
|    blanket    | 13           |    bridge     | 9            |   cardboard   | 14           |
|    counter    | 7            |    curtain    | 12           |  door-stuff   | 30           |
|  floor-wood   | 16           |    flower     | 9            |     fruit     | 6            |
|    gravel     | 10           |     house     | 33           |     light     | 41           |
| mirror-stuff  | 7            |      net      | 7            |    pillow     | 7            |
|   platform    | 16           | playingfield  | 39           |   railroad    | 17           |
|     river     | 10           |     road      | 101          |     roof      | 20           |
|     sand      | 28           |      sea      | 53           |     shelf     | 19           |
|     snow      | 27           |    stairs     | 16           |     tent      | 11           |
|     towel     | 12           |  wall-brick   | 24           |  wall-stone   | 15           |
|   wall-tile   | 12           |   wall-wood   | 34           |  water-other  | 10           |
| window-blind  | 8            | window-other  | 40           |  tree-merged  | 224          |
| fence-merged  | 91           | ceiling-mer.. | 32           | sky-other-m.. | 233          |
| cabinet-mer.. | 16           | table-merged  | 46           | floor-other.. | 42           |
| pavement-me.. | 134          | mountain-me.. | 31           | grass-merged  | 128          |
|  dirt-merged  | 57           | paper-merged  | 29           | food-other-.. | 24           |
| building-ot.. | 152          |  rock-merged  | 22           | wall-other-.. | 145          |
|  rug-merged   | 14           |               |              |               |              |
|     total     | 7001         |               |              |               |              |[0m
[10/10 10:40:00] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[10/10 10:40:00] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/10 10:40:00] d2.data.common INFO: Serialized dataset takes 0.86 MiB
[10/10 10:40:00] d2.evaluation.evaluator INFO: Start inference on 250 batches
[10/10 10:40:14] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0005 s/iter. Inference: 0.0924 s/iter. Eval: 0.0274 s/iter. Total: 0.1204 s/iter. ETA=0:00:28
[10/10 10:40:19] d2.evaluation.evaluator INFO: Inference done 53/250. Dataloading: 0.0012 s/iter. Inference: 0.0916 s/iter. Eval: 0.0276 s/iter. Total: 0.1205 s/iter. ETA=0:00:23
[10/10 10:40:24] d2.evaluation.evaluator INFO: Inference done 96/250. Dataloading: 0.0014 s/iter. Inference: 0.0903 s/iter. Eval: 0.0275 s/iter. Total: 0.1192 s/iter. ETA=0:00:18
[10/10 10:40:29] d2.evaluation.evaluator INFO: Inference done 137/250. Dataloading: 0.0014 s/iter. Inference: 0.0908 s/iter. Eval: 0.0281 s/iter. Total: 0.1204 s/iter. ETA=0:00:13
[10/10 10:40:34] d2.evaluation.evaluator INFO: Inference done 181/250. Dataloading: 0.0015 s/iter. Inference: 0.0900 s/iter. Eval: 0.0278 s/iter. Total: 0.1193 s/iter. ETA=0:00:08
[10/10 10:40:39] d2.evaluation.evaluator INFO: Inference done 224/250. Dataloading: 0.0015 s/iter. Inference: 0.0898 s/iter. Eval: 0.0276 s/iter. Total: 0.1189 s/iter. ETA=0:00:03
[10/10 10:40:43] d2.evaluation.evaluator INFO: Total inference time: 0:00:29.347460 (0.119786 s / iter per device, on 2 devices)
[10/10 10:40:43] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:21 (0.089364 s / iter per device, on 2 devices)
[10/10 10:40:43] d2.projects.panoptic_deeplab.evaluator INFO: Writing all panoptic predictions to /tmp/panoptic_evalgdbt4vqf ...
[10/10 10:40:47] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Relations Evaluation Results: 4.0
[10/10 10:40:47] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Evaluation Results:
|        |  PQ   |   SQ   |  RQ   |  #categories  |
|:------:|:-----:|:------:|:-----:|:-------------:|
|  All   | 1.396 | 8.011  | 1.916 |      129      |
| Things | 0.144 | 2.369  | 0.223 |      76       |
| Stuff  | 3.191 | 16.102 | 4.343 |      53       |
[10/10 10:40:47] d2.engine.defaults INFO: Evaluation results for psg_val in csv format:
[10/10 10:40:47] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/10 10:40:47] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[10/10 10:40:47] d2.evaluation.testing INFO: copypaste: 1.3958,8.0111,1.9157,0.1440,2.3690,0.2232,3.1908,16.1017,4.3428
[10/10 10:40:47] d2.evaluation.testing INFO: copypaste: Task: relation_mean_recall
[10/10 10:40:47] d2.evaluation.testing INFO: copypaste: mean_recall
[10/10 10:40:47] d2.evaluation.testing INFO: copypaste: 0.0400
[10/10 10:40:47] d2.utils.events INFO:  eta: 7:26:11  iter: 999  total_loss: 10.45  loss_sem_seg: 8.068  loss_relation: 0.5321  loss_center: 0.8912  loss_offset: 0.9009  time: 1.4117  data_time: 0.0283  lr: 0.00047699  max_mem: 29130M
[10/10 10:40:47] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_best.pth
[10/10 10:40:48] d2.engine.hooks INFO: Saved first model at 0.04000 @ 999 steps
[10/10 10:41:16] d2.utils.events INFO:  eta: 7:25:36  iter: 1019  total_loss: 11.01  loss_sem_seg: 8.487  loss_relation: 0.543  loss_center: 1.021  loss_offset: 0.8688  time: 1.4115  data_time: 0.0275  lr: 0.00047701  max_mem: 29130M
[10/10 10:41:45] d2.utils.events INFO:  eta: 7:25:03  iter: 1039  total_loss: 11.37  loss_sem_seg: 8.786  loss_relation: 0.5383  loss_center: 0.9111  loss_offset: 0.9128  time: 1.4114  data_time: 0.0289  lr: 0.00047656  max_mem: 29130M
[10/10 10:42:13] d2.utils.events INFO:  eta: 7:24:29  iter: 1059  total_loss: 11.05  loss_sem_seg: 8.496  loss_relation: 0.5436  loss_center: 0.986  loss_offset: 0.8749  time: 1.4113  data_time: 0.0286  lr: 0.00047611  max_mem: 29130M
[10/10 10:42:41] d2.utils.events INFO:  eta: 7:23:54  iter: 1079  total_loss: 10.68  loss_sem_seg: 7.982  loss_relation: 0.5569  loss_center: 1.039  loss_offset: 0.8369  time: 1.4112  data_time: 0.0246  lr: 0.00047566  max_mem: 29130M
[10/10 10:43:09] d2.utils.events INFO:  eta: 7:23:22  iter: 1099  total_loss: 10.79  loss_sem_seg: 8.285  loss_relation: 0.567  loss_center: 1.015  loss_offset: 0.8364  time: 1.4111  data_time: 0.0294  lr: 0.0004752  max_mem: 29130M
[10/10 10:43:37] d2.utils.events INFO:  eta: 7:22:48  iter: 1119  total_loss: 10.51  loss_sem_seg: 8.327  loss_relation: 0.5418  loss_center: 0.8702  loss_offset: 0.8617  time: 1.4110  data_time: 0.0261  lr: 0.00047475  max_mem: 29130M
[10/10 10:44:05] d2.utils.events INFO:  eta: 7:22:18  iter: 1139  total_loss: 11.09  loss_sem_seg: 8.472  loss_relation: 0.5621  loss_center: 1.127  loss_offset: 0.8295  time: 1.4109  data_time: 0.0267  lr: 0.0004743  max_mem: 29130M
[10/10 10:44:33] d2.utils.events INFO:  eta: 7:21:48  iter: 1159  total_loss: 9.637  loss_sem_seg: 7.221  loss_relation: 0.5502  loss_center: 0.985  loss_offset: 0.8941  time: 1.4108  data_time: 0.0281  lr: 0.00047385  max_mem: 29130M
[10/10 10:45:02] d2.utils.events INFO:  eta: 7:21:19  iter: 1179  total_loss: 10.4  loss_sem_seg: 7.8  loss_relation: 0.5542  loss_center: 0.9118  loss_offset: 0.9013  time: 1.4108  data_time: 0.0305  lr: 0.00047339  max_mem: 29130M
[10/10 10:45:30] d2.utils.events INFO:  eta: 7:20:47  iter: 1199  total_loss: 9.493  loss_sem_seg: 7.413  loss_relation: 0.5497  loss_center: 0.8864  loss_offset: 0.7622  time: 1.4106  data_time: 0.0263  lr: 0.00047294  max_mem: 29130M
[10/10 10:45:58] d2.utils.events INFO:  eta: 7:20:16  iter: 1219  total_loss: 9.988  loss_sem_seg: 7.874  loss_relation: 0.5215  loss_center: 0.9031  loss_offset: 0.7592  time: 1.4105  data_time: 0.0272  lr: 0.00047249  max_mem: 29130M
[10/10 10:46:26] d2.utils.events INFO:  eta: 7:19:47  iter: 1239  total_loss: 10.3  loss_sem_seg: 7.879  loss_relation: 0.5572  loss_center: 0.9202  loss_offset: 0.7635  time: 1.4105  data_time: 0.0272  lr: 0.00047203  max_mem: 29130M
[10/10 10:46:54] d2.utils.events INFO:  eta: 7:19:18  iter: 1259  total_loss: 10.16  loss_sem_seg: 7.543  loss_relation: 0.5522  loss_center: 1.05  loss_offset: 0.7596  time: 1.4104  data_time: 0.0281  lr: 0.00047158  max_mem: 29130M
[10/10 10:47:22] d2.utils.events INFO:  eta: 7:18:44  iter: 1279  total_loss: 10.19  loss_sem_seg: 7.887  loss_relation: 0.5654  loss_center: 0.8464  loss_offset: 0.8429  time: 1.4102  data_time: 0.0257  lr: 0.00047113  max_mem: 29130M
[10/10 10:47:50] d2.utils.events INFO:  eta: 7:18:17  iter: 1299  total_loss: 10.36  loss_sem_seg: 7.931  loss_relation: 0.5365  loss_center: 1.006  loss_offset: 0.8329  time: 1.4102  data_time: 0.0279  lr: 0.00047068  max_mem: 29130M
[10/10 10:48:18] d2.utils.events INFO:  eta: 7:17:47  iter: 1319  total_loss: 10.1  loss_sem_seg: 7.732  loss_relation: 0.5273  loss_center: 0.8888  loss_offset: 0.8622  time: 1.4101  data_time: 0.0283  lr: 0.00047022  max_mem: 29130M
[10/10 10:48:46] d2.utils.events INFO:  eta: 7:17:21  iter: 1339  total_loss: 10.23  loss_sem_seg: 7.924  loss_relation: 0.5235  loss_center: 1.011  loss_offset: 0.8427  time: 1.4101  data_time: 0.0261  lr: 0.00046977  max_mem: 29130M
[10/10 10:49:14] d2.utils.events INFO:  eta: 7:16:53  iter: 1359  total_loss: 9.625  loss_sem_seg: 7.287  loss_relation: 0.5298  loss_center: 0.9413  loss_offset: 0.764  time: 1.4100  data_time: 0.0260  lr: 0.00046932  max_mem: 29130M
[10/10 10:49:42] d2.utils.events INFO:  eta: 7:16:22  iter: 1379  total_loss: 9.373  loss_sem_seg: 6.956  loss_relation: 0.5204  loss_center: 0.8336  loss_offset: 0.7295  time: 1.4098  data_time: 0.0265  lr: 0.00046886  max_mem: 29130M
[10/10 10:50:11] d2.utils.events INFO:  eta: 7:15:54  iter: 1399  total_loss: 10.46  loss_sem_seg: 7.979  loss_relation: 0.5313  loss_center: 1.054  loss_offset: 0.7542  time: 1.4098  data_time: 0.0284  lr: 0.00046841  max_mem: 29130M
[10/10 10:50:39] d2.utils.events INFO:  eta: 7:15:27  iter: 1419  total_loss: 9.108  loss_sem_seg: 6.829  loss_relation: 0.5209  loss_center: 0.999  loss_offset: 0.7392  time: 1.4098  data_time: 0.0279  lr: 0.00046796  max_mem: 29130M
[10/10 10:51:07] d2.utils.events INFO:  eta: 7:15:00  iter: 1439  total_loss: 9.183  loss_sem_seg: 6.83  loss_relation: 0.5251  loss_center: 0.9869  loss_offset: 0.7578  time: 1.4098  data_time: 0.0280  lr: 0.0004675  max_mem: 29130M
[10/10 10:51:35] d2.utils.events INFO:  eta: 7:14:30  iter: 1459  total_loss: 10.11  loss_sem_seg: 7.877  loss_relation: 0.536  loss_center: 0.8891  loss_offset: 0.815  time: 1.4097  data_time: 0.0265  lr: 0.00046705  max_mem: 29130M
[10/10 10:52:03] d2.utils.events INFO:  eta: 7:14:02  iter: 1479  total_loss: 10.69  loss_sem_seg: 8.02  loss_relation: 0.5268  loss_center: 1.01  loss_offset: 0.8371  time: 1.4097  data_time: 0.0293  lr: 0.0004666  max_mem: 29130M
[10/10 10:52:31] d2.utils.events INFO:  eta: 7:13:32  iter: 1499  total_loss: 11.1  loss_sem_seg: 8.541  loss_relation: 0.5165  loss_center: 1.005  loss_offset: 0.8885  time: 1.4097  data_time: 0.0277  lr: 0.00046614  max_mem: 29130M
[10/10 10:53:00] d2.utils.events INFO:  eta: 7:13:03  iter: 1519  total_loss: 8.813  loss_sem_seg: 6.568  loss_relation: 0.5193  loss_center: 0.9599  loss_offset: 0.7248  time: 1.4097  data_time: 0.0294  lr: 0.00046569  max_mem: 29130M
[10/10 10:53:28] d2.utils.events INFO:  eta: 7:12:34  iter: 1539  total_loss: 10.03  loss_sem_seg: 7.681  loss_relation: 0.5133  loss_center: 0.9703  loss_offset: 0.7835  time: 1.4096  data_time: 0.0296  lr: 0.00046524  max_mem: 29130M
[10/10 10:53:56] d2.utils.events INFO:  eta: 7:12:04  iter: 1559  total_loss: 10.16  loss_sem_seg: 7.947  loss_relation: 0.5344  loss_center: 0.9564  loss_offset: 0.7193  time: 1.4096  data_time: 0.0289  lr: 0.00046478  max_mem: 29130M
[10/10 10:54:24] d2.utils.events INFO:  eta: 7:11:37  iter: 1579  total_loss: 10.14  loss_sem_seg: 7.878  loss_relation: 0.5158  loss_center: 0.9387  loss_offset: 0.7639  time: 1.4095  data_time: 0.0289  lr: 0.00046433  max_mem: 29130M
[10/10 10:54:52] d2.utils.events INFO:  eta: 7:11:08  iter: 1599  total_loss: 10.48  loss_sem_seg: 8.282  loss_relation: 0.5144  loss_center: 0.9011  loss_offset: 0.7721  time: 1.4095  data_time: 0.0285  lr: 0.00046387  max_mem: 29130M
[10/10 10:55:20] d2.utils.events INFO:  eta: 7:10:38  iter: 1619  total_loss: 9.717  loss_sem_seg: 7.359  loss_relation: 0.5339  loss_center: 0.9953  loss_offset: 0.7362  time: 1.4094  data_time: 0.0284  lr: 0.00046342  max_mem: 29130M
[10/10 10:55:48] d2.utils.events INFO:  eta: 7:10:10  iter: 1639  total_loss: 10.26  loss_sem_seg: 7.893  loss_relation: 0.5377  loss_center: 0.9154  loss_offset: 0.8212  time: 1.4094  data_time: 0.0281  lr: 0.00046297  max_mem: 29130M
[10/10 10:56:17] d2.utils.events INFO:  eta: 7:09:40  iter: 1659  total_loss: 10.06  loss_sem_seg: 7.812  loss_relation: 0.5168  loss_center: 1.072  loss_offset: 0.6471  time: 1.4094  data_time: 0.0260  lr: 0.00046251  max_mem: 29130M
[10/10 10:56:45] d2.utils.events INFO:  eta: 7:09:08  iter: 1679  total_loss: 9.448  loss_sem_seg: 7.348  loss_relation: 0.5147  loss_center: 0.9704  loss_offset: 0.6741  time: 1.4093  data_time: 0.0272  lr: 0.00046206  max_mem: 29130M
[10/10 10:57:13] d2.utils.events INFO:  eta: 7:08:39  iter: 1699  total_loss: 9.47  loss_sem_seg: 7.416  loss_relation: 0.4958  loss_center: 0.9614  loss_offset: 0.6619  time: 1.4093  data_time: 0.0294  lr: 0.0004616  max_mem: 29130M
[10/10 10:57:41] d2.utils.events INFO:  eta: 7:08:07  iter: 1719  total_loss: 9.511  loss_sem_seg: 7.429  loss_relation: 0.5094  loss_center: 0.9332  loss_offset: 0.6796  time: 1.4092  data_time: 0.0270  lr: 0.00046115  max_mem: 29130M
[10/10 10:58:09] d2.utils.events INFO:  eta: 7:07:36  iter: 1739  total_loss: 9.668  loss_sem_seg: 7.369  loss_relation: 0.524  loss_center: 0.9452  loss_offset: 0.8098  time: 1.4092  data_time: 0.0265  lr: 0.0004607  max_mem: 29130M
[10/10 10:58:37] d2.utils.events INFO:  eta: 7:07:08  iter: 1759  total_loss: 9.6  loss_sem_seg: 7.427  loss_relation: 0.5336  loss_center: 0.9558  loss_offset: 0.694  time: 1.4092  data_time: 0.0286  lr: 0.00046024  max_mem: 29130M
[10/10 10:59:05] d2.utils.events INFO:  eta: 7:06:40  iter: 1779  total_loss: 9.224  loss_sem_seg: 6.96  loss_relation: 0.5129  loss_center: 0.8739  loss_offset: 0.8042  time: 1.4092  data_time: 0.0265  lr: 0.00045979  max_mem: 29130M
[10/10 10:59:34] d2.utils.events INFO:  eta: 7:06:12  iter: 1799  total_loss: 8.86  loss_sem_seg: 6.858  loss_relation: 0.5136  loss_center: 0.8467  loss_offset: 0.6863  time: 1.4091  data_time: 0.0279  lr: 0.00045933  max_mem: 29130M
[10/10 11:00:02] d2.utils.events INFO:  eta: 7:05:41  iter: 1819  total_loss: 9.716  loss_sem_seg: 7.169  loss_relation: 0.4908  loss_center: 0.9687  loss_offset: 0.7262  time: 1.4091  data_time: 0.0274  lr: 0.00045888  max_mem: 29130M
[10/10 11:00:30] d2.utils.events INFO:  eta: 7:05:11  iter: 1839  total_loss: 9.904  loss_sem_seg: 7.893  loss_relation: 0.4931  loss_center: 1.007  loss_offset: 0.7521  time: 1.4091  data_time: 0.0293  lr: 0.00045843  max_mem: 29130M
[10/10 11:00:58] d2.utils.events INFO:  eta: 7:04:42  iter: 1859  total_loss: 10.15  loss_sem_seg: 7.986  loss_relation: 0.5215  loss_center: 0.8787  loss_offset: 0.759  time: 1.4090  data_time: 0.0270  lr: 0.00045797  max_mem: 29130M
[10/10 11:01:26] d2.utils.events INFO:  eta: 7:04:13  iter: 1879  total_loss: 9.373  loss_sem_seg: 7.231  loss_relation: 0.4834  loss_center: 0.9282  loss_offset: 0.6926  time: 1.4090  data_time: 0.0270  lr: 0.00045752  max_mem: 29130M
[10/10 11:01:54] d2.utils.events INFO:  eta: 7:03:45  iter: 1899  total_loss: 8.76  loss_sem_seg: 6.462  loss_relation: 0.5  loss_center: 1.001  loss_offset: 0.7544  time: 1.4089  data_time: 0.0286  lr: 0.00045706  max_mem: 29130M
[10/10 11:02:22] d2.utils.events INFO:  eta: 7:03:18  iter: 1919  total_loss: 9.137  loss_sem_seg: 6.791  loss_relation: 0.4842  loss_center: 0.9115  loss_offset: 0.7675  time: 1.4089  data_time: 0.0271  lr: 0.00045661  max_mem: 29130M
[10/10 11:02:50] d2.utils.events INFO:  eta: 7:02:49  iter: 1939  total_loss: 8.477  loss_sem_seg: 6.355  loss_relation: 0.4976  loss_center: 0.9058  loss_offset: 0.709  time: 1.4089  data_time: 0.0282  lr: 0.00045615  max_mem: 29130M
[10/10 11:03:18] d2.utils.events INFO:  eta: 7:02:22  iter: 1959  total_loss: 9.204  loss_sem_seg: 6.834  loss_relation: 0.5018  loss_center: 0.9958  loss_offset: 0.6671  time: 1.4088  data_time: 0.0267  lr: 0.0004557  max_mem: 29130M
[10/10 11:03:46] d2.utils.events INFO:  eta: 7:01:50  iter: 1979  total_loss: 9.222  loss_sem_seg: 7.373  loss_relation: 0.4857  loss_center: 0.8877  loss_offset: 0.6891  time: 1.4088  data_time: 0.0269  lr: 0.00045524  max_mem: 29130M
[10/10 11:04:15] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_0001999.pth
[10/10 11:04:16] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[10/10 11:04:16] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/10 11:04:16] d2.data.common INFO: Serialized dataset takes 0.86 MiB
[10/10 11:04:16] d2.evaluation.evaluator INFO: Start inference on 250 batches
[10/10 11:04:31] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0013 s/iter. Inference: 0.0904 s/iter. Eval: 0.0277 s/iter. Total: 0.1194 s/iter. ETA=0:00:28
[10/10 11:04:36] d2.evaluation.evaluator INFO: Inference done 53/250. Dataloading: 0.0013 s/iter. Inference: 0.0895 s/iter. Eval: 0.0283 s/iter. Total: 0.1191 s/iter. ETA=0:00:23
[10/10 11:04:41] d2.evaluation.evaluator INFO: Inference done 97/250. Dataloading: 0.0014 s/iter. Inference: 0.0877 s/iter. Eval: 0.0281 s/iter. Total: 0.1172 s/iter. ETA=0:00:17
[10/10 11:04:46] d2.evaluation.evaluator INFO: Inference done 140/250. Dataloading: 0.0014 s/iter. Inference: 0.0876 s/iter. Eval: 0.0285 s/iter. Total: 0.1176 s/iter. ETA=0:00:12
[10/10 11:04:51] d2.evaluation.evaluator INFO: Inference done 184/250. Dataloading: 0.0015 s/iter. Inference: 0.0872 s/iter. Eval: 0.0279 s/iter. Total: 0.1167 s/iter. ETA=0:00:07
[10/10 11:04:56] d2.evaluation.evaluator INFO: Inference done 228/250. Dataloading: 0.0015 s/iter. Inference: 0.0868 s/iter. Eval: 0.0279 s/iter. Total: 0.1162 s/iter. ETA=0:00:02
[10/10 11:04:59] d2.evaluation.evaluator INFO: Total inference time: 0:00:28.923405 (0.118055 s / iter per device, on 2 devices)
[10/10 11:04:59] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:21 (0.087252 s / iter per device, on 2 devices)
[10/10 11:04:59] d2.projects.panoptic_deeplab.evaluator INFO: Writing all panoptic predictions to /tmp/panoptic_evalkksxmve5 ...
[10/10 11:05:04] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Relations Evaluation Results: 3.7087171946424573
[10/10 11:05:04] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Evaluation Results:
|        |  PQ   |   SQ   |  RQ   |  #categories  |
|:------:|:-----:|:------:|:-----:|:-------------:|
|  All   | 3.180 | 15.661 | 4.312 |      129      |
| Things | 1.027 | 11.089 | 1.562 |      76       |
| Stuff  | 6.266 | 22.216 | 8.256 |      53       |
[10/10 11:05:04] d2.engine.defaults INFO: Evaluation results for psg_val in csv format:
[10/10 11:05:04] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/10 11:05:04] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[10/10 11:05:04] d2.evaluation.testing INFO: copypaste: 3.1795,15.6606,4.3122,1.0272,11.0889,1.5621,6.2658,22.2163,8.2558
[10/10 11:05:04] d2.evaluation.testing INFO: copypaste: Task: relation_mean_recall
[10/10 11:05:04] d2.evaluation.testing INFO: copypaste: mean_recall
[10/10 11:05:04] d2.evaluation.testing INFO: copypaste: 0.0371
[10/10 11:05:04] d2.utils.events INFO:  eta: 7:01:19  iter: 1999  total_loss: 9.114  loss_sem_seg: 6.996  loss_relation: 0.4978  loss_center: 0.9829  loss_offset: 0.7518  time: 1.4087  data_time: 0.0251  lr: 0.00045479  max_mem: 29130M
[10/10 11:05:04] d2.engine.hooks INFO: Not saving as latest eval score for relation_mean_recall/mean_recall is 0.03709, not better than best score 0.04000 @ iteration 999.
[10/10 11:05:32] d2.utils.events INFO:  eta: 7:00:52  iter: 2019  total_loss: 8.548  loss_sem_seg: 6.361  loss_relation: 0.5015  loss_center: 0.8802  loss_offset: 0.722  time: 1.4087  data_time: 0.0291  lr: 0.00045433  max_mem: 29130M
[10/10 11:06:01] d2.utils.events INFO:  eta: 7:00:25  iter: 2039  total_loss: 9.46  loss_sem_seg: 7.467  loss_relation: 0.5106  loss_center: 0.8815  loss_offset: 0.6527  time: 1.4087  data_time: 0.0281  lr: 0.00045388  max_mem: 29130M
[10/10 11:06:29] d2.utils.events INFO:  eta: 6:59:56  iter: 2059  total_loss: 9.324  loss_sem_seg: 6.987  loss_relation: 0.4968  loss_center: 0.9255  loss_offset: 0.7123  time: 1.4086  data_time: 0.0265  lr: 0.00045342  max_mem: 29130M
[10/10 11:06:57] d2.utils.events INFO:  eta: 6:59:32  iter: 2079  total_loss: 9.225  loss_sem_seg: 7.027  loss_relation: 0.4846  loss_center: 0.911  loss_offset: 0.7143  time: 1.4086  data_time: 0.0273  lr: 0.00045297  max_mem: 29130M
[10/10 11:07:25] d2.utils.events INFO:  eta: 6:59:03  iter: 2099  total_loss: 9.399  loss_sem_seg: 7.4  loss_relation: 0.4837  loss_center: 0.9225  loss_offset: 0.6829  time: 1.4086  data_time: 0.0246  lr: 0.00045251  max_mem: 29130M
[10/10 11:07:53] d2.utils.events INFO:  eta: 6:58:35  iter: 2119  total_loss: 9.263  loss_sem_seg: 6.967  loss_relation: 0.5054  loss_center: 0.9869  loss_offset: 0.735  time: 1.4086  data_time: 0.0282  lr: 0.00045206  max_mem: 29130M
[10/10 11:08:21] d2.utils.events INFO:  eta: 6:58:09  iter: 2139  total_loss: 8.085  loss_sem_seg: 6.209  loss_relation: 0.4702  loss_center: 0.8727  loss_offset: 0.6021  time: 1.4085  data_time: 0.0271  lr: 0.0004516  max_mem: 29130M
[10/10 11:08:49] d2.utils.events INFO:  eta: 6:57:42  iter: 2159  total_loss: 9.112  loss_sem_seg: 6.838  loss_relation: 0.4942  loss_center: 0.9982  loss_offset: 0.7205  time: 1.4085  data_time: 0.0259  lr: 0.00045115  max_mem: 29130M
[10/10 11:09:18] d2.utils.events INFO:  eta: 6:57:13  iter: 2179  total_loss: 8.944  loss_sem_seg: 7.13  loss_relation: 0.4949  loss_center: 0.8362  loss_offset: 0.717  time: 1.4085  data_time: 0.0283  lr: 0.00045069  max_mem: 29130M
[10/10 11:09:46] d2.utils.events INFO:  eta: 6:56:48  iter: 2199  total_loss: 9.043  loss_sem_seg: 6.939  loss_relation: 0.4818  loss_center: 0.9798  loss_offset: 0.6264  time: 1.4085  data_time: 0.0289  lr: 0.00045024  max_mem: 29130M
[10/10 11:10:14] d2.utils.events INFO:  eta: 6:56:20  iter: 2219  total_loss: 9.332  loss_sem_seg: 6.635  loss_relation: 0.5062  loss_center: 0.9773  loss_offset: 0.6689  time: 1.4085  data_time: 0.0277  lr: 0.00044978  max_mem: 29130M
[10/10 11:10:42] d2.utils.events INFO:  eta: 6:55:52  iter: 2239  total_loss: 8.608  loss_sem_seg: 6.433  loss_relation: 0.502  loss_center: 0.9348  loss_offset: 0.7512  time: 1.4084  data_time: 0.0284  lr: 0.00044933  max_mem: 29130M
[10/10 11:11:10] d2.utils.events INFO:  eta: 6:55:22  iter: 2259  total_loss: 8.605  loss_sem_seg: 6.659  loss_relation: 0.4791  loss_center: 0.8438  loss_offset: 0.7073  time: 1.4084  data_time: 0.0275  lr: 0.00044887  max_mem: 29130M
[10/10 11:11:38] d2.utils.events INFO:  eta: 6:54:56  iter: 2279  total_loss: 8.342  loss_sem_seg: 6.135  loss_relation: 0.4758  loss_center: 0.9954  loss_offset: 0.6745  time: 1.4084  data_time: 0.0276  lr: 0.00044842  max_mem: 29130M
[10/10 11:12:06] d2.utils.events INFO:  eta: 6:54:27  iter: 2299  total_loss: 8.353  loss_sem_seg: 5.964  loss_relation: 0.4685  loss_center: 0.867  loss_offset: 0.702  time: 1.4083  data_time: 0.0286  lr: 0.00044796  max_mem: 29130M
[10/10 11:12:34] d2.utils.events INFO:  eta: 6:54:00  iter: 2319  total_loss: 8.025  loss_sem_seg: 6.097  loss_relation: 0.4871  loss_center: 0.9011  loss_offset: 0.6539  time: 1.4083  data_time: 0.0305  lr: 0.00044751  max_mem: 29130M
[10/10 11:13:03] d2.utils.events INFO:  eta: 6:53:31  iter: 2339  total_loss: 8.715  loss_sem_seg: 6.735  loss_relation: 0.5001  loss_center: 1.029  loss_offset: 0.6661  time: 1.4083  data_time: 0.0273  lr: 0.00044705  max_mem: 29130M
[10/10 11:13:31] d2.utils.events INFO:  eta: 6:53:03  iter: 2359  total_loss: 9.194  loss_sem_seg: 7.227  loss_relation: 0.4896  loss_center: 0.8785  loss_offset: 0.6578  time: 1.4083  data_time: 0.0279  lr: 0.0004466  max_mem: 29130M
[10/10 11:13:59] d2.utils.events INFO:  eta: 6:52:37  iter: 2379  total_loss: 8.35  loss_sem_seg: 6.154  loss_relation: 0.4854  loss_center: 0.9207  loss_offset: 0.6422  time: 1.4083  data_time: 0.0290  lr: 0.00044614  max_mem: 29130M
[10/10 11:14:27] d2.utils.events INFO:  eta: 6:52:09  iter: 2399  total_loss: 8.334  loss_sem_seg: 6.2  loss_relation: 0.4687  loss_center: 0.8335  loss_offset: 0.6624  time: 1.4083  data_time: 0.0286  lr: 0.00044568  max_mem: 29130M
[10/10 11:14:55] d2.utils.events INFO:  eta: 6:51:39  iter: 2419  total_loss: 8.447  loss_sem_seg: 6.49  loss_relation: 0.4665  loss_center: 0.8549  loss_offset: 0.6911  time: 1.4083  data_time: 0.0270  lr: 0.00044523  max_mem: 29130M
[10/10 11:15:23] d2.utils.events INFO:  eta: 6:51:08  iter: 2439  total_loss: 8.541  loss_sem_seg: 6.057  loss_relation: 0.4762  loss_center: 0.923  loss_offset: 0.6999  time: 1.4082  data_time: 0.0275  lr: 0.00044477  max_mem: 29130M
[10/10 11:15:51] d2.utils.events INFO:  eta: 6:50:39  iter: 2459  total_loss: 8.895  loss_sem_seg: 6.795  loss_relation: 0.4794  loss_center: 0.735  loss_offset: 0.5861  time: 1.4082  data_time: 0.0281  lr: 0.00044432  max_mem: 29130M
[10/10 11:16:19] d2.utils.events INFO:  eta: 6:50:08  iter: 2479  total_loss: 8.942  loss_sem_seg: 6.666  loss_relation: 0.4807  loss_center: 0.954  loss_offset: 0.6063  time: 1.4082  data_time: 0.0274  lr: 0.00044386  max_mem: 29130M
[10/10 11:16:48] d2.utils.events INFO:  eta: 6:49:45  iter: 2499  total_loss: 8.904  loss_sem_seg: 6.514  loss_relation: 0.4695  loss_center: 0.9258  loss_offset: 0.6176  time: 1.4082  data_time: 0.0289  lr: 0.0004434  max_mem: 29130M
[10/10 11:17:16] d2.utils.events INFO:  eta: 6:49:17  iter: 2519  total_loss: 8.622  loss_sem_seg: 6.466  loss_relation: 0.4936  loss_center: 0.9466  loss_offset: 0.6779  time: 1.4081  data_time: 0.0275  lr: 0.00044295  max_mem: 29130M
[10/10 11:17:44] d2.utils.events INFO:  eta: 6:48:47  iter: 2539  total_loss: 8.431  loss_sem_seg: 6.336  loss_relation: 0.4859  loss_center: 0.9513  loss_offset: 0.6207  time: 1.4081  data_time: 0.0264  lr: 0.00044249  max_mem: 29130M
[10/10 11:18:12] d2.utils.events INFO:  eta: 6:48:19  iter: 2559  total_loss: 9.274  loss_sem_seg: 7.21  loss_relation: 0.4909  loss_center: 0.9651  loss_offset: 0.7339  time: 1.4081  data_time: 0.0281  lr: 0.00044204  max_mem: 29130M
[10/10 11:18:40] d2.utils.events INFO:  eta: 6:47:50  iter: 2579  total_loss: 8.808  loss_sem_seg: 6.63  loss_relation: 0.4605  loss_center: 0.9934  loss_offset: 0.7054  time: 1.4081  data_time: 0.0261  lr: 0.00044158  max_mem: 29130M
[10/10 11:19:08] d2.utils.events INFO:  eta: 6:47:24  iter: 2599  total_loss: 8.323  loss_sem_seg: 6.386  loss_relation: 0.477  loss_center: 0.8182  loss_offset: 0.6344  time: 1.4081  data_time: 0.0267  lr: 0.00044112  max_mem: 29130M
[10/10 11:19:36] d2.utils.events INFO:  eta: 6:46:56  iter: 2619  total_loss: 8.879  loss_sem_seg: 6.824  loss_relation: 0.4751  loss_center: 0.8186  loss_offset: 0.6774  time: 1.4080  data_time: 0.0288  lr: 0.00044067  max_mem: 29130M
[10/10 11:20:04] d2.utils.events INFO:  eta: 6:46:30  iter: 2639  total_loss: 8.528  loss_sem_seg: 6.321  loss_relation: 0.4714  loss_center: 0.8756  loss_offset: 0.6404  time: 1.4080  data_time: 0.0290  lr: 0.00044021  max_mem: 29130M
[10/10 11:20:33] d2.utils.events INFO:  eta: 6:46:05  iter: 2659  total_loss: 8.133  loss_sem_seg: 6.037  loss_relation: 0.4888  loss_center: 1.025  loss_offset: 0.6287  time: 1.4080  data_time: 0.0276  lr: 0.00043975  max_mem: 29130M
[10/10 11:21:01] d2.utils.events INFO:  eta: 6:45:37  iter: 2679  total_loss: 8.305  loss_sem_seg: 6.102  loss_relation: 0.4759  loss_center: 0.8473  loss_offset: 0.6682  time: 1.4080  data_time: 0.0277  lr: 0.0004393  max_mem: 29130M
[10/10 11:21:29] d2.utils.events INFO:  eta: 6:45:09  iter: 2699  total_loss: 7.926  loss_sem_seg: 5.876  loss_relation: 0.4783  loss_center: 0.8889  loss_offset: 0.5994  time: 1.4079  data_time: 0.0255  lr: 0.00043884  max_mem: 29130M
[10/10 11:21:57] d2.utils.events INFO:  eta: 6:44:41  iter: 2719  total_loss: 8.039  loss_sem_seg: 6.411  loss_relation: 0.4906  loss_center: 0.9204  loss_offset: 0.6662  time: 1.4079  data_time: 0.0264  lr: 0.00043838  max_mem: 29130M
[10/10 11:22:25] d2.utils.events INFO:  eta: 6:44:11  iter: 2739  total_loss: 8.704  loss_sem_seg: 6.558  loss_relation: 0.4766  loss_center: 1.004  loss_offset: 0.6269  time: 1.4079  data_time: 0.0276  lr: 0.00043793  max_mem: 29130M
[10/10 11:22:53] d2.utils.events INFO:  eta: 6:43:42  iter: 2759  total_loss: 9.08  loss_sem_seg: 6.905  loss_relation: 0.5107  loss_center: 0.8686  loss_offset: 0.6462  time: 1.4079  data_time: 0.0291  lr: 0.00043747  max_mem: 29130M
[10/10 11:23:21] d2.utils.events INFO:  eta: 6:43:15  iter: 2779  total_loss: 8.153  loss_sem_seg: 6.396  loss_relation: 0.4775  loss_center: 0.849  loss_offset: 0.5899  time: 1.4079  data_time: 0.0276  lr: 0.00043701  max_mem: 29130M
[10/10 11:23:49] d2.utils.events INFO:  eta: 6:42:48  iter: 2799  total_loss: 7.967  loss_sem_seg: 5.959  loss_relation: 0.4538  loss_center: 0.9088  loss_offset: 0.6561  time: 1.4079  data_time: 0.0299  lr: 0.00043656  max_mem: 29130M
[10/10 11:24:17] d2.utils.events INFO:  eta: 6:42:20  iter: 2819  total_loss: 8.44  loss_sem_seg: 6.45  loss_relation: 0.4883  loss_center: 0.8095  loss_offset: 0.6993  time: 1.4079  data_time: 0.0280  lr: 0.0004361  max_mem: 29130M
[10/10 11:24:46] d2.utils.events INFO:  eta: 6:41:49  iter: 2839  total_loss: 7.665  loss_sem_seg: 5.706  loss_relation: 0.4804  loss_center: 0.8832  loss_offset: 0.6311  time: 1.4078  data_time: 0.0286  lr: 0.00043564  max_mem: 29130M
[10/10 11:25:14] d2.utils.events INFO:  eta: 6:41:19  iter: 2859  total_loss: 9.024  loss_sem_seg: 6.933  loss_relation: 0.4772  loss_center: 0.9443  loss_offset: 0.6626  time: 1.4078  data_time: 0.0261  lr: 0.00043519  max_mem: 29130M
[10/10 11:25:42] d2.utils.events INFO:  eta: 6:40:53  iter: 2879  total_loss: 9.119  loss_sem_seg: 6.936  loss_relation: 0.4739  loss_center: 0.9246  loss_offset: 0.7395  time: 1.4078  data_time: 0.0269  lr: 0.00043473  max_mem: 29130M
[10/10 11:26:10] d2.utils.events INFO:  eta: 6:40:27  iter: 2899  total_loss: 8.054  loss_sem_seg: 6.174  loss_relation: 0.4704  loss_center: 0.8476  loss_offset: 0.5605  time: 1.4078  data_time: 0.0293  lr: 0.00043427  max_mem: 29130M
[10/10 11:26:38] d2.utils.events INFO:  eta: 6:39:56  iter: 2919  total_loss: 8.24  loss_sem_seg: 6.084  loss_relation: 0.4852  loss_center: 0.9259  loss_offset: 0.7436  time: 1.4078  data_time: 0.0253  lr: 0.00043382  max_mem: 29130M
[10/10 11:27:06] d2.utils.events INFO:  eta: 6:39:27  iter: 2939  total_loss: 8.629  loss_sem_seg: 6.552  loss_relation: 0.4583  loss_center: 0.8239  loss_offset: 0.7164  time: 1.4077  data_time: 0.0263  lr: 0.00043336  max_mem: 29130M
[10/10 11:27:34] d2.utils.events INFO:  eta: 6:39:03  iter: 2959  total_loss: 8.321  loss_sem_seg: 6.34  loss_relation: 0.4502  loss_center: 0.8908  loss_offset: 0.6558  time: 1.4078  data_time: 0.0306  lr: 0.0004329  max_mem: 29130M
[10/10 11:28:02] d2.utils.events INFO:  eta: 6:38:34  iter: 2979  total_loss: 7.889  loss_sem_seg: 6.005  loss_relation: 0.4717  loss_center: 0.9525  loss_offset: 0.5955  time: 1.4077  data_time: 0.0265  lr: 0.00043244  max_mem: 29130M
[10/10 11:28:31] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_0002999.pth
[10/10 11:28:32] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[10/10 11:28:32] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/10 11:28:32] d2.data.common INFO: Serialized dataset takes 0.86 MiB
[10/10 11:28:32] d2.evaluation.evaluator INFO: Start inference on 250 batches
[10/10 11:28:47] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0011 s/iter. Inference: 0.0883 s/iter. Eval: 0.0289 s/iter. Total: 0.1183 s/iter. ETA=0:00:28
[10/10 11:28:52] d2.evaluation.evaluator INFO: Inference done 54/250. Dataloading: 0.0015 s/iter. Inference: 0.0874 s/iter. Eval: 0.0289 s/iter. Total: 0.1178 s/iter. ETA=0:00:23
[10/10 11:28:57] d2.evaluation.evaluator INFO: Inference done 98/250. Dataloading: 0.0015 s/iter. Inference: 0.0861 s/iter. Eval: 0.0283 s/iter. Total: 0.1159 s/iter. ETA=0:00:17
[10/10 11:29:02] d2.evaluation.evaluator INFO: Inference done 142/250. Dataloading: 0.0015 s/iter. Inference: 0.0861 s/iter. Eval: 0.0284 s/iter. Total: 0.1161 s/iter. ETA=0:00:12
[10/10 11:29:07] d2.evaluation.evaluator INFO: Inference done 187/250. Dataloading: 0.0015 s/iter. Inference: 0.0857 s/iter. Eval: 0.0279 s/iter. Total: 0.1152 s/iter. ETA=0:00:07
[10/10 11:29:12] d2.evaluation.evaluator INFO: Inference done 231/250. Dataloading: 0.0015 s/iter. Inference: 0.0857 s/iter. Eval: 0.0279 s/iter. Total: 0.1151 s/iter. ETA=0:00:02
[10/10 11:29:14] d2.evaluation.evaluator INFO: Total inference time: 0:00:28.600812 (0.116738 s / iter per device, on 2 devices)
[10/10 11:29:14] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:21 (0.085919 s / iter per device, on 2 devices)
[10/10 11:29:14] d2.projects.panoptic_deeplab.evaluator INFO: Writing all panoptic predictions to /tmp/panoptic_evaleh6i_e3l ...
[10/10 11:29:20] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Relations Evaluation Results: 3.8781620410825166
[10/10 11:29:20] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Evaluation Results:
|        |  PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:-----:|:------:|:------:|:-------------:|
|  All   | 4.478 | 19.826 | 6.029  |      129      |
| Things | 2.137 | 15.669 | 3.107  |      76       |
| Stuff  | 7.835 | 25.788 | 10.219 |      53       |
[10/10 11:29:20] d2.engine.defaults INFO: Evaluation results for psg_val in csv format:
[10/10 11:29:20] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/10 11:29:20] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[10/10 11:29:20] d2.evaluation.testing INFO: copypaste: 4.4781,19.8263,6.0291,2.1371,15.6690,3.1068,7.8350,25.7878,10.2195
[10/10 11:29:20] d2.evaluation.testing INFO: copypaste: Task: relation_mean_recall
[10/10 11:29:20] d2.evaluation.testing INFO: copypaste: mean_recall
[10/10 11:29:20] d2.evaluation.testing INFO: copypaste: 0.0388
[10/10 11:29:20] d2.utils.events INFO:  eta: 6:38:08  iter: 2999  total_loss: 7.961  loss_sem_seg: 5.94  loss_relation: 0.4519  loss_center: 0.8739  loss_offset: 0.6269  time: 1.4077  data_time: 0.0272  lr: 0.00043199  max_mem: 29130M
[10/10 11:29:20] d2.engine.hooks INFO: Not saving as latest eval score for relation_mean_recall/mean_recall is 0.03878, not better than best score 0.04000 @ iteration 999.
[10/10 11:29:48] d2.utils.events INFO:  eta: 6:37:39  iter: 3019  total_loss: 7.797  loss_sem_seg: 5.884  loss_relation: 0.4494  loss_center: 0.8075  loss_offset: 0.6356  time: 1.4077  data_time: 0.0295  lr: 0.00043153  max_mem: 29130M
[10/10 11:30:16] d2.utils.events INFO:  eta: 6:37:09  iter: 3039  total_loss: 8.489  loss_sem_seg: 6.177  loss_relation: 0.4651  loss_center: 0.9324  loss_offset: 0.6684  time: 1.4077  data_time: 0.0295  lr: 0.00043107  max_mem: 29130M
[10/10 11:30:44] d2.utils.events INFO:  eta: 6:36:43  iter: 3059  total_loss: 7.603  loss_sem_seg: 5.486  loss_relation: 0.469  loss_center: 0.9705  loss_offset: 0.6211  time: 1.4077  data_time: 0.0295  lr: 0.00043061  max_mem: 29130M
[10/10 11:31:12] d2.utils.events INFO:  eta: 6:36:15  iter: 3079  total_loss: 7.66  loss_sem_seg: 5.856  loss_relation: 0.4538  loss_center: 0.8731  loss_offset: 0.6761  time: 1.4077  data_time: 0.0310  lr: 0.00043016  max_mem: 29130M
[10/10 11:31:40] d2.utils.events INFO:  eta: 6:35:49  iter: 3099  total_loss: 7.268  loss_sem_seg: 5.337  loss_relation: 0.4736  loss_center: 1.007  loss_offset: 0.634  time: 1.4077  data_time: 0.0283  lr: 0.0004297  max_mem: 29130M
[10/10 11:32:08] d2.utils.events INFO:  eta: 6:35:19  iter: 3119  total_loss: 8.188  loss_sem_seg: 6.021  loss_relation: 0.4608  loss_center: 0.83  loss_offset: 0.6565  time: 1.4077  data_time: 0.0278  lr: 0.00042924  max_mem: 29130M
[10/10 11:32:37] d2.utils.events INFO:  eta: 6:34:49  iter: 3139  total_loss: 8.16  loss_sem_seg: 6.175  loss_relation: 0.4523  loss_center: 0.9095  loss_offset: 0.561  time: 1.4077  data_time: 0.0288  lr: 0.00042878  max_mem: 29130M
[10/10 11:33:05] d2.utils.events INFO:  eta: 6:34:20  iter: 3159  total_loss: 8.331  loss_sem_seg: 6.21  loss_relation: 0.4709  loss_center: 0.8865  loss_offset: 0.6946  time: 1.4076  data_time: 0.0280  lr: 0.00042833  max_mem: 29130M
[10/10 11:33:33] d2.utils.events INFO:  eta: 6:33:50  iter: 3179  total_loss: 7.961  loss_sem_seg: 6.285  loss_relation: 0.4503  loss_center: 0.8566  loss_offset: 0.6749  time: 1.4076  data_time: 0.0270  lr: 0.00042787  max_mem: 29130M
[10/10 11:34:01] d2.utils.events INFO:  eta: 6:33:21  iter: 3199  total_loss: 8.27  loss_sem_seg: 6.243  loss_relation: 0.4641  loss_center: 0.917  loss_offset: 0.6015  time: 1.4076  data_time: 0.0278  lr: 0.00042741  max_mem: 29130M
[10/10 11:34:29] d2.utils.events INFO:  eta: 6:32:53  iter: 3219  total_loss: 8.17  loss_sem_seg: 5.987  loss_relation: 0.466  loss_center: 0.8874  loss_offset: 0.6294  time: 1.4076  data_time: 0.0273  lr: 0.00042695  max_mem: 29130M
[10/10 11:34:57] d2.utils.events INFO:  eta: 6:32:26  iter: 3239  total_loss: 8.044  loss_sem_seg: 6.162  loss_relation: 0.48  loss_center: 0.8095  loss_offset: 0.6437  time: 1.4076  data_time: 0.0286  lr: 0.00042649  max_mem: 29130M
[10/10 11:35:25] d2.utils.events INFO:  eta: 6:31:59  iter: 3259  total_loss: 7.862  loss_sem_seg: 5.831  loss_relation: 0.4672  loss_center: 0.9992  loss_offset: 0.5358  time: 1.4076  data_time: 0.0277  lr: 0.00042604  max_mem: 29130M
[10/10 11:35:53] d2.utils.events INFO:  eta: 6:31:31  iter: 3279  total_loss: 8.705  loss_sem_seg: 6.447  loss_relation: 0.4549  loss_center: 0.8515  loss_offset: 0.6637  time: 1.4075  data_time: 0.0255  lr: 0.00042558  max_mem: 29130M
[10/10 11:36:21] d2.utils.events INFO:  eta: 6:31:02  iter: 3299  total_loss: 8.034  loss_sem_seg: 5.933  loss_relation: 0.4494  loss_center: 0.8992  loss_offset: 0.662  time: 1.4075  data_time: 0.0274  lr: 0.00042512  max_mem: 29130M
[10/10 11:36:50] d2.utils.events INFO:  eta: 6:30:32  iter: 3319  total_loss: 8.2  loss_sem_seg: 6.064  loss_relation: 0.4691  loss_center: 0.9367  loss_offset: 0.609  time: 1.4075  data_time: 0.0280  lr: 0.00042466  max_mem: 29130M
[10/10 11:37:18] d2.utils.events INFO:  eta: 6:30:04  iter: 3339  total_loss: 7.711  loss_sem_seg: 5.724  loss_relation: 0.4622  loss_center: 0.9628  loss_offset: 0.6103  time: 1.4075  data_time: 0.0257  lr: 0.0004242  max_mem: 29130M
[10/10 11:37:46] d2.utils.events INFO:  eta: 6:29:36  iter: 3359  total_loss: 7.796  loss_sem_seg: 5.521  loss_relation: 0.4672  loss_center: 0.9447  loss_offset: 0.6519  time: 1.4075  data_time: 0.0307  lr: 0.00042374  max_mem: 29130M
[10/10 11:38:14] d2.utils.events INFO:  eta: 6:29:07  iter: 3379  total_loss: 8.256  loss_sem_seg: 6.386  loss_relation: 0.4692  loss_center: 0.7838  loss_offset: 0.6435  time: 1.4075  data_time: 0.0283  lr: 0.00042329  max_mem: 29130M
[10/10 11:38:42] d2.utils.events INFO:  eta: 6:28:36  iter: 3399  total_loss: 7.467  loss_sem_seg: 5.594  loss_relation: 0.468  loss_center: 0.9178  loss_offset: 0.571  time: 1.4075  data_time: 0.0258  lr: 0.00042283  max_mem: 29130M
[10/10 11:39:10] d2.utils.events INFO:  eta: 6:28:09  iter: 3419  total_loss: 7.982  loss_sem_seg: 6.029  loss_relation: 0.4737  loss_center: 0.9347  loss_offset: 0.5913  time: 1.4075  data_time: 0.0286  lr: 0.00042237  max_mem: 29130M
[10/10 11:39:38] d2.utils.events INFO:  eta: 6:27:40  iter: 3439  total_loss: 7.591  loss_sem_seg: 5.601  loss_relation: 0.4551  loss_center: 0.9177  loss_offset: 0.6215  time: 1.4074  data_time: 0.0266  lr: 0.00042191  max_mem: 29130M
[10/10 11:40:06] d2.utils.events INFO:  eta: 6:27:14  iter: 3459  total_loss: 7.364  loss_sem_seg: 5.274  loss_relation: 0.4575  loss_center: 1.011  loss_offset: 0.5929  time: 1.4074  data_time: 0.0281  lr: 0.00042145  max_mem: 29130M
[10/10 11:40:34] d2.utils.events INFO:  eta: 6:26:46  iter: 3479  total_loss: 8.551  loss_sem_seg: 6.18  loss_relation: 0.4601  loss_center: 0.9391  loss_offset: 0.6281  time: 1.4074  data_time: 0.0269  lr: 0.00042099  max_mem: 29130M
[10/10 11:41:03] d2.utils.events INFO:  eta: 6:26:12  iter: 3499  total_loss: 8.011  loss_sem_seg: 6.03  loss_relation: 0.4639  loss_center: 0.9442  loss_offset: 0.6316  time: 1.4074  data_time: 0.0289  lr: 0.00042054  max_mem: 29130M
[10/10 11:41:31] d2.utils.events INFO:  eta: 6:25:41  iter: 3519  total_loss: 7.932  loss_sem_seg: 6.257  loss_relation: 0.4643  loss_center: 0.9353  loss_offset: 0.6321  time: 1.4074  data_time: 0.0251  lr: 0.00042008  max_mem: 29130M
[10/10 11:41:59] d2.utils.events INFO:  eta: 6:25:14  iter: 3539  total_loss: 8.377  loss_sem_seg: 6.015  loss_relation: 0.4513  loss_center: 0.8173  loss_offset: 0.5859  time: 1.4073  data_time: 0.0269  lr: 0.00041962  max_mem: 29130M
[10/10 11:42:27] d2.utils.events INFO:  eta: 6:24:48  iter: 3559  total_loss: 7.454  loss_sem_seg: 5.579  loss_relation: 0.4624  loss_center: 0.8148  loss_offset: 0.5974  time: 1.4074  data_time: 0.0271  lr: 0.00041916  max_mem: 29130M
[10/10 11:42:55] d2.utils.events INFO:  eta: 6:24:18  iter: 3579  total_loss: 8.037  loss_sem_seg: 6.03  loss_relation: 0.4418  loss_center: 0.8629  loss_offset: 0.608  time: 1.4074  data_time: 0.0283  lr: 0.0004187  max_mem: 29130M
[10/10 11:43:23] d2.utils.events INFO:  eta: 6:23:49  iter: 3599  total_loss: 7.384  loss_sem_seg: 5.191  loss_relation: 0.4491  loss_center: 1.029  loss_offset: 0.6425  time: 1.4073  data_time: 0.0283  lr: 0.00041824  max_mem: 29130M
[10/10 11:43:51] d2.utils.events INFO:  eta: 6:23:20  iter: 3619  total_loss: 8.177  loss_sem_seg: 6.198  loss_relation: 0.4511  loss_center: 0.8181  loss_offset: 0.5914  time: 1.4073  data_time: 0.0273  lr: 0.00041778  max_mem: 29130M
[10/10 11:44:19] d2.utils.events INFO:  eta: 6:22:50  iter: 3639  total_loss: 7.536  loss_sem_seg: 5.528  loss_relation: 0.4325  loss_center: 0.7889  loss_offset: 0.6158  time: 1.4073  data_time: 0.0255  lr: 0.00041732  max_mem: 29130M
[10/10 11:44:48] d2.utils.events INFO:  eta: 6:22:22  iter: 3659  total_loss: 7.197  loss_sem_seg: 5.423  loss_relation: 0.4363  loss_center: 0.8036  loss_offset: 0.551  time: 1.4073  data_time: 0.0287  lr: 0.00041686  max_mem: 29130M
[10/10 11:45:16] d2.utils.events INFO:  eta: 6:21:54  iter: 3679  total_loss: 7.491  loss_sem_seg: 5.537  loss_relation: 0.4422  loss_center: 0.9286  loss_offset: 0.5457  time: 1.4073  data_time: 0.0284  lr: 0.0004164  max_mem: 29130M
[10/10 11:45:44] d2.utils.events INFO:  eta: 6:21:26  iter: 3699  total_loss: 7.574  loss_sem_seg: 5.716  loss_relation: 0.4566  loss_center: 0.8799  loss_offset: 0.5819  time: 1.4073  data_time: 0.0263  lr: 0.00041594  max_mem: 29130M
[10/10 11:46:12] d2.utils.events INFO:  eta: 6:20:58  iter: 3719  total_loss: 7.524  loss_sem_seg: 5.712  loss_relation: 0.4539  loss_center: 0.8681  loss_offset: 0.5869  time: 1.4073  data_time: 0.0267  lr: 0.00041549  max_mem: 29130M
[10/10 11:46:40] d2.utils.events INFO:  eta: 6:20:31  iter: 3739  total_loss: 8.38  loss_sem_seg: 6.236  loss_relation: 0.4824  loss_center: 0.9092  loss_offset: 0.6168  time: 1.4073  data_time: 0.0325  lr: 0.00041503  max_mem: 29130M
[10/10 11:47:08] d2.utils.events INFO:  eta: 6:20:02  iter: 3759  total_loss: 7.472  loss_sem_seg: 5.525  loss_relation: 0.4505  loss_center: 0.8671  loss_offset: 0.5955  time: 1.4073  data_time: 0.0280  lr: 0.00041457  max_mem: 29130M
[10/10 11:47:36] d2.utils.events INFO:  eta: 6:19:34  iter: 3779  total_loss: 7.768  loss_sem_seg: 5.898  loss_relation: 0.4462  loss_center: 0.8052  loss_offset: 0.618  time: 1.4073  data_time: 0.0282  lr: 0.00041411  max_mem: 29130M
[10/10 11:48:05] d2.utils.events INFO:  eta: 6:19:05  iter: 3799  total_loss: 8.006  loss_sem_seg: 6.019  loss_relation: 0.4604  loss_center: 0.9393  loss_offset: 0.5871  time: 1.4073  data_time: 0.0282  lr: 0.00041365  max_mem: 29130M
[10/10 11:48:33] d2.utils.events INFO:  eta: 6:18:37  iter: 3819  total_loss: 7.134  loss_sem_seg: 5.278  loss_relation: 0.4424  loss_center: 0.813  loss_offset: 0.556  time: 1.4073  data_time: 0.0272  lr: 0.00041319  max_mem: 29130M
[10/10 11:49:01] d2.utils.events INFO:  eta: 6:18:10  iter: 3839  total_loss: 8.581  loss_sem_seg: 6.531  loss_relation: 0.4682  loss_center: 0.8865  loss_offset: 0.6956  time: 1.4073  data_time: 0.0266  lr: 0.00041273  max_mem: 29130M
[10/10 11:49:29] d2.utils.events INFO:  eta: 6:17:43  iter: 3859  total_loss: 7.879  loss_sem_seg: 5.778  loss_relation: 0.4605  loss_center: 0.8398  loss_offset: 0.5757  time: 1.4073  data_time: 0.0267  lr: 0.00041227  max_mem: 29130M
[10/10 11:49:57] d2.utils.events INFO:  eta: 6:17:14  iter: 3879  total_loss: 8.006  loss_sem_seg: 5.756  loss_relation: 0.4366  loss_center: 0.8764  loss_offset: 0.5899  time: 1.4073  data_time: 0.0286  lr: 0.00041181  max_mem: 29130M
[10/10 11:50:25] d2.utils.events INFO:  eta: 6:16:45  iter: 3899  total_loss: 7.521  loss_sem_seg: 5.711  loss_relation: 0.4552  loss_center: 0.9309  loss_offset: 0.5736  time: 1.4073  data_time: 0.0278  lr: 0.00041135  max_mem: 29130M
[10/10 11:50:53] d2.utils.events INFO:  eta: 6:16:18  iter: 3919  total_loss: 7.756  loss_sem_seg: 5.699  loss_relation: 0.4561  loss_center: 0.9163  loss_offset: 0.5785  time: 1.4073  data_time: 0.0286  lr: 0.00041089  max_mem: 29130M
[10/10 11:51:21] d2.utils.events INFO:  eta: 6:15:51  iter: 3939  total_loss: 8.272  loss_sem_seg: 6.18  loss_relation: 0.446  loss_center: 0.8649  loss_offset: 0.583  time: 1.4073  data_time: 0.0259  lr: 0.00041043  max_mem: 29130M
[10/10 11:51:50] d2.utils.events INFO:  eta: 6:15:21  iter: 3959  total_loss: 7.47  loss_sem_seg: 5.547  loss_relation: 0.4501  loss_center: 0.833  loss_offset: 0.5947  time: 1.4073  data_time: 0.0279  lr: 0.00040997  max_mem: 29130M
[10/10 11:52:18] d2.utils.events INFO:  eta: 6:14:53  iter: 3979  total_loss: 7.42  loss_sem_seg: 5.562  loss_relation: 0.4435  loss_center: 0.798  loss_offset: 0.5782  time: 1.4072  data_time: 0.0268  lr: 0.00040951  max_mem: 29130M
[10/10 11:52:46] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_0003999.pth
[10/10 11:52:48] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[10/10 11:52:48] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/10 11:52:48] d2.data.common INFO: Serialized dataset takes 0.86 MiB
[10/10 11:52:48] d2.evaluation.evaluator INFO: Start inference on 250 batches
[10/10 11:53:02] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0017 s/iter. Inference: 0.0890 s/iter. Eval: 0.0284 s/iter. Total: 0.1192 s/iter. ETA=0:00:28
[10/10 11:53:07] d2.evaluation.evaluator INFO: Inference done 54/250. Dataloading: 0.0013 s/iter. Inference: 0.0878 s/iter. Eval: 0.0286 s/iter. Total: 0.1178 s/iter. ETA=0:00:23
[10/10 11:53:12] d2.evaluation.evaluator INFO: Inference done 98/250. Dataloading: 0.0014 s/iter. Inference: 0.0865 s/iter. Eval: 0.0284 s/iter. Total: 0.1163 s/iter. ETA=0:00:17
[10/10 11:53:17] d2.evaluation.evaluator INFO: Inference done 141/250. Dataloading: 0.0014 s/iter. Inference: 0.0867 s/iter. Eval: 0.0286 s/iter. Total: 0.1168 s/iter. ETA=0:00:12
[10/10 11:53:22] d2.evaluation.evaluator INFO: Inference done 186/250. Dataloading: 0.0014 s/iter. Inference: 0.0861 s/iter. Eval: 0.0280 s/iter. Total: 0.1156 s/iter. ETA=0:00:07
[10/10 11:53:27] d2.evaluation.evaluator INFO: Inference done 231/250. Dataloading: 0.0015 s/iter. Inference: 0.0855 s/iter. Eval: 0.0279 s/iter. Total: 0.1149 s/iter. ETA=0:00:02
[10/10 11:53:30] d2.evaluation.evaluator INFO: Total inference time: 0:00:28.613761 (0.116791 s / iter per device, on 2 devices)
[10/10 11:53:30] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:21 (0.085747 s / iter per device, on 2 devices)
[10/10 11:53:30] d2.projects.panoptic_deeplab.evaluator INFO: Writing all panoptic predictions to /tmp/panoptic_evalfsszokjl ...
[10/10 11:53:35] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Relations Evaluation Results: 3.7122196532025566
[10/10 11:53:35] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Evaluation Results:
|        |  PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:-----:|:------:|:------:|:-------------:|
|  All   | 5.865 | 26.398 | 7.941  |      129      |
| Things | 3.448 | 21.999 | 4.990  |      76       |
| Stuff  | 9.332 | 32.706 | 12.172 |      53       |
[10/10 11:53:35] d2.engine.defaults INFO: Evaluation results for psg_val in csv format:
[10/10 11:53:35] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/10 11:53:35] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[10/10 11:53:35] d2.evaluation.testing INFO: copypaste: 5.8654,26.3978,7.9406,3.4481,21.9987,4.9897,9.3317,32.7060,12.1722
[10/10 11:53:35] d2.evaluation.testing INFO: copypaste: Task: relation_mean_recall
[10/10 11:53:35] d2.evaluation.testing INFO: copypaste: mean_recall
[10/10 11:53:35] d2.evaluation.testing INFO: copypaste: 0.0371
[10/10 11:53:35] d2.utils.events INFO:  eta: 6:14:25  iter: 3999  total_loss: 8.161  loss_sem_seg: 5.97  loss_relation: 0.4479  loss_center: 0.9357  loss_offset: 0.5598  time: 1.4072  data_time: 0.0299  lr: 0.00040905  max_mem: 29130M
[10/10 11:53:35] d2.engine.hooks INFO: Not saving as latest eval score for relation_mean_recall/mean_recall is 0.03712, not better than best score 0.04000 @ iteration 999.
[10/10 11:54:03] d2.utils.events INFO:  eta: 6:13:56  iter: 4019  total_loss: 8.047  loss_sem_seg: 6.195  loss_relation: 0.4469  loss_center: 0.8708  loss_offset: 0.602  time: 1.4072  data_time: 0.0264  lr: 0.00040859  max_mem: 29130M
[10/10 11:54:31] d2.utils.events INFO:  eta: 6:13:27  iter: 4039  total_loss: 7.397  loss_sem_seg: 5.385  loss_relation: 0.4545  loss_center: 0.9042  loss_offset: 0.5524  time: 1.4072  data_time: 0.0271  lr: 0.00040813  max_mem: 29130M
[10/10 11:54:59] d2.utils.events INFO:  eta: 6:12:59  iter: 4059  total_loss: 7.842  loss_sem_seg: 5.803  loss_relation: 0.4618  loss_center: 0.8761  loss_offset: 0.5698  time: 1.4072  data_time: 0.0274  lr: 0.00040767  max_mem: 29130M
[10/10 11:55:27] d2.utils.events INFO:  eta: 6:12:29  iter: 4079  total_loss: 7.126  loss_sem_seg: 5.218  loss_relation: 0.431  loss_center: 0.8095  loss_offset: 0.5605  time: 1.4072  data_time: 0.0269  lr: 0.00040721  max_mem: 29130M
[10/10 11:55:56] d2.utils.events INFO:  eta: 6:12:01  iter: 4099  total_loss: 7.567  loss_sem_seg: 5.427  loss_relation: 0.4543  loss_center: 1.019  loss_offset: 0.5745  time: 1.4072  data_time: 0.0287  lr: 0.00040675  max_mem: 29130M
[10/10 11:56:24] d2.utils.events INFO:  eta: 6:11:35  iter: 4119  total_loss: 7.671  loss_sem_seg: 5.901  loss_relation: 0.4393  loss_center: 0.8668  loss_offset: 0.5928  time: 1.4072  data_time: 0.0296  lr: 0.00040629  max_mem: 29130M
[10/10 11:56:52] d2.utils.events INFO:  eta: 6:11:07  iter: 4139  total_loss: 7.317  loss_sem_seg: 5.334  loss_relation: 0.4352  loss_center: 0.8771  loss_offset: 0.5808  time: 1.4072  data_time: 0.0271  lr: 0.00040583  max_mem: 29130M
[10/10 11:57:20] d2.utils.events INFO:  eta: 6:10:38  iter: 4159  total_loss: 7.69  loss_sem_seg: 5.9  loss_relation: 0.4456  loss_center: 0.7773  loss_offset: 0.5862  time: 1.4072  data_time: 0.0292  lr: 0.00040537  max_mem: 29130M
[10/10 11:57:48] d2.utils.events INFO:  eta: 6:10:09  iter: 4179  total_loss: 7.662  loss_sem_seg: 5.717  loss_relation: 0.4475  loss_center: 0.8783  loss_offset: 0.5485  time: 1.4072  data_time: 0.0256  lr: 0.00040491  max_mem: 29130M
[10/10 11:58:16] d2.utils.events INFO:  eta: 6:09:42  iter: 4199  total_loss: 6.78  loss_sem_seg: 5.013  loss_relation: 0.449  loss_center: 0.8192  loss_offset: 0.599  time: 1.4072  data_time: 0.0290  lr: 0.00040444  max_mem: 29130M
[10/10 11:58:44] d2.utils.events INFO:  eta: 6:09:15  iter: 4219  total_loss: 7.117  loss_sem_seg: 5.342  loss_relation: 0.4283  loss_center: 0.8124  loss_offset: 0.5489  time: 1.4071  data_time: 0.0289  lr: 0.00040398  max_mem: 29130M
[10/10 11:59:12] d2.utils.events INFO:  eta: 6:08:46  iter: 4239  total_loss: 7.869  loss_sem_seg: 5.964  loss_relation: 0.4386  loss_center: 0.8735  loss_offset: 0.5335  time: 1.4071  data_time: 0.0290  lr: 0.00040352  max_mem: 29130M
[10/10 11:59:41] d2.utils.events INFO:  eta: 6:08:19  iter: 4259  total_loss: 7.117  loss_sem_seg: 5.178  loss_relation: 0.4719  loss_center: 0.8365  loss_offset: 0.5459  time: 1.4071  data_time: 0.0288  lr: 0.00040306  max_mem: 29130M
[10/10 12:00:09] d2.utils.events INFO:  eta: 6:07:51  iter: 4279  total_loss: 7.844  loss_sem_seg: 5.824  loss_relation: 0.4524  loss_center: 0.8979  loss_offset: 0.6707  time: 1.4071  data_time: 0.0256  lr: 0.0004026  max_mem: 29130M
[10/10 12:00:37] d2.utils.events INFO:  eta: 6:07:25  iter: 4299  total_loss: 7.609  loss_sem_seg: 5.62  loss_relation: 0.4489  loss_center: 0.9772  loss_offset: 0.6013  time: 1.4071  data_time: 0.0301  lr: 0.00040214  max_mem: 29130M
[10/10 12:01:05] d2.utils.events INFO:  eta: 6:06:58  iter: 4319  total_loss: 7.466  loss_sem_seg: 5.391  loss_relation: 0.4464  loss_center: 0.9286  loss_offset: 0.5956  time: 1.4071  data_time: 0.0277  lr: 0.00040168  max_mem: 29130M
[10/10 12:01:33] d2.utils.events INFO:  eta: 6:06:29  iter: 4339  total_loss: 7.855  loss_sem_seg: 6.163  loss_relation: 0.4423  loss_center: 0.8417  loss_offset: 0.6016  time: 1.4071  data_time: 0.0262  lr: 0.00040122  max_mem: 29130M
[10/10 12:02:01] d2.utils.events INFO:  eta: 6:06:01  iter: 4359  total_loss: 6.773  loss_sem_seg: 5.137  loss_relation: 0.4478  loss_center: 0.8861  loss_offset: 0.6399  time: 1.4071  data_time: 0.0290  lr: 0.00040076  max_mem: 29130M
[10/10 12:02:29] d2.utils.events INFO:  eta: 6:05:35  iter: 4379  total_loss: 7.155  loss_sem_seg: 5.169  loss_relation: 0.4324  loss_center: 0.7956  loss_offset: 0.6477  time: 1.4071  data_time: 0.0285  lr: 0.0004003  max_mem: 29130M
[10/10 12:02:57] d2.utils.events INFO:  eta: 6:05:07  iter: 4399  total_loss: 7.131  loss_sem_seg: 5.004  loss_relation: 0.4433  loss_center: 0.7609  loss_offset: 0.5726  time: 1.4071  data_time: 0.0269  lr: 0.00039983  max_mem: 29130M
[10/10 12:03:25] d2.utils.events INFO:  eta: 6:04:39  iter: 4419  total_loss: 7.276  loss_sem_seg: 5.181  loss_relation: 0.4381  loss_center: 0.9914  loss_offset: 0.631  time: 1.4071  data_time: 0.0279  lr: 0.00039937  max_mem: 29130M
[10/10 12:03:54] d2.utils.events INFO:  eta: 6:04:11  iter: 4439  total_loss: 6.947  loss_sem_seg: 5.275  loss_relation: 0.4453  loss_center: 0.9366  loss_offset: 0.6023  time: 1.4071  data_time: 0.0269  lr: 0.00039891  max_mem: 29130M
[10/10 12:04:22] d2.utils.events INFO:  eta: 6:03:43  iter: 4459  total_loss: 7.407  loss_sem_seg: 5.486  loss_relation: 0.4399  loss_center: 0.8337  loss_offset: 0.5411  time: 1.4071  data_time: 0.0288  lr: 0.00039845  max_mem: 29130M
[10/10 12:04:50] d2.utils.events INFO:  eta: 6:03:16  iter: 4479  total_loss: 7.339  loss_sem_seg: 5.507  loss_relation: 0.4244  loss_center: 0.8769  loss_offset: 0.5618  time: 1.4071  data_time: 0.0295  lr: 0.00039799  max_mem: 29130M
[10/10 12:05:18] d2.utils.events INFO:  eta: 6:02:50  iter: 4499  total_loss: 7.73  loss_sem_seg: 5.613  loss_relation: 0.4418  loss_center: 0.8581  loss_offset: 0.6415  time: 1.4071  data_time: 0.0286  lr: 0.00039753  max_mem: 29130M
[10/10 12:05:46] d2.utils.events INFO:  eta: 6:02:22  iter: 4519  total_loss: 7.094  loss_sem_seg: 5.482  loss_relation: 0.4528  loss_center: 0.8607  loss_offset: 0.5625  time: 1.4071  data_time: 0.0264  lr: 0.00039707  max_mem: 29130M
[10/10 12:06:14] d2.utils.events INFO:  eta: 6:01:54  iter: 4539  total_loss: 7.482  loss_sem_seg: 5.688  loss_relation: 0.4196  loss_center: 0.853  loss_offset: 0.5703  time: 1.4071  data_time: 0.0287  lr: 0.0003966  max_mem: 29130M
[10/10 12:06:42] d2.utils.events INFO:  eta: 6:01:23  iter: 4559  total_loss: 6.831  loss_sem_seg: 5.031  loss_relation: 0.4474  loss_center: 1.044  loss_offset: 0.5519  time: 1.4071  data_time: 0.0267  lr: 0.00039614  max_mem: 29130M
[10/10 12:07:10] d2.utils.events INFO:  eta: 6:00:54  iter: 4579  total_loss: 6.712  loss_sem_seg: 4.818  loss_relation: 0.4591  loss_center: 0.7526  loss_offset: 0.6325  time: 1.4070  data_time: 0.0275  lr: 0.00039568  max_mem: 29130M
[10/10 12:07:39] d2.utils.events INFO:  eta: 6:00:26  iter: 4599  total_loss: 6.394  loss_sem_seg: 4.602  loss_relation: 0.4522  loss_center: 0.8146  loss_offset: 0.5284  time: 1.4070  data_time: 0.0259  lr: 0.00039522  max_mem: 29130M
[10/10 12:08:07] d2.utils.events INFO:  eta: 5:59:56  iter: 4619  total_loss: 6.32  loss_sem_seg: 4.482  loss_relation: 0.4265  loss_center: 0.8269  loss_offset: 0.634  time: 1.4070  data_time: 0.0263  lr: 0.00039476  max_mem: 29130M
[10/10 12:08:35] d2.utils.events INFO:  eta: 5:59:28  iter: 4639  total_loss: 7.749  loss_sem_seg: 5.755  loss_relation: 0.4337  loss_center: 0.9034  loss_offset: 0.6606  time: 1.4070  data_time: 0.0262  lr: 0.00039429  max_mem: 29130M
[10/10 12:09:03] d2.utils.events INFO:  eta: 5:58:59  iter: 4659  total_loss: 7.003  loss_sem_seg: 5.045  loss_relation: 0.4454  loss_center: 0.8814  loss_offset: 0.6044  time: 1.4070  data_time: 0.0285  lr: 0.00039383  max_mem: 29130M
[10/10 12:09:31] d2.utils.events INFO:  eta: 5:58:32  iter: 4679  total_loss: 6.618  loss_sem_seg: 4.762  loss_relation: 0.4211  loss_center: 0.7862  loss_offset: 0.5018  time: 1.4070  data_time: 0.0288  lr: 0.00039337  max_mem: 29130M
[10/10 12:09:59] d2.utils.events INFO:  eta: 5:58:03  iter: 4699  total_loss: 7.839  loss_sem_seg: 6.18  loss_relation: 0.43  loss_center: 0.8087  loss_offset: 0.6336  time: 1.4070  data_time: 0.0269  lr: 0.00039291  max_mem: 29130M
[10/10 12:10:27] d2.utils.events INFO:  eta: 5:57:36  iter: 4719  total_loss: 7.005  loss_sem_seg: 4.884  loss_relation: 0.4344  loss_center: 0.9007  loss_offset: 0.6028  time: 1.4070  data_time: 0.0281  lr: 0.00039245  max_mem: 29130M
[10/10 12:10:55] d2.utils.events INFO:  eta: 5:57:08  iter: 4739  total_loss: 6.94  loss_sem_seg: 5.048  loss_relation: 0.4387  loss_center: 0.8001  loss_offset: 0.5984  time: 1.4070  data_time: 0.0276  lr: 0.00039198  max_mem: 29130M
[10/10 12:11:23] d2.utils.events INFO:  eta: 5:56:39  iter: 4759  total_loss: 7.222  loss_sem_seg: 5.406  loss_relation: 0.446  loss_center: 0.802  loss_offset: 0.5959  time: 1.4070  data_time: 0.0279  lr: 0.00039152  max_mem: 29130M
[10/10 12:11:52] d2.utils.events INFO:  eta: 5:56:11  iter: 4779  total_loss: 6.774  loss_sem_seg: 4.859  loss_relation: 0.4457  loss_center: 0.8636  loss_offset: 0.5189  time: 1.4070  data_time: 0.0291  lr: 0.00039106  max_mem: 29130M
[10/10 12:12:20] d2.utils.events INFO:  eta: 5:55:45  iter: 4799  total_loss: 7.498  loss_sem_seg: 5.525  loss_relation: 0.4311  loss_center: 0.833  loss_offset: 0.6007  time: 1.4070  data_time: 0.0300  lr: 0.0003906  max_mem: 29130M
[10/10 12:12:48] d2.utils.events INFO:  eta: 5:55:18  iter: 4819  total_loss: 7.161  loss_sem_seg: 4.942  loss_relation: 0.4411  loss_center: 0.8561  loss_offset: 0.5213  time: 1.4070  data_time: 0.0287  lr: 0.00039013  max_mem: 29130M
[10/10 12:13:16] d2.utils.events INFO:  eta: 5:54:49  iter: 4839  total_loss: 7.593  loss_sem_seg: 5.595  loss_relation: 0.4496  loss_center: 0.9982  loss_offset: 0.5558  time: 1.4070  data_time: 0.0293  lr: 0.00038967  max_mem: 29130M
[10/10 12:13:44] d2.utils.events INFO:  eta: 5:54:20  iter: 4859  total_loss: 7.754  loss_sem_seg: 5.718  loss_relation: 0.4467  loss_center: 0.7524  loss_offset: 0.6737  time: 1.4070  data_time: 0.0279  lr: 0.00038921  max_mem: 29130M
[10/10 12:14:12] d2.utils.events INFO:  eta: 5:53:53  iter: 4879  total_loss: 7.065  loss_sem_seg: 5.202  loss_relation: 0.4411  loss_center: 0.755  loss_offset: 0.4865  time: 1.4070  data_time: 0.0276  lr: 0.00038875  max_mem: 29130M
[10/10 12:14:41] d2.utils.events INFO:  eta: 5:53:24  iter: 4899  total_loss: 7.097  loss_sem_seg: 5.12  loss_relation: 0.4476  loss_center: 0.8951  loss_offset: 0.4825  time: 1.4070  data_time: 0.0287  lr: 0.00038828  max_mem: 29130M
[10/10 12:15:09] d2.utils.events INFO:  eta: 5:52:55  iter: 4919  total_loss: 6.866  loss_sem_seg: 5.024  loss_relation: 0.4317  loss_center: 0.83  loss_offset: 0.6048  time: 1.4070  data_time: 0.0268  lr: 0.00038782  max_mem: 29130M
[10/10 12:15:37] d2.utils.events INFO:  eta: 5:52:30  iter: 4939  total_loss: 6.971  loss_sem_seg: 5.317  loss_relation: 0.4408  loss_center: 0.7939  loss_offset: 0.5838  time: 1.4070  data_time: 0.0280  lr: 0.00038736  max_mem: 29130M
[10/10 12:16:05] d2.utils.events INFO:  eta: 5:52:04  iter: 4959  total_loss: 7.223  loss_sem_seg: 5.388  loss_relation: 0.448  loss_center: 0.8138  loss_offset: 0.551  time: 1.4070  data_time: 0.0277  lr: 0.00038689  max_mem: 29130M
[10/10 12:16:33] d2.utils.events INFO:  eta: 5:51:40  iter: 4979  total_loss: 7.169  loss_sem_seg: 5.232  loss_relation: 0.4693  loss_center: 0.8275  loss_offset: 0.5702  time: 1.4069  data_time: 0.0270  lr: 0.00038643  max_mem: 29130M
[10/10 12:17:01] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_0004999.pth
[10/10 12:17:03] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[10/10 12:17:03] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/10 12:17:03] d2.data.common INFO: Serialized dataset takes 0.86 MiB
[10/10 12:17:03] d2.evaluation.evaluator INFO: Start inference on 250 batches
[10/10 12:17:17] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0007 s/iter. Inference: 0.0902 s/iter. Eval: 0.0281 s/iter. Total: 0.1190 s/iter. ETA=0:00:28
[10/10 12:17:22] d2.evaluation.evaluator INFO: Inference done 54/250. Dataloading: 0.0014 s/iter. Inference: 0.0872 s/iter. Eval: 0.0284 s/iter. Total: 0.1170 s/iter. ETA=0:00:22
[10/10 12:17:27] d2.evaluation.evaluator INFO: Inference done 99/250. Dataloading: 0.0014 s/iter. Inference: 0.0855 s/iter. Eval: 0.0281 s/iter. Total: 0.1152 s/iter. ETA=0:00:17
[10/10 12:17:32] d2.evaluation.evaluator INFO: Inference done 142/250. Dataloading: 0.0015 s/iter. Inference: 0.0858 s/iter. Eval: 0.0283 s/iter. Total: 0.1156 s/iter. ETA=0:00:12
[10/10 12:17:38] d2.evaluation.evaluator INFO: Inference done 188/250. Dataloading: 0.0015 s/iter. Inference: 0.0848 s/iter. Eval: 0.0277 s/iter. Total: 0.1141 s/iter. ETA=0:00:07
[10/10 12:17:43] d2.evaluation.evaluator INFO: Inference done 233/250. Dataloading: 0.0015 s/iter. Inference: 0.0844 s/iter. Eval: 0.0277 s/iter. Total: 0.1136 s/iter. ETA=0:00:01
[10/10 12:17:45] d2.evaluation.evaluator INFO: Total inference time: 0:00:28.169229 (0.114976 s / iter per device, on 2 devices)
[10/10 12:17:45] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:20 (0.084408 s / iter per device, on 2 devices)
[10/10 12:17:45] d2.projects.panoptic_deeplab.evaluator INFO: Writing all panoptic predictions to /tmp/panoptic_eval7f4v1vxr ...
[10/10 12:17:50] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Relations Evaluation Results: 5.004862444431211
[10/10 12:17:50] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Evaluation Results:
|        |  PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:-----:|:------:|:------:|:-------------:|
|  All   | 6.737 | 28.525 | 9.120  |      129      |
| Things | 4.482 | 25.160 | 6.496  |      76       |
| Stuff  | 9.970 | 33.351 | 12.884 |      53       |
[10/10 12:17:50] d2.engine.defaults INFO: Evaluation results for psg_val in csv format:
[10/10 12:17:50] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/10 12:17:50] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[10/10 12:17:50] d2.evaluation.testing INFO: copypaste: 6.7368,28.5251,9.1204,4.4825,25.1598,6.4958,9.9695,33.3507,12.8840
[10/10 12:17:50] d2.evaluation.testing INFO: copypaste: Task: relation_mean_recall
[10/10 12:17:50] d2.evaluation.testing INFO: copypaste: mean_recall
[10/10 12:17:50] d2.evaluation.testing INFO: copypaste: 0.0500
[10/10 12:17:50] d2.utils.events INFO:  eta: 5:51:09  iter: 4999  total_loss: 6.82  loss_sem_seg: 4.956  loss_relation: 0.4242  loss_center: 0.8735  loss_offset: 0.6384  time: 1.4069  data_time: 0.0271  lr: 0.00038597  max_mem: 29130M
[10/10 12:17:50] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_best.pth
[10/10 12:17:57] d2.engine.hooks INFO: Saved best model as latest eval score for relation_mean_recall/mean_recall is 0.05005, better than last best score 0.04000 @ iteration 999.
[10/10 12:18:25] d2.utils.events INFO:  eta: 5:50:42  iter: 5019  total_loss: 7.729  loss_sem_seg: 5.87  loss_relation: 0.4484  loss_center: 0.8502  loss_offset: 0.593  time: 1.4069  data_time: 0.0293  lr: 0.0003855  max_mem: 29130M
[10/10 12:18:53] d2.utils.events INFO:  eta: 5:50:16  iter: 5039  total_loss: 7.957  loss_sem_seg: 5.935  loss_relation: 0.4217  loss_center: 0.9986  loss_offset: 0.5472  time: 1.4069  data_time: 0.0281  lr: 0.00038504  max_mem: 29130M
[10/10 12:19:22] d2.utils.events INFO:  eta: 5:49:49  iter: 5059  total_loss: 6.395  loss_sem_seg: 4.572  loss_relation: 0.4285  loss_center: 0.7924  loss_offset: 0.5544  time: 1.4069  data_time: 0.0276  lr: 0.00038458  max_mem: 29130M
[10/10 12:19:50] d2.utils.events INFO:  eta: 5:49:21  iter: 5079  total_loss: 6.494  loss_sem_seg: 4.578  loss_relation: 0.4184  loss_center: 0.8774  loss_offset: 0.5249  time: 1.4069  data_time: 0.0298  lr: 0.00038411  max_mem: 29130M
[10/10 12:20:18] d2.utils.events INFO:  eta: 5:48:53  iter: 5099  total_loss: 7.059  loss_sem_seg: 5.148  loss_relation: 0.4157  loss_center: 0.8282  loss_offset: 0.582  time: 1.4069  data_time: 0.0293  lr: 0.00038365  max_mem: 29130M
[10/10 12:20:46] d2.utils.events INFO:  eta: 5:48:25  iter: 5119  total_loss: 6.474  loss_sem_seg: 4.509  loss_relation: 0.4388  loss_center: 0.7463  loss_offset: 0.5187  time: 1.4069  data_time: 0.0277  lr: 0.00038319  max_mem: 29130M
[10/10 12:21:14] d2.utils.events INFO:  eta: 5:47:57  iter: 5139  total_loss: 6.565  loss_sem_seg: 4.704  loss_relation: 0.4267  loss_center: 0.8098  loss_offset: 0.5534  time: 1.4069  data_time: 0.0294  lr: 0.00038272  max_mem: 29130M
[10/10 12:21:42] d2.utils.events INFO:  eta: 5:47:29  iter: 5159  total_loss: 6.979  loss_sem_seg: 5.165  loss_relation: 0.4506  loss_center: 0.8925  loss_offset: 0.5222  time: 1.4069  data_time: 0.0279  lr: 0.00038226  max_mem: 29130M
[10/10 12:22:11] d2.utils.events INFO:  eta: 5:47:01  iter: 5179  total_loss: 6.355  loss_sem_seg: 4.627  loss_relation: 0.4345  loss_center: 0.7975  loss_offset: 0.4546  time: 1.4069  data_time: 0.0290  lr: 0.0003818  max_mem: 29130M
[10/10 12:22:39] d2.utils.events INFO:  eta: 5:46:34  iter: 5199  total_loss: 7.057  loss_sem_seg: 5.038  loss_relation: 0.4297  loss_center: 0.8919  loss_offset: 0.5786  time: 1.4069  data_time: 0.0294  lr: 0.00038133  max_mem: 29130M
[10/10 12:23:07] d2.utils.events INFO:  eta: 5:46:05  iter: 5219  total_loss: 6.917  loss_sem_seg: 5.046  loss_relation: 0.4412  loss_center: 0.9561  loss_offset: 0.5357  time: 1.4069  data_time: 0.0298  lr: 0.00038087  max_mem: 29130M
[10/10 12:23:35] d2.utils.events INFO:  eta: 5:45:37  iter: 5239  total_loss: 6.377  loss_sem_seg: 4.536  loss_relation: 0.4384  loss_center: 0.8451  loss_offset: 0.4781  time: 1.4070  data_time: 0.0294  lr: 0.00038041  max_mem: 29130M
[10/10 12:24:03] d2.utils.events INFO:  eta: 5:45:10  iter: 5259  total_loss: 7.296  loss_sem_seg: 5.499  loss_relation: 0.4482  loss_center: 0.9425  loss_offset: 0.5724  time: 1.4070  data_time: 0.0285  lr: 0.00037994  max_mem: 29130M
[10/10 12:24:31] d2.utils.events INFO:  eta: 5:44:42  iter: 5279  total_loss: 6.524  loss_sem_seg: 4.76  loss_relation: 0.432  loss_center: 0.7707  loss_offset: 0.5482  time: 1.4070  data_time: 0.0281  lr: 0.00037948  max_mem: 29130M
[10/10 12:25:00] d2.utils.events INFO:  eta: 5:44:14  iter: 5299  total_loss: 7.517  loss_sem_seg: 5.645  loss_relation: 0.4436  loss_center: 0.8557  loss_offset: 0.5075  time: 1.4070  data_time: 0.0301  lr: 0.00037901  max_mem: 29130M
[10/10 12:25:28] d2.utils.events INFO:  eta: 5:43:46  iter: 5319  total_loss: 7.034  loss_sem_seg: 5.28  loss_relation: 0.408  loss_center: 0.8424  loss_offset: 0.56  time: 1.4070  data_time: 0.0280  lr: 0.00037855  max_mem: 29130M
[10/10 12:25:56] d2.utils.events INFO:  eta: 5:43:17  iter: 5339  total_loss: 6.635  loss_sem_seg: 4.668  loss_relation: 0.4375  loss_center: 0.8915  loss_offset: 0.5876  time: 1.4069  data_time: 0.0265  lr: 0.00037809  max_mem: 29130M
[10/10 12:26:24] d2.utils.events INFO:  eta: 5:42:50  iter: 5359  total_loss: 7.128  loss_sem_seg: 5.478  loss_relation: 0.4225  loss_center: 0.7267  loss_offset: 0.5741  time: 1.4069  data_time: 0.0292  lr: 0.00037762  max_mem: 29130M
[10/10 12:26:52] d2.utils.events INFO:  eta: 5:42:21  iter: 5379  total_loss: 6.878  loss_sem_seg: 5.071  loss_relation: 0.4318  loss_center: 0.782  loss_offset: 0.5528  time: 1.4069  data_time: 0.0264  lr: 0.00037716  max_mem: 29130M
[10/10 12:27:20] d2.utils.events INFO:  eta: 5:41:53  iter: 5399  total_loss: 7.263  loss_sem_seg: 5.356  loss_relation: 0.4404  loss_center: 0.8215  loss_offset: 0.5444  time: 1.4069  data_time: 0.0289  lr: 0.00037669  max_mem: 29130M
[10/10 12:27:48] d2.utils.events INFO:  eta: 5:41:26  iter: 5419  total_loss: 6.582  loss_sem_seg: 4.825  loss_relation: 0.4413  loss_center: 0.8187  loss_offset: 0.4887  time: 1.4069  data_time: 0.0287  lr: 0.00037623  max_mem: 29130M
[10/10 12:28:17] d2.utils.events INFO:  eta: 5:40:59  iter: 5439  total_loss: 7.197  loss_sem_seg: 5.323  loss_relation: 0.4415  loss_center: 0.9263  loss_offset: 0.5295  time: 1.4069  data_time: 0.0294  lr: 0.00037576  max_mem: 29130M
[10/10 12:28:45] d2.utils.events INFO:  eta: 5:40:30  iter: 5459  total_loss: 6.834  loss_sem_seg: 4.8  loss_relation: 0.4389  loss_center: 0.7773  loss_offset: 0.6255  time: 1.4069  data_time: 0.0281  lr: 0.0003753  max_mem: 29130M
[10/10 12:29:13] d2.utils.events INFO:  eta: 5:40:01  iter: 5479  total_loss: 6.78  loss_sem_seg: 4.817  loss_relation: 0.4561  loss_center: 0.7384  loss_offset: 0.6286  time: 1.4069  data_time: 0.0290  lr: 0.00037483  max_mem: 29130M
[10/10 12:29:41] d2.utils.events INFO:  eta: 5:39:33  iter: 5499  total_loss: 7.256  loss_sem_seg: 5.219  loss_relation: 0.446  loss_center: 0.7418  loss_offset: 0.5938  time: 1.4069  data_time: 0.0276  lr: 0.00037437  max_mem: 29130M
[10/10 12:30:09] d2.utils.events INFO:  eta: 5:39:06  iter: 5519  total_loss: 6.784  loss_sem_seg: 4.586  loss_relation: 0.4384  loss_center: 0.9168  loss_offset: 0.5346  time: 1.4069  data_time: 0.0266  lr: 0.00037391  max_mem: 29130M
[10/10 12:30:37] d2.utils.events INFO:  eta: 5:38:37  iter: 5539  total_loss: 6.67  loss_sem_seg: 4.886  loss_relation: 0.4298  loss_center: 0.9324  loss_offset: 0.5522  time: 1.4069  data_time: 0.0282  lr: 0.00037344  max_mem: 29130M
[10/10 12:31:05] d2.utils.events INFO:  eta: 5:38:12  iter: 5559  total_loss: 6.721  loss_sem_seg: 4.901  loss_relation: 0.4399  loss_center: 0.8454  loss_offset: 0.5349  time: 1.4069  data_time: 0.0281  lr: 0.00037298  max_mem: 29130M
[10/10 12:31:34] d2.utils.events INFO:  eta: 5:37:45  iter: 5579  total_loss: 6.79  loss_sem_seg: 4.896  loss_relation: 0.4406  loss_center: 0.8626  loss_offset: 0.579  time: 1.4069  data_time: 0.0284  lr: 0.00037251  max_mem: 29130M
[10/10 12:32:02] d2.utils.events INFO:  eta: 5:37:19  iter: 5599  total_loss: 6.927  loss_sem_seg: 5.018  loss_relation: 0.4413  loss_center: 0.8148  loss_offset: 0.5675  time: 1.4069  data_time: 0.0282  lr: 0.00037205  max_mem: 29130M
[10/10 12:32:30] d2.utils.events INFO:  eta: 5:36:51  iter: 5619  total_loss: 7.313  loss_sem_seg: 5.312  loss_relation: 0.4314  loss_center: 0.8708  loss_offset: 0.5602  time: 1.4069  data_time: 0.0271  lr: 0.00037158  max_mem: 29130M
[10/10 12:32:58] d2.utils.events INFO:  eta: 5:36:23  iter: 5639  total_loss: 6.415  loss_sem_seg: 4.748  loss_relation: 0.4212  loss_center: 0.8432  loss_offset: 0.4442  time: 1.4069  data_time: 0.0288  lr: 0.00037112  max_mem: 29130M
[10/10 12:33:26] d2.utils.events INFO:  eta: 5:35:53  iter: 5659  total_loss: 6.919  loss_sem_seg: 5.052  loss_relation: 0.4429  loss_center: 0.8362  loss_offset: 0.4893  time: 1.4069  data_time: 0.0283  lr: 0.00037065  max_mem: 29130M
[10/10 12:33:54] d2.utils.events INFO:  eta: 5:35:25  iter: 5679  total_loss: 6.362  loss_sem_seg: 4.536  loss_relation: 0.4226  loss_center: 0.866  loss_offset: 0.5615  time: 1.4069  data_time: 0.0296  lr: 0.00037019  max_mem: 29130M
[10/10 12:34:22] d2.utils.events INFO:  eta: 5:34:57  iter: 5699  total_loss: 6.691  loss_sem_seg: 5.043  loss_relation: 0.4259  loss_center: 0.7776  loss_offset: 0.4719  time: 1.4069  data_time: 0.0284  lr: 0.00036972  max_mem: 29130M
[10/10 12:34:50] d2.utils.events INFO:  eta: 5:34:29  iter: 5719  total_loss: 6.478  loss_sem_seg: 4.534  loss_relation: 0.4309  loss_center: 0.8289  loss_offset: 0.567  time: 1.4069  data_time: 0.0277  lr: 0.00036925  max_mem: 29130M
[10/10 12:35:19] d2.utils.events INFO:  eta: 5:34:00  iter: 5739  total_loss: 6.39  loss_sem_seg: 4.545  loss_relation: 0.4276  loss_center: 0.9637  loss_offset: 0.5865  time: 1.4069  data_time: 0.0292  lr: 0.00036879  max_mem: 29130M
[10/10 12:35:47] d2.utils.events INFO:  eta: 5:33:33  iter: 5759  total_loss: 7.208  loss_sem_seg: 5.43  loss_relation: 0.4257  loss_center: 0.7837  loss_offset: 0.5489  time: 1.4069  data_time: 0.0291  lr: 0.00036832  max_mem: 29130M
[10/10 12:36:15] d2.utils.events INFO:  eta: 5:33:05  iter: 5779  total_loss: 6.776  loss_sem_seg: 5.05  loss_relation: 0.4481  loss_center: 0.8128  loss_offset: 0.5246  time: 1.4069  data_time: 0.0280  lr: 0.00036786  max_mem: 29130M
[10/10 12:36:43] d2.utils.events INFO:  eta: 5:32:37  iter: 5799  total_loss: 6.808  loss_sem_seg: 4.828  loss_relation: 0.4278  loss_center: 0.8147  loss_offset: 0.5296  time: 1.4069  data_time: 0.0276  lr: 0.00036739  max_mem: 29130M
[10/10 12:37:11] d2.utils.events INFO:  eta: 5:32:09  iter: 5819  total_loss: 7.067  loss_sem_seg: 5.231  loss_relation: 0.4433  loss_center: 0.8702  loss_offset: 0.5474  time: 1.4069  data_time: 0.0293  lr: 0.00036693  max_mem: 29130M
[10/10 12:37:39] d2.utils.events INFO:  eta: 5:31:41  iter: 5839  total_loss: 7.489  loss_sem_seg: 5.337  loss_relation: 0.4341  loss_center: 0.8566  loss_offset: 0.5921  time: 1.4069  data_time: 0.0266  lr: 0.00036646  max_mem: 29130M
[10/10 12:38:08] d2.utils.events INFO:  eta: 5:31:15  iter: 5859  total_loss: 6.598  loss_sem_seg: 5.005  loss_relation: 0.4348  loss_center: 0.8445  loss_offset: 0.4889  time: 1.4069  data_time: 0.0272  lr: 0.00036599  max_mem: 29130M
[10/10 12:38:36] d2.utils.events INFO:  eta: 5:30:46  iter: 5879  total_loss: 7.374  loss_sem_seg: 5.323  loss_relation: 0.4342  loss_center: 0.8277  loss_offset: 0.5303  time: 1.4069  data_time: 0.0272  lr: 0.00036553  max_mem: 29130M
[10/10 12:39:04] d2.utils.events INFO:  eta: 5:30:18  iter: 5899  total_loss: 6.262  loss_sem_seg: 4.366  loss_relation: 0.4395  loss_center: 0.9725  loss_offset: 0.5403  time: 1.4069  data_time: 0.0271  lr: 0.00036506  max_mem: 29130M
[10/10 12:39:32] d2.utils.events INFO:  eta: 5:29:50  iter: 5919  total_loss: 6.448  loss_sem_seg: 4.727  loss_relation: 0.4244  loss_center: 0.9173  loss_offset: 0.5216  time: 1.4069  data_time: 0.0291  lr: 0.0003646  max_mem: 29130M
[10/10 12:40:00] d2.utils.events INFO:  eta: 5:29:21  iter: 5939  total_loss: 6.826  loss_sem_seg: 5.187  loss_relation: 0.4302  loss_center: 0.8442  loss_offset: 0.5672  time: 1.4069  data_time: 0.0306  lr: 0.00036413  max_mem: 29130M
[10/10 12:40:28] d2.utils.events INFO:  eta: 5:28:53  iter: 5959  total_loss: 7.083  loss_sem_seg: 5.077  loss_relation: 0.4256  loss_center: 0.9023  loss_offset: 0.4961  time: 1.4069  data_time: 0.0268  lr: 0.00036366  max_mem: 29130M
[10/10 12:40:56] d2.utils.events INFO:  eta: 5:28:24  iter: 5979  total_loss: 7.221  loss_sem_seg: 5.073  loss_relation: 0.4353  loss_center: 0.8903  loss_offset: 0.5236  time: 1.4069  data_time: 0.0269  lr: 0.0003632  max_mem: 29130M
[10/10 12:41:24] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_0005999.pth
[10/10 12:41:26] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[10/10 12:41:26] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/10 12:41:26] d2.data.common INFO: Serialized dataset takes 0.86 MiB
[10/10 12:41:26] d2.evaluation.evaluator INFO: Start inference on 250 batches
[10/10 12:41:41] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0013 s/iter. Inference: 0.1036 s/iter. Eval: 0.0279 s/iter. Total: 0.1328 s/iter. ETA=0:00:31
[10/10 12:41:46] d2.evaluation.evaluator INFO: Inference done 52/250. Dataloading: 0.0013 s/iter. Inference: 0.0942 s/iter. Eval: 0.0283 s/iter. Total: 0.1238 s/iter. ETA=0:00:24
[10/10 12:41:51] d2.evaluation.evaluator INFO: Inference done 94/250. Dataloading: 0.0014 s/iter. Inference: 0.0928 s/iter. Eval: 0.0283 s/iter. Total: 0.1226 s/iter. ETA=0:00:19
[10/10 12:41:56] d2.evaluation.evaluator INFO: Inference done 136/250. Dataloading: 0.0015 s/iter. Inference: 0.0920 s/iter. Eval: 0.0286 s/iter. Total: 0.1221 s/iter. ETA=0:00:13
[10/10 12:42:01] d2.evaluation.evaluator INFO: Inference done 178/250. Dataloading: 0.0015 s/iter. Inference: 0.0919 s/iter. Eval: 0.0284 s/iter. Total: 0.1218 s/iter. ETA=0:00:08
[10/10 12:42:06] d2.evaluation.evaluator INFO: Inference done 221/250. Dataloading: 0.0015 s/iter. Inference: 0.0916 s/iter. Eval: 0.0280 s/iter. Total: 0.1212 s/iter. ETA=0:00:03
[10/10 12:42:10] d2.evaluation.evaluator INFO: Total inference time: 0:00:30.000286 (0.122450 s / iter per device, on 2 devices)
[10/10 12:42:10] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:22 (0.091452 s / iter per device, on 2 devices)
[10/10 12:42:10] d2.projects.panoptic_deeplab.evaluator INFO: Writing all panoptic predictions to /tmp/panoptic_evalpwig39zi ...
[10/10 12:42:15] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Relations Evaluation Results: 6.89554439312823
[10/10 12:42:15] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 7.198  | 31.948 | 9.704  |      129      |
| Things | 4.405  | 28.317 | 6.307  |      76       |
| Stuff  | 11.202 | 37.155 | 14.575 |      53       |
[10/10 12:42:15] d2.engine.defaults INFO: Evaluation results for psg_val in csv format:
[10/10 12:42:15] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/10 12:42:15] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[10/10 12:42:15] d2.evaluation.testing INFO: copypaste: 7.1976,31.9483,9.7039,4.4053,28.3174,6.3067,11.2017,37.1548,14.5754
[10/10 12:42:15] d2.evaluation.testing INFO: copypaste: Task: relation_mean_recall
[10/10 12:42:15] d2.evaluation.testing INFO: copypaste: mean_recall
[10/10 12:42:15] d2.evaluation.testing INFO: copypaste: 0.0690
[10/10 12:42:15] d2.utils.events INFO:  eta: 5:27:56  iter: 5999  total_loss: 6.305  loss_sem_seg: 4.484  loss_relation: 0.4356  loss_center: 0.7318  loss_offset: 0.5673  time: 1.4069  data_time: 0.0308  lr: 0.00036273  max_mem: 29130M
[10/10 12:42:15] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_best.pth
[10/10 12:42:22] d2.engine.hooks INFO: Saved best model as latest eval score for relation_mean_recall/mean_recall is 0.06896, better than last best score 0.05005 @ iteration 4999.
[10/10 12:42:50] d2.utils.events INFO:  eta: 5:27:28  iter: 6019  total_loss: 6.788  loss_sem_seg: 5.024  loss_relation: 0.4317  loss_center: 0.7527  loss_offset: 0.6255  time: 1.4069  data_time: 0.0258  lr: 0.00036227  max_mem: 29130M
[10/10 12:43:18] d2.utils.events INFO:  eta: 5:26:59  iter: 6039  total_loss: 6.468  loss_sem_seg: 4.578  loss_relation: 0.4307  loss_center: 0.7987  loss_offset: 0.5325  time: 1.4069  data_time: 0.0266  lr: 0.0003618  max_mem: 29130M
[10/10 12:43:47] d2.utils.events INFO:  eta: 5:26:31  iter: 6059  total_loss: 6.556  loss_sem_seg: 4.763  loss_relation: 0.4367  loss_center: 0.7736  loss_offset: 0.5673  time: 1.4069  data_time: 0.0296  lr: 0.00036133  max_mem: 29130M
[10/10 12:44:15] d2.utils.events INFO:  eta: 5:26:04  iter: 6079  total_loss: 7.043  loss_sem_seg: 5.158  loss_relation: 0.4142  loss_center: 0.8369  loss_offset: 0.6251  time: 1.4069  data_time: 0.0301  lr: 0.00036087  max_mem: 29130M
[10/10 12:44:43] d2.utils.events INFO:  eta: 5:25:37  iter: 6099  total_loss: 6.826  loss_sem_seg: 5.02  loss_relation: 0.4148  loss_center: 0.8001  loss_offset: 0.5452  time: 1.4069  data_time: 0.0267  lr: 0.0003604  max_mem: 29130M
[10/10 12:45:11] d2.utils.events INFO:  eta: 5:25:09  iter: 6119  total_loss: 7.136  loss_sem_seg: 5.178  loss_relation: 0.4447  loss_center: 0.7996  loss_offset: 0.5584  time: 1.4069  data_time: 0.0271  lr: 0.00035993  max_mem: 29130M
[10/10 12:45:39] d2.utils.events INFO:  eta: 5:24:40  iter: 6139  total_loss: 6.55  loss_sem_seg: 4.889  loss_relation: 0.4389  loss_center: 0.8164  loss_offset: 0.508  time: 1.4069  data_time: 0.0272  lr: 0.00035947  max_mem: 29130M
[10/10 12:46:08] d2.utils.events INFO:  eta: 5:24:12  iter: 6159  total_loss: 6.738  loss_sem_seg: 4.997  loss_relation: 0.4289  loss_center: 0.8043  loss_offset: 0.6046  time: 1.4069  data_time: 0.0277  lr: 0.000359  max_mem: 29130M
[10/10 12:46:36] d2.utils.events INFO:  eta: 5:23:45  iter: 6179  total_loss: 7.157  loss_sem_seg: 5.207  loss_relation: 0.4157  loss_center: 0.8393  loss_offset: 0.4986  time: 1.4069  data_time: 0.0281  lr: 0.00035853  max_mem: 29130M
[10/10 12:47:04] d2.utils.events INFO:  eta: 5:23:17  iter: 6199  total_loss: 6.962  loss_sem_seg: 5.204  loss_relation: 0.4316  loss_center: 0.8341  loss_offset: 0.5202  time: 1.4069  data_time: 0.0306  lr: 0.00035807  max_mem: 29130M
[10/10 12:47:32] d2.utils.events INFO:  eta: 5:22:47  iter: 6219  total_loss: 7.085  loss_sem_seg: 5.418  loss_relation: 0.4284  loss_center: 0.7899  loss_offset: 0.5883  time: 1.4069  data_time: 0.0283  lr: 0.0003576  max_mem: 29130M
[10/10 12:48:00] d2.utils.events INFO:  eta: 5:22:19  iter: 6239  total_loss: 6.263  loss_sem_seg: 4.611  loss_relation: 0.4066  loss_center: 0.7606  loss_offset: 0.4845  time: 1.4069  data_time: 0.0280  lr: 0.00035713  max_mem: 29130M
[10/10 12:48:28] d2.utils.events INFO:  eta: 5:21:51  iter: 6259  total_loss: 6.916  loss_sem_seg: 5.211  loss_relation: 0.4137  loss_center: 0.7641  loss_offset: 0.5597  time: 1.4069  data_time: 0.0284  lr: 0.00035666  max_mem: 29130M
[10/10 12:48:56] d2.utils.events INFO:  eta: 5:21:23  iter: 6279  total_loss: 6.636  loss_sem_seg: 4.833  loss_relation: 0.4246  loss_center: 0.7998  loss_offset: 0.528  time: 1.4069  data_time: 0.0289  lr: 0.0003562  max_mem: 29130M
[10/10 12:49:25] d2.utils.events INFO:  eta: 5:20:55  iter: 6299  total_loss: 6.633  loss_sem_seg: 4.694  loss_relation: 0.4203  loss_center: 0.8304  loss_offset: 0.5545  time: 1.4069  data_time: 0.0275  lr: 0.00035573  max_mem: 29130M
[10/10 12:49:53] d2.utils.events INFO:  eta: 5:20:27  iter: 6319  total_loss: 6.599  loss_sem_seg: 4.789  loss_relation: 0.4384  loss_center: 0.719  loss_offset: 0.509  time: 1.4069  data_time: 0.0270  lr: 0.00035526  max_mem: 29130M
[10/10 12:50:21] d2.utils.events INFO:  eta: 5:20:00  iter: 6339  total_loss: 6.124  loss_sem_seg: 3.942  loss_relation: 0.4105  loss_center: 0.7677  loss_offset: 0.4199  time: 1.4069  data_time: 0.0282  lr: 0.00035479  max_mem: 29130M
[10/10 12:50:49] d2.utils.events INFO:  eta: 5:19:31  iter: 6359  total_loss: 6.74  loss_sem_seg: 4.911  loss_relation: 0.423  loss_center: 0.8463  loss_offset: 0.5034  time: 1.4069  data_time: 0.0280  lr: 0.00035433  max_mem: 29130M
[10/10 12:51:17] d2.utils.events INFO:  eta: 5:19:05  iter: 6379  total_loss: 6.03  loss_sem_seg: 4.165  loss_relation: 0.4193  loss_center: 0.8692  loss_offset: 0.4886  time: 1.4069  data_time: 0.0276  lr: 0.00035386  max_mem: 29130M
[10/10 12:51:45] d2.utils.events INFO:  eta: 5:18:38  iter: 6399  total_loss: 6.23  loss_sem_seg: 4.528  loss_relation: 0.4411  loss_center: 0.7751  loss_offset: 0.5828  time: 1.4069  data_time: 0.0293  lr: 0.00035339  max_mem: 29130M
[10/10 12:52:13] d2.utils.events INFO:  eta: 5:18:09  iter: 6419  total_loss: 6.289  loss_sem_seg: 4.553  loss_relation: 0.4146  loss_center: 0.7805  loss_offset: 0.5036  time: 1.4069  data_time: 0.0281  lr: 0.00035292  max_mem: 29130M
[10/10 12:52:42] d2.utils.events INFO:  eta: 5:17:41  iter: 6439  total_loss: 6.922  loss_sem_seg: 5.085  loss_relation: 0.4428  loss_center: 0.8143  loss_offset: 0.5423  time: 1.4069  data_time: 0.0289  lr: 0.00035246  max_mem: 29130M
[10/10 12:53:10] d2.utils.events INFO:  eta: 5:17:15  iter: 6459  total_loss: 7.138  loss_sem_seg: 5.189  loss_relation: 0.4296  loss_center: 0.8584  loss_offset: 0.5405  time: 1.4069  data_time: 0.0301  lr: 0.00035199  max_mem: 29130M
[10/10 12:53:38] d2.utils.events INFO:  eta: 5:16:45  iter: 6479  total_loss: 6.749  loss_sem_seg: 4.887  loss_relation: 0.4414  loss_center: 0.855  loss_offset: 0.5276  time: 1.4069  data_time: 0.0273  lr: 0.00035152  max_mem: 29130M
[10/10 12:54:06] d2.utils.events INFO:  eta: 5:16:17  iter: 6499  total_loss: 6.536  loss_sem_seg: 4.684  loss_relation: 0.4231  loss_center: 0.9302  loss_offset: 0.5215  time: 1.4069  data_time: 0.0268  lr: 0.00035105  max_mem: 29130M
[10/10 12:54:34] d2.utils.events INFO:  eta: 5:15:49  iter: 6519  total_loss: 6.41  loss_sem_seg: 4.379  loss_relation: 0.4262  loss_center: 0.8341  loss_offset: 0.5729  time: 1.4069  data_time: 0.0290  lr: 0.00035058  max_mem: 29130M
[10/10 12:55:02] d2.utils.events INFO:  eta: 5:15:21  iter: 6539  total_loss: 6.549  loss_sem_seg: 4.638  loss_relation: 0.4255  loss_center: 0.8272  loss_offset: 0.4875  time: 1.4069  data_time: 0.0274  lr: 0.00035012  max_mem: 29130M
[10/10 12:55:30] d2.utils.events INFO:  eta: 5:14:51  iter: 6559  total_loss: 6.353  loss_sem_seg: 4.53  loss_relation: 0.433  loss_center: 0.9066  loss_offset: 0.4598  time: 1.4069  data_time: 0.0275  lr: 0.00034965  max_mem: 29130M
[10/10 12:55:58] d2.utils.events INFO:  eta: 5:14:23  iter: 6579  total_loss: 6.485  loss_sem_seg: 4.856  loss_relation: 0.4398  loss_center: 0.8187  loss_offset: 0.498  time: 1.4069  data_time: 0.0290  lr: 0.00034918  max_mem: 29130M
[10/10 12:56:27] d2.utils.events INFO:  eta: 5:13:54  iter: 6599  total_loss: 6.395  loss_sem_seg: 4.335  loss_relation: 0.4082  loss_center: 0.878  loss_offset: 0.5319  time: 1.4069  data_time: 0.0299  lr: 0.00034871  max_mem: 29130M
[10/10 12:56:55] d2.utils.events INFO:  eta: 5:13:25  iter: 6619  total_loss: 6.424  loss_sem_seg: 4.712  loss_relation: 0.4326  loss_center: 0.8109  loss_offset: 0.4884  time: 1.4069  data_time: 0.0248  lr: 0.00034824  max_mem: 29130M
[10/10 12:57:23] d2.utils.events INFO:  eta: 5:12:59  iter: 6639  total_loss: 7.024  loss_sem_seg: 5.134  loss_relation: 0.4089  loss_center: 0.8928  loss_offset: 0.5535  time: 1.4069  data_time: 0.0278  lr: 0.00034777  max_mem: 29130M
[10/10 12:57:51] d2.utils.events INFO:  eta: 5:12:31  iter: 6659  total_loss: 6.518  loss_sem_seg: 4.862  loss_relation: 0.4377  loss_center: 0.7792  loss_offset: 0.5163  time: 1.4069  data_time: 0.0269  lr: 0.00034731  max_mem: 29130M
[10/10 12:58:19] d2.utils.events INFO:  eta: 5:12:03  iter: 6679  total_loss: 6.468  loss_sem_seg: 4.531  loss_relation: 0.4349  loss_center: 0.76  loss_offset: 0.5433  time: 1.4069  data_time: 0.0288  lr: 0.00034684  max_mem: 29130M
[10/10 12:58:47] d2.utils.events INFO:  eta: 5:11:36  iter: 6699  total_loss: 6.521  loss_sem_seg: 4.829  loss_relation: 0.4219  loss_center: 0.8276  loss_offset: 0.4963  time: 1.4068  data_time: 0.0281  lr: 0.00034637  max_mem: 29130M
[10/10 12:59:15] d2.utils.events INFO:  eta: 5:11:09  iter: 6719  total_loss: 6.825  loss_sem_seg: 5  loss_relation: 0.4272  loss_center: 0.9138  loss_offset: 0.4903  time: 1.4068  data_time: 0.0290  lr: 0.0003459  max_mem: 29130M
[10/10 12:59:43] d2.utils.events INFO:  eta: 5:10:39  iter: 6739  total_loss: 6.084  loss_sem_seg: 4.274  loss_relation: 0.4286  loss_center: 0.8713  loss_offset: 0.4961  time: 1.4068  data_time: 0.0300  lr: 0.00034543  max_mem: 29130M
[10/10 13:00:11] d2.utils.events INFO:  eta: 5:10:09  iter: 6759  total_loss: 6.29  loss_sem_seg: 4.418  loss_relation: 0.4286  loss_center: 0.8712  loss_offset: 0.552  time: 1.4068  data_time: 0.0280  lr: 0.00034496  max_mem: 29130M
[10/10 13:00:40] d2.utils.events INFO:  eta: 5:09:41  iter: 6779  total_loss: 5.897  loss_sem_seg: 4.017  loss_relation: 0.4153  loss_center: 0.7515  loss_offset: 0.4685  time: 1.4068  data_time: 0.0286  lr: 0.00034449  max_mem: 29130M
[10/10 13:01:08] d2.utils.events INFO:  eta: 5:09:13  iter: 6799  total_loss: 6.396  loss_sem_seg: 4.643  loss_relation: 0.4184  loss_center: 0.7994  loss_offset: 0.5768  time: 1.4068  data_time: 0.0288  lr: 0.00034402  max_mem: 29130M
[10/10 13:01:36] d2.utils.events INFO:  eta: 5:08:44  iter: 6819  total_loss: 5.997  loss_sem_seg: 4.222  loss_relation: 0.3998  loss_center: 0.7843  loss_offset: 0.4962  time: 1.4068  data_time: 0.0274  lr: 0.00034356  max_mem: 29130M
[10/10 13:02:04] d2.utils.events INFO:  eta: 5:08:17  iter: 6839  total_loss: 5.937  loss_sem_seg: 4.178  loss_relation: 0.4219  loss_center: 0.8438  loss_offset: 0.5309  time: 1.4068  data_time: 0.0281  lr: 0.00034309  max_mem: 29130M
[10/10 13:02:32] d2.utils.events INFO:  eta: 5:07:48  iter: 6859  total_loss: 6.517  loss_sem_seg: 4.589  loss_relation: 0.4146  loss_center: 0.8992  loss_offset: 0.5462  time: 1.4068  data_time: 0.0287  lr: 0.00034262  max_mem: 29130M
[10/10 13:03:00] d2.utils.events INFO:  eta: 5:07:19  iter: 6879  total_loss: 6.343  loss_sem_seg: 4.655  loss_relation: 0.4363  loss_center: 0.8027  loss_offset: 0.4482  time: 1.4068  data_time: 0.0272  lr: 0.00034215  max_mem: 29130M
[10/10 13:03:28] d2.utils.events INFO:  eta: 5:06:51  iter: 6899  total_loss: 6.319  loss_sem_seg: 4.157  loss_relation: 0.4252  loss_center: 0.858  loss_offset: 0.503  time: 1.4068  data_time: 0.0253  lr: 0.00034168  max_mem: 29130M
[10/10 13:03:57] d2.utils.events INFO:  eta: 5:06:21  iter: 6919  total_loss: 6.474  loss_sem_seg: 4.701  loss_relation: 0.4204  loss_center: 0.6795  loss_offset: 0.5125  time: 1.4068  data_time: 0.0293  lr: 0.00034121  max_mem: 29130M
[10/10 13:04:25] d2.utils.events INFO:  eta: 5:05:53  iter: 6939  total_loss: 6.465  loss_sem_seg: 4.755  loss_relation: 0.4278  loss_center: 0.8773  loss_offset: 0.5509  time: 1.4068  data_time: 0.0281  lr: 0.00034074  max_mem: 29130M
[10/10 13:04:53] d2.utils.events INFO:  eta: 5:05:25  iter: 6959  total_loss: 6.132  loss_sem_seg: 4.434  loss_relation: 0.4027  loss_center: 0.8222  loss_offset: 0.5155  time: 1.4068  data_time: 0.0284  lr: 0.00034027  max_mem: 29130M
[10/10 13:05:21] d2.utils.events INFO:  eta: 5:04:57  iter: 6979  total_loss: 5.65  loss_sem_seg: 4.051  loss_relation: 0.4195  loss_center: 0.7966  loss_offset: 0.497  time: 1.4068  data_time: 0.0288  lr: 0.0003398  max_mem: 29130M
[10/10 13:05:49] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_0006999.pth
[10/10 13:05:51] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[10/10 13:05:51] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/10 13:05:51] d2.data.common INFO: Serialized dataset takes 0.86 MiB
[10/10 13:05:51] d2.evaluation.evaluator INFO: Start inference on 250 batches
[10/10 13:06:06] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0014 s/iter. Inference: 0.0956 s/iter. Eval: 0.0280 s/iter. Total: 0.1250 s/iter. ETA=0:00:29
[10/10 13:06:11] d2.evaluation.evaluator INFO: Inference done 54/250. Dataloading: 0.0012 s/iter. Inference: 0.0908 s/iter. Eval: 0.0283 s/iter. Total: 0.1204 s/iter. ETA=0:00:23
[10/10 13:06:16] d2.evaluation.evaluator INFO: Inference done 98/250. Dataloading: 0.0013 s/iter. Inference: 0.0884 s/iter. Eval: 0.0279 s/iter. Total: 0.1177 s/iter. ETA=0:00:17
[10/10 13:06:21] d2.evaluation.evaluator INFO: Inference done 141/250. Dataloading: 0.0014 s/iter. Inference: 0.0882 s/iter. Eval: 0.0280 s/iter. Total: 0.1177 s/iter. ETA=0:00:12
[10/10 13:06:26] d2.evaluation.evaluator INFO: Inference done 185/250. Dataloading: 0.0014 s/iter. Inference: 0.0878 s/iter. Eval: 0.0275 s/iter. Total: 0.1168 s/iter. ETA=0:00:07
[10/10 13:06:31] d2.evaluation.evaluator INFO: Inference done 229/250. Dataloading: 0.0014 s/iter. Inference: 0.0876 s/iter. Eval: 0.0275 s/iter. Total: 0.1165 s/iter. ETA=0:00:02
[10/10 13:06:34] d2.evaluation.evaluator INFO: Total inference time: 0:00:28.871790 (0.117844 s / iter per device, on 2 devices)
[10/10 13:06:34] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:21 (0.087460 s / iter per device, on 2 devices)
[10/10 13:06:34] d2.projects.panoptic_deeplab.evaluator INFO: Writing all panoptic predictions to /tmp/panoptic_evala0lm6lb1 ...
[10/10 13:06:39] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Relations Evaluation Results: 6.432855195804661
[10/10 13:06:39] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 7.852  | 33.928 | 10.480 |      129      |
| Things | 5.338  | 32.172 | 7.582  |      76       |
| Stuff  | 11.456 | 36.447 | 14.635 |      53       |
[10/10 13:06:39] d2.engine.defaults INFO: Evaluation results for psg_val in csv format:
[10/10 13:06:39] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/10 13:06:39] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[10/10 13:06:39] d2.evaluation.testing INFO: copypaste: 7.8516,33.9282,10.4799,5.3378,32.1716,7.5821,11.4562,36.4471,14.6352
[10/10 13:06:39] d2.evaluation.testing INFO: copypaste: Task: relation_mean_recall
[10/10 13:06:39] d2.evaluation.testing INFO: copypaste: mean_recall
[10/10 13:06:39] d2.evaluation.testing INFO: copypaste: 0.0643
[10/10 13:06:39] d2.utils.events INFO:  eta: 5:04:28  iter: 6999  total_loss: 5.815  loss_sem_seg: 4.177  loss_relation: 0.4068  loss_center: 0.6921  loss_offset: 0.471  time: 1.4068  data_time: 0.0289  lr: 0.00033933  max_mem: 29130M
[10/10 13:06:39] d2.engine.hooks INFO: Not saving as latest eval score for relation_mean_recall/mean_recall is 0.06433, not better than best score 0.06896 @ iteration 5999.
[10/10 13:07:07] d2.utils.events INFO:  eta: 5:04:02  iter: 7019  total_loss: 6.513  loss_sem_seg: 4.546  loss_relation: 0.4408  loss_center: 0.8229  loss_offset: 0.52  time: 1.4068  data_time: 0.0290  lr: 0.00033886  max_mem: 29130M
[10/10 13:07:35] d2.utils.events INFO:  eta: 5:03:32  iter: 7039  total_loss: 6.857  loss_sem_seg: 4.968  loss_relation: 0.4212  loss_center: 0.8433  loss_offset: 0.4713  time: 1.4068  data_time: 0.0264  lr: 0.00033839  max_mem: 29130M
[10/10 13:08:03] d2.utils.events INFO:  eta: 5:03:04  iter: 7059  total_loss: 6.296  loss_sem_seg: 4.516  loss_relation: 0.4205  loss_center: 0.8801  loss_offset: 0.5105  time: 1.4068  data_time: 0.0283  lr: 0.00033792  max_mem: 29130M
[10/10 13:08:31] d2.utils.events INFO:  eta: 5:02:33  iter: 7079  total_loss: 6.829  loss_sem_seg: 5.041  loss_relation: 0.4309  loss_center: 0.8928  loss_offset: 0.5738  time: 1.4068  data_time: 0.0279  lr: 0.00033745  max_mem: 29130M
[10/10 13:08:59] d2.utils.events INFO:  eta: 5:02:05  iter: 7099  total_loss: 6.289  loss_sem_seg: 4.453  loss_relation: 0.4122  loss_center: 0.8726  loss_offset: 0.5408  time: 1.4068  data_time: 0.0269  lr: 0.00033698  max_mem: 29130M
[10/10 13:09:28] d2.utils.events INFO:  eta: 5:01:36  iter: 7119  total_loss: 6.295  loss_sem_seg: 4.459  loss_relation: 0.4265  loss_center: 0.7736  loss_offset: 0.5278  time: 1.4068  data_time: 0.0281  lr: 0.00033651  max_mem: 29130M
[10/10 13:09:56] d2.utils.events INFO:  eta: 5:01:08  iter: 7139  total_loss: 6.112  loss_sem_seg: 4.297  loss_relation: 0.4191  loss_center: 0.8427  loss_offset: 0.5368  time: 1.4068  data_time: 0.0282  lr: 0.00033604  max_mem: 29130M
[10/10 13:10:24] d2.utils.events INFO:  eta: 5:00:40  iter: 7159  total_loss: 5.751  loss_sem_seg: 4.256  loss_relation: 0.4098  loss_center: 0.7871  loss_offset: 0.514  time: 1.4068  data_time: 0.0304  lr: 0.00033557  max_mem: 29130M
[10/10 13:10:52] d2.utils.events INFO:  eta: 5:00:12  iter: 7179  total_loss: 6.562  loss_sem_seg: 4.875  loss_relation: 0.421  loss_center: 0.8221  loss_offset: 0.4913  time: 1.4068  data_time: 0.0294  lr: 0.0003351  max_mem: 29130M
[10/10 13:11:20] d2.utils.events INFO:  eta: 4:59:46  iter: 7199  total_loss: 6.453  loss_sem_seg: 4.796  loss_relation: 0.435  loss_center: 0.7537  loss_offset: 0.5411  time: 1.4068  data_time: 0.0292  lr: 0.00033463  max_mem: 29130M
[10/10 13:11:48] d2.utils.events INFO:  eta: 4:59:19  iter: 7219  total_loss: 6.543  loss_sem_seg: 4.758  loss_relation: 0.4395  loss_center: 0.8558  loss_offset: 0.5064  time: 1.4068  data_time: 0.0318  lr: 0.00033416  max_mem: 29130M
[10/10 13:12:17] d2.utils.events INFO:  eta: 4:58:51  iter: 7239  total_loss: 6.107  loss_sem_seg: 4.168  loss_relation: 0.4317  loss_center: 0.7674  loss_offset: 0.5099  time: 1.4069  data_time: 0.0294  lr: 0.00033369  max_mem: 29130M
[10/10 13:12:45] d2.utils.events INFO:  eta: 4:58:21  iter: 7259  total_loss: 6.143  loss_sem_seg: 4.233  loss_relation: 0.4226  loss_center: 0.8216  loss_offset: 0.5151  time: 1.4069  data_time: 0.0272  lr: 0.00033322  max_mem: 29130M
[10/10 13:13:13] d2.utils.events INFO:  eta: 4:57:54  iter: 7279  total_loss: 6.562  loss_sem_seg: 4.896  loss_relation: 0.4362  loss_center: 0.7295  loss_offset: 0.4909  time: 1.4068  data_time: 0.0278  lr: 0.00033275  max_mem: 29130M
[10/10 13:13:41] d2.utils.events INFO:  eta: 4:57:24  iter: 7299  total_loss: 6.514  loss_sem_seg: 4.604  loss_relation: 0.4195  loss_center: 0.8028  loss_offset: 0.5143  time: 1.4068  data_time: 0.0300  lr: 0.00033227  max_mem: 29130M
[10/10 13:14:09] d2.utils.events INFO:  eta: 4:56:56  iter: 7319  total_loss: 6.463  loss_sem_seg: 4.588  loss_relation: 0.4233  loss_center: 0.8125  loss_offset: 0.5422  time: 1.4069  data_time: 0.0274  lr: 0.0003318  max_mem: 29130M
[10/10 13:14:37] d2.utils.events INFO:  eta: 4:56:28  iter: 7339  total_loss: 5.799  loss_sem_seg: 3.956  loss_relation: 0.418  loss_center: 0.818  loss_offset: 0.4729  time: 1.4069  data_time: 0.0274  lr: 0.00033133  max_mem: 29130M
[10/10 13:15:06] d2.utils.events INFO:  eta: 4:55:59  iter: 7359  total_loss: 5.888  loss_sem_seg: 4.338  loss_relation: 0.4173  loss_center: 0.7868  loss_offset: 0.475  time: 1.4068  data_time: 0.0257  lr: 0.00033086  max_mem: 29130M
[10/10 13:15:34] d2.utils.events INFO:  eta: 4:55:31  iter: 7379  total_loss: 6.112  loss_sem_seg: 4.414  loss_relation: 0.4269  loss_center: 0.9781  loss_offset: 0.5294  time: 1.4068  data_time: 0.0261  lr: 0.00033039  max_mem: 29130M
[10/10 13:16:02] d2.utils.events INFO:  eta: 4:55:03  iter: 7399  total_loss: 5.924  loss_sem_seg: 3.964  loss_relation: 0.4209  loss_center: 0.949  loss_offset: 0.4689  time: 1.4068  data_time: 0.0270  lr: 0.00032992  max_mem: 29130M
[10/10 13:16:30] d2.utils.events INFO:  eta: 4:54:35  iter: 7419  total_loss: 6.673  loss_sem_seg: 5.006  loss_relation: 0.415  loss_center: 0.7777  loss_offset: 0.5055  time: 1.4068  data_time: 0.0276  lr: 0.00032945  max_mem: 29130M
[10/10 13:16:58] d2.utils.events INFO:  eta: 4:54:05  iter: 7439  total_loss: 5.611  loss_sem_seg: 3.879  loss_relation: 0.4321  loss_center: 0.8173  loss_offset: 0.4009  time: 1.4068  data_time: 0.0279  lr: 0.00032898  max_mem: 29130M
[10/10 13:17:26] d2.utils.events INFO:  eta: 4:53:38  iter: 7459  total_loss: 5.867  loss_sem_seg: 4.16  loss_relation: 0.418  loss_center: 0.8743  loss_offset: 0.4614  time: 1.4068  data_time: 0.0274  lr: 0.0003285  max_mem: 29130M
[10/10 13:17:54] d2.utils.events INFO:  eta: 4:53:10  iter: 7479  total_loss: 6.047  loss_sem_seg: 4.32  loss_relation: 0.4098  loss_center: 0.7062  loss_offset: 0.496  time: 1.4068  data_time: 0.0295  lr: 0.00032803  max_mem: 29130M
[10/10 13:18:22] d2.utils.events INFO:  eta: 4:52:42  iter: 7499  total_loss: 5.989  loss_sem_seg: 4.082  loss_relation: 0.4197  loss_center: 0.6072  loss_offset: 0.5892  time: 1.4068  data_time: 0.0263  lr: 0.00032756  max_mem: 29130M
[10/10 13:18:50] d2.utils.events INFO:  eta: 4:52:14  iter: 7519  total_loss: 6.086  loss_sem_seg: 4.388  loss_relation: 0.4103  loss_center: 0.8039  loss_offset: 0.4923  time: 1.4068  data_time: 0.0279  lr: 0.00032709  max_mem: 29130M
[10/10 13:19:19] d2.utils.events INFO:  eta: 4:51:46  iter: 7539  total_loss: 6.116  loss_sem_seg: 4.26  loss_relation: 0.4281  loss_center: 0.7819  loss_offset: 0.4943  time: 1.4068  data_time: 0.0271  lr: 0.00032662  max_mem: 29130M
[10/10 13:19:47] d2.utils.events INFO:  eta: 4:51:20  iter: 7559  total_loss: 6.565  loss_sem_seg: 4.794  loss_relation: 0.4188  loss_center: 0.6951  loss_offset: 0.524  time: 1.4068  data_time: 0.0280  lr: 0.00032615  max_mem: 29130M
[10/10 13:20:15] d2.utils.events INFO:  eta: 4:50:50  iter: 7579  total_loss: 6.128  loss_sem_seg: 4.211  loss_relation: 0.4204  loss_center: 0.8326  loss_offset: 0.5002  time: 1.4068  data_time: 0.0283  lr: 0.00032567  max_mem: 29130M
[10/10 13:20:43] d2.utils.events INFO:  eta: 4:50:22  iter: 7599  total_loss: 6.516  loss_sem_seg: 4.836  loss_relation: 0.4259  loss_center: 0.7768  loss_offset: 0.5836  time: 1.4068  data_time: 0.0293  lr: 0.0003252  max_mem: 29130M
[10/10 13:21:11] d2.utils.events INFO:  eta: 4:49:54  iter: 7619  total_loss: 6.242  loss_sem_seg: 4.581  loss_relation: 0.4152  loss_center: 0.7977  loss_offset: 0.4943  time: 1.4068  data_time: 0.0288  lr: 0.00032473  max_mem: 29130M
[10/10 13:21:39] d2.utils.events INFO:  eta: 4:49:26  iter: 7639  total_loss: 6.066  loss_sem_seg: 4.309  loss_relation: 0.4001  loss_center: 0.7712  loss_offset: 0.4816  time: 1.4068  data_time: 0.0280  lr: 0.00032426  max_mem: 29130M
[10/10 13:22:07] d2.utils.events INFO:  eta: 4:48:59  iter: 7659  total_loss: 6.35  loss_sem_seg: 4.407  loss_relation: 0.4283  loss_center: 0.8788  loss_offset: 0.5482  time: 1.4068  data_time: 0.0274  lr: 0.00032379  max_mem: 29130M
[10/10 13:22:36] d2.utils.events INFO:  eta: 4:48:31  iter: 7679  total_loss: 5.968  loss_sem_seg: 4.213  loss_relation: 0.4259  loss_center: 0.7792  loss_offset: 0.5331  time: 1.4068  data_time: 0.0286  lr: 0.00032331  max_mem: 29130M
[10/10 13:23:04] d2.utils.events INFO:  eta: 4:48:01  iter: 7699  total_loss: 6.311  loss_sem_seg: 4.317  loss_relation: 0.4168  loss_center: 0.8102  loss_offset: 0.6267  time: 1.4068  data_time: 0.0267  lr: 0.00032284  max_mem: 29130M
[10/10 13:23:32] d2.utils.events INFO:  eta: 4:47:34  iter: 7719  total_loss: 6.11  loss_sem_seg: 4.334  loss_relation: 0.4205  loss_center: 0.8087  loss_offset: 0.5122  time: 1.4068  data_time: 0.0290  lr: 0.00032237  max_mem: 29130M
[10/10 13:24:00] d2.utils.events INFO:  eta: 4:47:06  iter: 7739  total_loss: 6.08  loss_sem_seg: 4.236  loss_relation: 0.4394  loss_center: 0.7648  loss_offset: 0.5448  time: 1.4068  data_time: 0.0280  lr: 0.0003219  max_mem: 29130M
[10/10 13:24:28] d2.utils.events INFO:  eta: 4:46:39  iter: 7759  total_loss: 6.593  loss_sem_seg: 4.805  loss_relation: 0.4105  loss_center: 0.8821  loss_offset: 0.5246  time: 1.4068  data_time: 0.0270  lr: 0.00032142  max_mem: 29130M
[10/10 13:24:56] d2.utils.events INFO:  eta: 4:46:10  iter: 7779  total_loss: 6.109  loss_sem_seg: 4.297  loss_relation: 0.4246  loss_center: 0.7797  loss_offset: 0.4788  time: 1.4068  data_time: 0.0302  lr: 0.00032095  max_mem: 29130M
[10/10 13:25:24] d2.utils.events INFO:  eta: 4:45:42  iter: 7799  total_loss: 6.596  loss_sem_seg: 4.817  loss_relation: 0.4384  loss_center: 0.8214  loss_offset: 0.4999  time: 1.4068  data_time: 0.0301  lr: 0.00032048  max_mem: 29130M
[10/10 13:25:53] d2.utils.events INFO:  eta: 4:45:14  iter: 7819  total_loss: 6.539  loss_sem_seg: 4.573  loss_relation: 0.4277  loss_center: 0.8884  loss_offset: 0.4959  time: 1.4068  data_time: 0.0286  lr: 0.00032001  max_mem: 29130M
[10/10 13:26:21] d2.utils.events INFO:  eta: 4:44:45  iter: 7839  total_loss: 6.397  loss_sem_seg: 4.654  loss_relation: 0.4308  loss_center: 0.7869  loss_offset: 0.55  time: 1.4068  data_time: 0.0284  lr: 0.00031953  max_mem: 29130M
[10/10 13:26:49] d2.utils.events INFO:  eta: 4:44:17  iter: 7859  total_loss: 6.286  loss_sem_seg: 4.467  loss_relation: 0.4105  loss_center: 0.7911  loss_offset: 0.5606  time: 1.4068  data_time: 0.0276  lr: 0.00031906  max_mem: 29130M
[10/10 13:27:17] d2.utils.events INFO:  eta: 4:43:47  iter: 7879  total_loss: 6.662  loss_sem_seg: 4.74  loss_relation: 0.4285  loss_center: 0.8344  loss_offset: 0.5769  time: 1.4068  data_time: 0.0292  lr: 0.00031859  max_mem: 29130M
[10/10 13:27:45] d2.utils.events INFO:  eta: 4:43:20  iter: 7899  total_loss: 5.339  loss_sem_seg: 3.701  loss_relation: 0.4197  loss_center: 0.7956  loss_offset: 0.4581  time: 1.4068  data_time: 0.0289  lr: 0.00031811  max_mem: 29130M
[10/10 13:28:13] d2.utils.events INFO:  eta: 4:42:52  iter: 7919  total_loss: 5.79  loss_sem_seg: 3.86  loss_relation: 0.413  loss_center: 0.863  loss_offset: 0.4566  time: 1.4068  data_time: 0.0291  lr: 0.00031764  max_mem: 29130M
[10/10 13:28:41] d2.utils.events INFO:  eta: 4:42:23  iter: 7939  total_loss: 5.536  loss_sem_seg: 3.893  loss_relation: 0.3993  loss_center: 0.7116  loss_offset: 0.4835  time: 1.4068  data_time: 0.0287  lr: 0.00031717  max_mem: 29130M
[10/10 13:29:10] d2.utils.events INFO:  eta: 4:41:55  iter: 7959  total_loss: 6.658  loss_sem_seg: 4.982  loss_relation: 0.4154  loss_center: 0.843  loss_offset: 0.4409  time: 1.4068  data_time: 0.0260  lr: 0.00031669  max_mem: 29130M
[10/10 13:29:38] d2.utils.events INFO:  eta: 4:41:29  iter: 7979  total_loss: 5.684  loss_sem_seg: 4.115  loss_relation: 0.4167  loss_center: 0.7596  loss_offset: 0.4445  time: 1.4068  data_time: 0.0277  lr: 0.00031622  max_mem: 29130M
[10/10 13:30:06] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_0007999.pth
[10/10 13:30:08] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[10/10 13:30:08] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/10 13:30:08] d2.data.common INFO: Serialized dataset takes 0.86 MiB
[10/10 13:30:08] d2.evaluation.evaluator INFO: Start inference on 250 batches
[10/10 13:30:22] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0013 s/iter. Inference: 0.0901 s/iter. Eval: 0.0285 s/iter. Total: 0.1199 s/iter. ETA=0:00:28
[10/10 13:30:27] d2.evaluation.evaluator INFO: Inference done 54/250. Dataloading: 0.0012 s/iter. Inference: 0.0897 s/iter. Eval: 0.0285 s/iter. Total: 0.1195 s/iter. ETA=0:00:23
[10/10 13:30:33] d2.evaluation.evaluator INFO: Inference done 99/250. Dataloading: 0.0014 s/iter. Inference: 0.0870 s/iter. Eval: 0.0281 s/iter. Total: 0.1166 s/iter. ETA=0:00:17
[10/10 13:30:38] d2.evaluation.evaluator INFO: Inference done 143/250. Dataloading: 0.0014 s/iter. Inference: 0.0866 s/iter. Eval: 0.0281 s/iter. Total: 0.1162 s/iter. ETA=0:00:12
[10/10 13:30:43] d2.evaluation.evaluator INFO: Inference done 188/250. Dataloading: 0.0014 s/iter. Inference: 0.0862 s/iter. Eval: 0.0278 s/iter. Total: 0.1154 s/iter. ETA=0:00:07
[10/10 13:30:48] d2.evaluation.evaluator INFO: Inference done 232/250. Dataloading: 0.0014 s/iter. Inference: 0.0859 s/iter. Eval: 0.0278 s/iter. Total: 0.1152 s/iter. ETA=0:00:02
[10/10 13:30:50] d2.evaluation.evaluator INFO: Total inference time: 0:00:28.571316 (0.116618 s / iter per device, on 2 devices)
[10/10 13:30:50] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:21 (0.086016 s / iter per device, on 2 devices)
[10/10 13:30:50] d2.projects.panoptic_deeplab.evaluator INFO: Writing all panoptic predictions to /tmp/panoptic_evalt_z86zyd ...
[10/10 13:30:55] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Relations Evaluation Results: 6.149142345123295
[10/10 13:30:55] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 8.606  | 36.070 | 11.475 |      129      |
| Things | 5.931  | 34.327 | 8.270  |      76       |
| Stuff  | 12.443 | 38.569 | 16.071 |      53       |
[10/10 13:30:55] d2.engine.defaults INFO: Evaluation results for psg_val in csv format:
[10/10 13:30:55] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/10 13:30:55] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[10/10 13:30:55] d2.evaluation.testing INFO: copypaste: 8.6062,36.0697,11.4751,5.9307,34.3269,8.2701,12.4429,38.5689,16.0709
[10/10 13:30:55] d2.evaluation.testing INFO: copypaste: Task: relation_mean_recall
[10/10 13:30:55] d2.evaluation.testing INFO: copypaste: mean_recall
[10/10 13:30:55] d2.evaluation.testing INFO: copypaste: 0.0615
[10/10 13:30:55] d2.utils.events INFO:  eta: 4:41:02  iter: 7999  total_loss: 5.745  loss_sem_seg: 4.223  loss_relation: 0.4242  loss_center: 0.7369  loss_offset: 0.4752  time: 1.4068  data_time: 0.0282  lr: 0.00031575  max_mem: 29130M
[10/10 13:30:55] d2.engine.hooks INFO: Not saving as latest eval score for relation_mean_recall/mean_recall is 0.06149, not better than best score 0.06896 @ iteration 5999.
[10/10 13:31:23] d2.utils.events INFO:  eta: 4:40:34  iter: 8019  total_loss: 5.687  loss_sem_seg: 4.013  loss_relation: 0.4206  loss_center: 0.7667  loss_offset: 0.4937  time: 1.4068  data_time: 0.0290  lr: 0.00031527  max_mem: 29130M
[10/10 13:31:51] d2.utils.events INFO:  eta: 4:40:07  iter: 8039  total_loss: 5.706  loss_sem_seg: 4.025  loss_relation: 0.4162  loss_center: 0.8918  loss_offset: 0.5197  time: 1.4068  data_time: 0.0281  lr: 0.0003148  max_mem: 29130M
[10/10 13:32:19] d2.utils.events INFO:  eta: 4:39:39  iter: 8059  total_loss: 6.36  loss_sem_seg: 4.61  loss_relation: 0.4154  loss_center: 0.8382  loss_offset: 0.4912  time: 1.4068  data_time: 0.0282  lr: 0.00031433  max_mem: 29130M
[10/10 13:32:47] d2.utils.events INFO:  eta: 4:39:10  iter: 8079  total_loss: 5.897  loss_sem_seg: 4.245  loss_relation: 0.4131  loss_center: 0.7557  loss_offset: 0.4912  time: 1.4068  data_time: 0.0257  lr: 0.00031385  max_mem: 29130M
[10/10 13:33:16] d2.utils.events INFO:  eta: 4:38:43  iter: 8099  total_loss: 5.596  loss_sem_seg: 3.787  loss_relation: 0.4334  loss_center: 0.8118  loss_offset: 0.4997  time: 1.4068  data_time: 0.0300  lr: 0.00031338  max_mem: 29130M
[10/10 13:33:44] d2.utils.events INFO:  eta: 4:38:15  iter: 8119  total_loss: 5.502  loss_sem_seg: 3.793  loss_relation: 0.4063  loss_center: 0.6746  loss_offset: 0.5197  time: 1.4068  data_time: 0.0278  lr: 0.0003129  max_mem: 29130M
[10/10 13:34:12] d2.utils.events INFO:  eta: 4:37:47  iter: 8139  total_loss: 6.078  loss_sem_seg: 4.245  loss_relation: 0.4399  loss_center: 0.7381  loss_offset: 0.4884  time: 1.4068  data_time: 0.0261  lr: 0.00031243  max_mem: 29130M
[10/10 13:34:40] d2.utils.events INFO:  eta: 4:37:19  iter: 8159  total_loss: 5.542  loss_sem_seg: 3.728  loss_relation: 0.403  loss_center: 0.8948  loss_offset: 0.5641  time: 1.4068  data_time: 0.0310  lr: 0.00031196  max_mem: 29130M
[10/10 13:35:08] d2.utils.events INFO:  eta: 4:36:51  iter: 8179  total_loss: 5.709  loss_sem_seg: 3.869  loss_relation: 0.4131  loss_center: 0.8317  loss_offset: 0.4831  time: 1.4068  data_time: 0.0304  lr: 0.00031148  max_mem: 29130M
[10/10 13:35:36] d2.utils.events INFO:  eta: 4:36:22  iter: 8199  total_loss: 5.897  loss_sem_seg: 4.31  loss_relation: 0.4207  loss_center: 0.7982  loss_offset: 0.4457  time: 1.4068  data_time: 0.0281  lr: 0.00031101  max_mem: 29130M
[10/10 13:36:05] d2.utils.events INFO:  eta: 4:35:54  iter: 8219  total_loss: 5.523  loss_sem_seg: 3.872  loss_relation: 0.4187  loss_center: 0.7293  loss_offset: 0.424  time: 1.4068  data_time: 0.0285  lr: 0.00031053  max_mem: 29130M
[10/10 13:36:33] d2.utils.events INFO:  eta: 4:35:26  iter: 8239  total_loss: 6.004  loss_sem_seg: 4.322  loss_relation: 0.4078  loss_center: 0.6414  loss_offset: 0.515  time: 1.4068  data_time: 0.0294  lr: 0.00031006  max_mem: 29130M
[10/10 13:37:01] d2.utils.events INFO:  eta: 4:34:58  iter: 8259  total_loss: 5.827  loss_sem_seg: 4.05  loss_relation: 0.411  loss_center: 0.7828  loss_offset: 0.4555  time: 1.4068  data_time: 0.0285  lr: 0.00030958  max_mem: 29130M
[10/10 13:37:29] d2.utils.events INFO:  eta: 4:34:30  iter: 8279  total_loss: 6.287  loss_sem_seg: 4.694  loss_relation: 0.4286  loss_center: 0.7171  loss_offset: 0.5279  time: 1.4068  data_time: 0.0300  lr: 0.00030911  max_mem: 29130M
[10/10 13:37:57] d2.utils.events INFO:  eta: 4:34:03  iter: 8299  total_loss: 6.066  loss_sem_seg: 4.367  loss_relation: 0.4103  loss_center: 0.805  loss_offset: 0.4556  time: 1.4068  data_time: 0.0303  lr: 0.00030863  max_mem: 29130M
[10/10 13:38:25] d2.utils.events INFO:  eta: 4:33:35  iter: 8319  total_loss: 7.009  loss_sem_seg: 5.011  loss_relation: 0.4396  loss_center: 0.8975  loss_offset: 0.5228  time: 1.4068  data_time: 0.0260  lr: 0.00030816  max_mem: 29130M
[10/10 13:38:54] d2.utils.events INFO:  eta: 4:33:07  iter: 8339  total_loss: 6.365  loss_sem_seg: 4.615  loss_relation: 0.4333  loss_center: 0.9728  loss_offset: 0.5139  time: 1.4068  data_time: 0.0275  lr: 0.00030768  max_mem: 29130M
[10/10 13:39:22] d2.utils.events INFO:  eta: 4:32:40  iter: 8359  total_loss: 6.19  loss_sem_seg: 4.198  loss_relation: 0.4082  loss_center: 0.8725  loss_offset: 0.4332  time: 1.4068  data_time: 0.0290  lr: 0.00030721  max_mem: 29130M
[10/10 13:39:50] d2.utils.events INFO:  eta: 4:32:12  iter: 8379  total_loss: 5.801  loss_sem_seg: 4.078  loss_relation: 0.4154  loss_center: 0.8228  loss_offset: 0.4915  time: 1.4068  data_time: 0.0272  lr: 0.00030673  max_mem: 29130M
[10/10 13:40:18] d2.utils.events INFO:  eta: 4:31:44  iter: 8399  total_loss: 5.587  loss_sem_seg: 3.773  loss_relation: 0.4195  loss_center: 0.7378  loss_offset: 0.4912  time: 1.4068  data_time: 0.0297  lr: 0.00030626  max_mem: 29130M
[10/10 13:40:46] d2.utils.events INFO:  eta: 4:31:16  iter: 8419  total_loss: 6.275  loss_sem_seg: 4.356  loss_relation: 0.4328  loss_center: 0.8068  loss_offset: 0.4949  time: 1.4068  data_time: 0.0268  lr: 0.00030578  max_mem: 29130M
[10/10 13:41:14] d2.utils.events INFO:  eta: 4:30:48  iter: 8439  total_loss: 6.074  loss_sem_seg: 4.46  loss_relation: 0.4097  loss_center: 0.7068  loss_offset: 0.4794  time: 1.4068  data_time: 0.0281  lr: 0.00030531  max_mem: 29130M
[10/10 13:41:42] d2.utils.events INFO:  eta: 4:30:21  iter: 8459  total_loss: 6.097  loss_sem_seg: 4.288  loss_relation: 0.4246  loss_center: 0.8104  loss_offset: 0.4624  time: 1.4068  data_time: 0.0277  lr: 0.00030483  max_mem: 29130M
[10/10 13:42:11] d2.utils.events INFO:  eta: 4:29:54  iter: 8479  total_loss: 5.843  loss_sem_seg: 4.237  loss_relation: 0.4042  loss_center: 0.7597  loss_offset: 0.4882  time: 1.4068  data_time: 0.0288  lr: 0.00030436  max_mem: 29130M
[10/10 13:42:28] d2.engine.hooks INFO: Overall training speed: 8490 iterations in 3:19:04 (1.4069 s / it)
[10/10 13:42:28] d2.engine.hooks INFO: Total training time: 3:25:59 (0:06:54 on hooks)
[10/10 13:42:28] d2.utils.events INFO:  eta: 4:29:36  iter: 8492  total_loss: 5.665  loss_sem_seg: 3.758  loss_relation: 0.405  loss_center: 0.7884  loss_offset: 0.4559  time: 1.4068  data_time: 0.0281  lr: 0.00030407  max_mem: 29130M
[10/10 13:42:55] detectron2 INFO: Rank of current process: 0. World size: 2
[10/10 13:42:56] detectron2 INFO: Environment info:
----------------------  ----------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]
numpy                   1.23.3
detectron2              0.6 @/root/autodl-tmp/detectron2/detectron2
Compiler                GCC 7.5
CUDA compiler           CUDA 11.1
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.12.0+cu113 @/root/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1                 Tesla V100S-PCIE-32GB (arch=7.0)
Driver version          470.82.00
CUDA_HOME               /usr/local/cuda
Pillow                  9.1.1
torchvision             0.13.0+cu113 @/root/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     4.6.0
----------------------  ----------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[10/10 13:42:56] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-PanopticSegmentation/panoptic_deeplab_R_52_os16_mg124_poly_200k_bs64_crop_640_640_coco_dsconv_custom.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/10 13:42:56] detectron2 INFO: Contents of args.config_file=configs/COCO-PanopticSegmentation/panoptic_deeplab_R_52_os16_mg124_poly_200k_bs64_crop_640_640_coco_dsconv_custom.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m../Cityscapes-PanopticSegmentation/Base-PanopticDeepLab-OS16.yaml
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://DeepLab/R-103.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;242m# WEIGHTS: "./relations_output_seg_transformer_resnet101/model_best.pth"[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m123.675[39m,[38;5;15m [39m[38;5;15m116.280[39m,[38;5;15m [39m[38;5;15m103.530[39m]
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m58.395[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m57.375[39m]
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_deeplab_backbone[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m,[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m,[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m]
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mRES5_MULTI_GRID[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m1[39m,[38;5;15m [39m[38;5;15m2[39m,[38;5;15m [39m[38;5;15m4[39m]
[38;5;15m    [39m[38;5;197mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdeeplab[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m133
[38;5;15m    [39m[38;5;197mLOSS_TOP_K[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m  [39m[38;5;197mPANOPTIC_DEEPLAB[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTUFF_AREA[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mNMS_KERNEL[39m[38;5;15m:[39m[38;5;15m [39m41
[38;5;15m    [39m[38;5;197mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mPREDICT_INSTANCES[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m  [39m[38;5;197mPSG_RELATION_NET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENCODER_DEPTH[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mTOTAL_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39m56
[38;5;15m    [39m[38;5;197mTOTAL_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m133
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mALPHA[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m("psg_train",)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m("psg_val",)
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m5e-4
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m20000
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mGAUSSIAN_SIGMA[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;81m!!python/object/apply:eval[39m[38;5;15m [39m[[38;5;186m"[39m[38;5;186m[int(x[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m0.1[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m640)[39m[38;5;15m [39m[38;5;186mfor[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186min[39m[38;5;15m [39m[38;5;186mrange(5,[39m[38;5;15m [39m[38;5;186m16)][39m[38;5;186m"[39m]
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mchoice[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m960
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mabsolute[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m[38;5;15m [39m(640, 640)
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./relations_output_seg_transformer_resnet101_alpha5[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m

[10/10 13:42:56] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m10
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mpsg_val
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mpsg_train
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m640
[38;5;15m    [39m-[38;5;15m [39m640
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mabsolute
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mRGB
[38;5;15m  [39m[38;5;197mGAUSSIAN_SIGMA[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mIGNORE_CROWD_IN_SEMANTIC[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mIGNORE_STUFF_IN_OFFSET[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m960
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m320
[38;5;15m  [39m-[38;5;15m [39m384
[38;5;15m  [39m-[38;5;15m [39m448
[38;5;15m  [39m-[38;5;15m [39m512
[38;5;15m  [39m-[38;5;15m [39m576
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m832
[38;5;15m  [39m-[38;5;15m [39m896
[38;5;15m  [39m-[38;5;15m [39m960
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;15m  [39m[38;5;197mSMALL_INSTANCE_AREA[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m  [39m[38;5;197mSMALL_INSTANCE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m3
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m      [39m-[38;5;15m [39m64
[38;5;15m      [39m-[38;5;15m [39m128
[38;5;15m      [39m-[38;5;15m [39m256
[38;5;15m      [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_deeplab_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mINS_EMBED_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m6
[38;5;15m    [39m-[38;5;15m [39m12
[38;5;15m    [39m-[38;5;15m [39m18
[38;5;15m    [39m[38;5;197mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mCENTER_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m200.0
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mHEAD_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLabInsEmbedHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mSyncBN
[38;5;15m    [39m[38;5;197mOFFSET_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLab
[38;5;15m  [39m[38;5;197mPANOPTIC_DEEPLAB[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBENCHMARK_NETWORK_SPEED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCENTER_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mNMS_KERNEL[39m[38;5;15m:[39m[38;5;15m [39m41
[38;5;15m    [39m[38;5;197mPREDICT_INSTANCES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m    [39m[38;5;197mSTUFF_AREA[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mTOP_K_INSTANCE[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mPSG_RELATION_NET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mALPHA[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mCLS_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mENCODER_DEPTH[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mFEATURE_NAME_LIST[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mPSGRelationNet
[38;5;15m    [39m[38;5;197mTOTAL_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m133
[38;5;15m    [39m[38;5;197mTOTAL_RELATIONS[39m[38;5;15m:[39m[38;5;15m [39m56
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m-[38;5;15m [39m2
[38;5;15m    [39m-[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39mdeeplab
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m50
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRes5ROIHeads
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mMaskRCNNConvUpsampleHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m6000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m12000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m6
[38;5;15m    [39m-[38;5;15m [39m12
[38;5;15m    [39m-[38;5;15m [39m18
[38;5;15m    [39m[38;5;197mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mHEAD_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mLOSS_TOP_K[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39mhard_pixel_mining
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLabSemSegHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mSyncBN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m133
[38;5;15m    [39m[38;5;197mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39mdetectron2://DeepLab/R-103.pkl
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m./relations_output_seg_transformer_resnet101_alpha5
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.0005
[38;5;15m  [39m[38;5;197mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupPolyLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m20000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m3
[38;5;15m  [39m[38;5;197mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39mADAM
[38;5;15m  [39m[38;5;197mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m  [39m[38;5;197mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m30000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m100
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[10/10 13:42:57] detectron2 INFO: Full config saved to ./relations_output_seg_transformer_resnet101_alpha5/config.yaml
[10/10 13:42:57] d2.utils.env INFO: Using a generated random seed 57934303
[10/10 13:43:01] d2.engine.defaults INFO: Model:
PanopticDeepLab(
  (backbone): ResNet(
    (stem): DeepLabStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
      )
      (conv2): Conv2d(
        64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
      )
      (conv3): Conv2d(
        64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv1): Conv2d(
          128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=0.0001)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=0.0001)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (6): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (7): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (8): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (9): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (10): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (11): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (12): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (13): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (14): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (15): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (16): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (17): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (18): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (19): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (20): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (21): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
      (22): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=0.0001)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=0.0001)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=0.0001)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=0.0001)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=0.0001)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(8, 8), dilation=(8, 8), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=0.0001)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=0.0001)
        )
      )
    )
  )
  (sem_seg_head): PanopticDeepLabSemSegHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False
            (norm): SyncBatchNorm(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            288, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False
            (norm): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            320, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(40, 40), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (head): DepthwiseSeparableConv2d(
      (depthwise): Conv2d(
        256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=256, bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (pointwise): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (predictor): Conv2d(256, 133, kernel_size=(1, 1), stride=(1, 1))
    (loss): DeepLabCE(
      (criterion): CrossEntropyLoss()
    )
  )
  (ins_embed_head): PanopticDeepLabInsEmbedHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            160, 160, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=160, bias=False
            (norm): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False
            (norm): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(40, 40), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (center_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (center_predictor): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
    (offset_head): DepthwiseSeparableConv2d(
      (depthwise): Conv2d(
        128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128, bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (pointwise): Conv2d(
        128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (offset_predictor): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
    (center_loss): MSELoss()
    (offset_loss): L1Loss()
  )
  (psg_relation_net): PSGRelationNet(
    (map_dict): ModuleDict(
      (res3): Linear(in_features=512, out_features=256, bias=True)
      (res5): Linear(in_features=2048, out_features=256, bias=True)
    )
    (tf_encoder): Transformer(
      (blocks): ModuleList(
        (0): Block(
          (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=256, out_features=768, bias=False)
            (attn_drop): Dropout(p=0.3, inplace=False)
            (proj): Linear(in_features=256, out_features=256, bias=True)
            (proj_drop): Dropout(p=0.3, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (mlp): Mlp(
            (fc1): Linear(in_features=256, out_features=768, bias=True)
            (act): GELU(approximate=none)
            (fc2): Linear(in_features=768, out_features=256, bias=True)
            (drop): Dropout(p=0.3, inplace=False)
          )
        )
        (1): Block(
          (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=256, out_features=768, bias=False)
            (attn_drop): Dropout(p=0.3, inplace=False)
            (proj): Linear(in_features=256, out_features=256, bias=True)
            (proj_drop): Dropout(p=0.3, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (mlp): Mlp(
            (fc1): Linear(in_features=256, out_features=768, bias=True)
            (act): GELU(approximate=none)
            (fc2): Linear(in_features=768, out_features=256, bias=True)
            (drop): Dropout(p=0.3, inplace=False)
          )
        )
        (2): Block(
          (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=256, out_features=768, bias=False)
            (attn_drop): Dropout(p=0.3, inplace=False)
            (proj): Linear(in_features=256, out_features=256, bias=True)
            (proj_drop): Dropout(p=0.3, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (mlp): Mlp(
            (fc1): Linear(in_features=256, out_features=768, bias=True)
            (act): GELU(approximate=none)
            (fc2): Linear(in_features=768, out_features=256, bias=True)
            (drop): Dropout(p=0.3, inplace=False)
          )
        )
        (3): Block(
          (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (attn): Attention(
            (qkv): Linear(in_features=256, out_features=768, bias=False)
            (attn_drop): Dropout(p=0.3, inplace=False)
            (proj): Linear(in_features=256, out_features=256, bias=True)
            (proj_drop): Dropout(p=0.3, inplace=False)
          )
          (drop_path): Identity()
          (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (mlp): Mlp(
            (fc1): Linear(in_features=256, out_features=768, bias=True)
            (act): GELU(approximate=none)
            (fc2): Linear(in_features=768, out_features=256, bias=True)
            (drop): Dropout(p=0.3, inplace=False)
          )
        )
      )
      (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (pos_drop): Dropout(p=0.3, inplace=False)
    )
    (tf_decoder): Attention(
      (qkv): Linear(in_features=256, out_features=512, bias=True)
      (attn_drop): Dropout(p=0.3, inplace=False)
      (proj_cls): Linear(in_features=256, out_features=256, bias=True)
      (proj_rel): Linear(in_features=256, out_features=256, bias=True)
      (proj_drop): Dropout(p=0.3, inplace=False)
    )
    (cls_fc): Linear(in_features=256, out_features=1, bias=True)
    (rel_fc): Linear(in_features=256, out_features=1, bias=True)
  )
)
[10/10 13:43:01] d2.projects.panoptic_deeplab.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960), max_size=960, sample_style='choice'), RandomCrop(crop_type='absolute', crop_size=[640, 640]), RandomFlip()]
[10/10 13:43:02] d2.data.build INFO: Removed 0 images with no usable annotations. 4500 images left.
[10/10 13:43:02] d2.data.build INFO: Distribution of instances among all 133 categories:
[36m|   category    | #instances   |   category    | #instances   |   category    | #instances   |
|:-------------:|:-------------|:-------------:|:-------------|:-------------:|:-------------|
|    person     | 25660        |    bicycle    | 913          |      car      | 3591         |
|  motorcycle   | 866          |   airplane    | 89           |      bus      | 433          |
|     train     | 179          |     truck     | 537          |     boat      | 269          |
| traffic light | 883          | fire hydrant  | 59           |   stop sign   | 70           |
| parking meter | 75           |     bench     | 805          |     bird      | 420          |
|      cat      | 65           |      dog      | 267          |     horse     | 478          |
|     sheep     | 415          |      cow      | 448          |   elephant    | 219          |
|     bear      | 29           |     zebra     | 137          |    giraffe    | 140          |
|   backpack    | 1070         |   umbrella    | 1038         |    handbag    | 1651         |
|      tie      | 447          |   suitcase    | 359          |    frisbee    | 218          |
|     skis      | 220          |   snowboard   | 98           |  sports ball  | 805          |
|     kite      | 544          | baseball bat  | 512          | baseball gl.. | 621          |
|  skateboard   | 442          |   surfboard   | 257          | tennis racket | 490          |
|    bottle     | 691          |  wine glass   | 257          |      cup      | 573          |
|     fork      | 105          |     knife     | 188          |     spoon     | 90           |
|     bowl      | 229          |    banana     | 157          |     apple     | 73           |
|   sandwich    | 42           |    orange     | 71           |   broccoli    | 9            |
|    carrot     | 52           |    hot dog    | 55           |     pizza     | 130          |
|     donut     | 104          |     cake      | 134          |     chair     | 2464         |
|     couch     | 169          | potted plant  | 313          |      bed      | 52           |
| dining table  | 444          |    toilet     | 24           |      tv       | 151          |
|    laptop     | 201          |     mouse     | 34           |    remote     | 239          |
|   keyboard    | 26           |  cell phone   | 501          |   microwave   | 14           |
|     oven      | 28           |    toaster    | 0            |     sink      | 23           |
| refrigerator  | 30           |     book      | 431          |     clock     | 168          |
|     vase      | 54           |   scissors    | 17           |  teddy bear   | 88           |
|  hair drier   | 5            |  toothbrush   | 28           |    banner     | 431          |
|    blanket    | 49           |    bridge     | 84           |   cardboard   | 115          |
|    counter    | 56           |    curtain    | 121          |  door-stuff   | 283          |
|  floor-wood   | 148          |    flower     | 118          |     fruit     | 29           |
|    gravel     | 112          |     house     | 349          |     light     | 481          |
| mirror-stuff  | 66           |      net      | 140          |    pillow     | 46           |
|   platform    | 132          | playingfield  | 699          |   railroad    | 128          |
|     river     | 66           |     road      | 1178         |     roof      | 286          |
|     sand      | 295          |      sea      | 228          |     shelf     | 91           |
|     snow      | 146          |    stairs     | 237          |     tent      | 149          |
|     towel     | 53           |  wall-brick   | 281          |  wall-stone   | 90           |
|   wall-tile   | 88           |   wall-wood   | 181          |  water-other  | 67           |
| window-blind  | 66           | window-other  | 565          |  tree-merged  | 2047         |
| fence-merged  | 1051         | ceiling-mer.. | 409          | sky-other-m.. | 1874         |
| cabinet-mer.. | 105          | table-merged  | 321          | floor-other.. | 474          |
| pavement-me.. | 1437         | mountain-me.. | 287          | grass-merged  | 1186         |
|  dirt-merged  | 638          | paper-merged  | 283          | food-other-.. | 118          |
| building-ot.. | 1578         |  rock-merged  | 155          | wall-other-.. | 1685         |
|  rug-merged   | 203          |               |              |               |              |
|     total     | 75788        |               |              |               |              |[0m
[10/10 13:43:02] d2.data.build INFO: Using training sampler TrainingSampler
[10/10 13:43:02] d2.data.common INFO: Serializing 4500 elements to byte tensors and concatenating them all ...
[10/10 13:43:02] d2.data.common INFO: Serialized dataset takes 8.84 MiB
[10/10 13:43:02] fvcore.common.checkpoint INFO: [Checkpointer] Loading from detectron2://DeepLab/R-103.pkl ...
[10/10 13:43:02] fvcore.common.checkpoint INFO: Reading a file from 'torchvision'
[10/10 13:43:02] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone:
| Names in Model    | Names in Checkpoint                                                               | Shapes                                          |
|:------------------|:----------------------------------------------------------------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,128,1,1)            |
| res2.0.conv2.*    | res2.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) (256,) (256,) (256,) (256,128,1,1)       |
| res2.1.conv1.*    | res2.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3.3.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3.3.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3.3.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.10.conv1.*   | res4.10.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.10.conv2.*   | res4.10.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.10.conv3.*   | res4.10.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.11.conv1.*   | res4.11.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.11.conv2.*   | res4.11.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.11.conv3.*   | res4.11.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.12.conv1.*   | res4.12.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.12.conv2.*   | res4.12.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.12.conv3.*   | res4.12.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.13.conv1.*   | res4.13.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.13.conv2.*   | res4.13.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.13.conv3.*   | res4.13.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.14.conv1.*   | res4.14.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.14.conv2.*   | res4.14.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.14.conv3.*   | res4.14.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.15.conv1.*   | res4.15.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.15.conv2.*   | res4.15.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.15.conv3.*   | res4.15.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.16.conv1.*   | res4.16.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.16.conv2.*   | res4.16.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.16.conv3.*   | res4.16.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.17.conv1.*   | res4.17.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.17.conv2.*   | res4.17.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.17.conv3.*   | res4.17.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.18.conv1.*   | res4.18.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.18.conv2.*   | res4.18.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.18.conv3.*   | res4.18.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.19.conv1.*   | res4.19.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.19.conv2.*   | res4.19.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.19.conv3.*   | res4.19.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.20.conv1.*   | res4.20.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.20.conv2.*   | res4.20.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.20.conv3.*   | res4.20.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.21.conv1.*   | res4.21.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.21.conv2.*   | res4.21.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.21.conv3.*   | res4.21.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.22.conv1.*   | res4.22.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.22.conv2.*   | res4.22.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.22.conv3.*   | res4.22.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}   | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4.3.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4.3.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4.3.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4.4.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4.4.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4.4.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4.5.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4.5.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4.5.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.6.conv1.*    | res4.6.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.6.conv2.*    | res4.6.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.6.conv3.*    | res4.6.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.7.conv1.*    | res4.7.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.7.conv2.*    | res4.7.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.7.conv3.*    | res4.7.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.8.conv1.*    | res4.8.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.8.conv2.*    | res4.8.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.8.conv3.*    | res4.8.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.9.conv1.*    | res4.9.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.9.conv2.*    | res4.9.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.9.conv3.*    | res4.9.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.*      | stem.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (64,) (64,) (64,) (64,) (64,3,3,3)              |
| stem.conv2.*      | stem.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| stem.conv3.*      | stem.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (128,) (128,) (128,) (128,) (128,64,3,3)        |
[10/10 13:43:02] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mins_embed_head.center_head.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.center_head.0.weight[0m
[34mins_embed_head.center_head.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.center_head.1.weight[0m
[34mins_embed_head.center_predictor.{bias, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.depthwise.weight[0m
[34mins_embed_head.decoder.res2.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.pointwise.weight[0m
[34mins_embed_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.project_conv.weight[0m
[34mins_embed_head.decoder.res3.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.fuse_conv.depthwise.weight[0m
[34mins_embed_head.decoder.res3.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.fuse_conv.pointwise.weight[0m
[34mins_embed_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.project_conv.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.0.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.depthwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.pointwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.depthwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.pointwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.depthwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.pointwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.4.1.{bias, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.project.weight[0m
[34mins_embed_head.offset_head.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.offset_head.depthwise.weight[0m
[34mins_embed_head.offset_head.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.offset_head.pointwise.weight[0m
[34mins_embed_head.offset_predictor.{bias, weight}[0m
[34mpsg_relation_net.cls_fc.{bias, weight}[0m
[34mpsg_relation_net.map_dict.res3.{bias, weight}[0m
[34mpsg_relation_net.map_dict.res5.{bias, weight}[0m
[34mpsg_relation_net.rel_fc.{bias, weight}[0m
[34mpsg_relation_net.tf_decoder.proj_cls.{bias, weight}[0m
[34mpsg_relation_net.tf_decoder.proj_rel.{bias, weight}[0m
[34mpsg_relation_net.tf_decoder.qkv.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.0.attn.proj.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.0.attn.qkv.weight[0m
[34mpsg_relation_net.tf_encoder.blocks.0.mlp.fc1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.0.mlp.fc2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.0.norm1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.0.norm2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.1.attn.proj.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.1.attn.qkv.weight[0m
[34mpsg_relation_net.tf_encoder.blocks.1.mlp.fc1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.1.mlp.fc2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.1.norm1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.1.norm2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.2.attn.proj.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.2.attn.qkv.weight[0m
[34mpsg_relation_net.tf_encoder.blocks.2.mlp.fc1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.2.mlp.fc2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.2.norm1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.2.norm2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.3.attn.proj.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.3.attn.qkv.weight[0m
[34mpsg_relation_net.tf_encoder.blocks.3.mlp.fc1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.3.mlp.fc2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.3.norm1.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.blocks.3.norm2.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.norm.{bias, weight}[0m
[34mpsg_relation_net.tf_encoder.pos_embed[0m
[34mpsg_relation_net.{Q_cls, Q_rel}[0m
[34msem_seg_head.decoder.res2.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.depthwise.weight[0m
[34msem_seg_head.decoder.res2.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.pointwise.weight[0m
[34msem_seg_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.project_conv.weight[0m
[34msem_seg_head.decoder.res3.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.fuse_conv.depthwise.weight[0m
[34msem_seg_head.decoder.res3.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.fuse_conv.pointwise.weight[0m
[34msem_seg_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.project_conv.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.0.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.depthwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.pointwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.depthwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.pointwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.depthwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.pointwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.4.1.{bias, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.project.weight[0m
[34msem_seg_head.head.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.head.depthwise.weight[0m
[34msem_seg_head.head.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.head.pointwise.weight[0m
[34msem_seg_head.predictor.{bias, weight}[0m
[10/10 13:43:02] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mres2.0.conv1.norm.num_batches_tracked[0m
  [35mres2.0.conv2.norm.num_batches_tracked[0m
  [35mres2.0.conv3.norm.num_batches_tracked[0m
  [35mres2.0.shortcut.norm.num_batches_tracked[0m
  [35mres2.1.conv1.norm.num_batches_tracked[0m
  [35mres2.1.conv2.norm.num_batches_tracked[0m
  [35mres2.1.conv3.norm.num_batches_tracked[0m
  [35mres2.2.conv1.norm.num_batches_tracked[0m
  [35mres2.2.conv2.norm.num_batches_tracked[0m
  [35mres2.2.conv3.norm.num_batches_tracked[0m
  [35mres3.0.conv1.norm.num_batches_tracked[0m
  [35mres3.0.conv2.norm.num_batches_tracked[0m
  [35mres3.0.conv3.norm.num_batches_tracked[0m
  [35mres3.0.shortcut.norm.num_batches_tracked[0m
  [35mres3.1.conv1.norm.num_batches_tracked[0m
  [35mres3.1.conv2.norm.num_batches_tracked[0m
  [35mres3.1.conv3.norm.num_batches_tracked[0m
  [35mres3.2.conv1.norm.num_batches_tracked[0m
  [35mres3.2.conv2.norm.num_batches_tracked[0m
  [35mres3.2.conv3.norm.num_batches_tracked[0m
  [35mres3.3.conv1.norm.num_batches_tracked[0m
  [35mres3.3.conv2.norm.num_batches_tracked[0m
  [35mres3.3.conv3.norm.num_batches_tracked[0m
  [35mres4.0.conv1.norm.num_batches_tracked[0m
  [35mres4.0.conv2.norm.num_batches_tracked[0m
  [35mres4.0.conv3.norm.num_batches_tracked[0m
  [35mres4.0.shortcut.norm.num_batches_tracked[0m
  [35mres4.1.conv1.norm.num_batches_tracked[0m
  [35mres4.1.conv2.norm.num_batches_tracked[0m
  [35mres4.1.conv3.norm.num_batches_tracked[0m
  [35mres4.10.conv1.norm.num_batches_tracked[0m
  [35mres4.10.conv2.norm.num_batches_tracked[0m
  [35mres4.10.conv3.norm.num_batches_tracked[0m
  [35mres4.11.conv1.norm.num_batches_tracked[0m
  [35mres4.11.conv2.norm.num_batches_tracked[0m
  [35mres4.11.conv3.norm.num_batches_tracked[0m
  [35mres4.12.conv1.norm.num_batches_tracked[0m
  [35mres4.12.conv2.norm.num_batches_tracked[0m
  [35mres4.12.conv3.norm.num_batches_tracked[0m
  [35mres4.13.conv1.norm.num_batches_tracked[0m
  [35mres4.13.conv2.norm.num_batches_tracked[0m
  [35mres4.13.conv3.norm.num_batches_tracked[0m
  [35mres4.14.conv1.norm.num_batches_tracked[0m
  [35mres4.14.conv2.norm.num_batches_tracked[0m
  [35mres4.14.conv3.norm.num_batches_tracked[0m
  [35mres4.15.conv1.norm.num_batches_tracked[0m
  [35mres4.15.conv2.norm.num_batches_tracked[0m
  [35mres4.15.conv3.norm.num_batches_tracked[0m
  [35mres4.16.conv1.norm.num_batches_tracked[0m
  [35mres4.16.conv2.norm.num_batches_tracked[0m
  [35mres4.16.conv3.norm.num_batches_tracked[0m
  [35mres4.17.conv1.norm.num_batches_tracked[0m
  [35mres4.17.conv2.norm.num_batches_tracked[0m
  [35mres4.17.conv3.norm.num_batches_tracked[0m
  [35mres4.18.conv1.norm.num_batches_tracked[0m
  [35mres4.18.conv2.norm.num_batches_tracked[0m
  [35mres4.18.conv3.norm.num_batches_tracked[0m
  [35mres4.19.conv1.norm.num_batches_tracked[0m
  [35mres4.19.conv2.norm.num_batches_tracked[0m
  [35mres4.19.conv3.norm.num_batches_tracked[0m
  [35mres4.2.conv1.norm.num_batches_tracked[0m
  [35mres4.2.conv2.norm.num_batches_tracked[0m
  [35mres4.2.conv3.norm.num_batches_tracked[0m
  [35mres4.20.conv1.norm.num_batches_tracked[0m
  [35mres4.20.conv2.norm.num_batches_tracked[0m
  [35mres4.20.conv3.norm.num_batches_tracked[0m
  [35mres4.21.conv1.norm.num_batches_tracked[0m
  [35mres4.21.conv2.norm.num_batches_tracked[0m
  [35mres4.21.conv3.norm.num_batches_tracked[0m
  [35mres4.22.conv1.norm.num_batches_tracked[0m
  [35mres4.22.conv2.norm.num_batches_tracked[0m
  [35mres4.22.conv3.norm.num_batches_tracked[0m
  [35mres4.3.conv1.norm.num_batches_tracked[0m
  [35mres4.3.conv2.norm.num_batches_tracked[0m
  [35mres4.3.conv3.norm.num_batches_tracked[0m
  [35mres4.4.conv1.norm.num_batches_tracked[0m
  [35mres4.4.conv2.norm.num_batches_tracked[0m
  [35mres4.4.conv3.norm.num_batches_tracked[0m
  [35mres4.5.conv1.norm.num_batches_tracked[0m
  [35mres4.5.conv2.norm.num_batches_tracked[0m
  [35mres4.5.conv3.norm.num_batches_tracked[0m
  [35mres4.6.conv1.norm.num_batches_tracked[0m
  [35mres4.6.conv2.norm.num_batches_tracked[0m
  [35mres4.6.conv3.norm.num_batches_tracked[0m
  [35mres4.7.conv1.norm.num_batches_tracked[0m
  [35mres4.7.conv2.norm.num_batches_tracked[0m
  [35mres4.7.conv3.norm.num_batches_tracked[0m
  [35mres4.8.conv1.norm.num_batches_tracked[0m
  [35mres4.8.conv2.norm.num_batches_tracked[0m
  [35mres4.8.conv3.norm.num_batches_tracked[0m
  [35mres4.9.conv1.norm.num_batches_tracked[0m
  [35mres4.9.conv2.norm.num_batches_tracked[0m
  [35mres4.9.conv3.norm.num_batches_tracked[0m
  [35mres5.0.conv1.norm.num_batches_tracked[0m
  [35mres5.0.conv2.norm.num_batches_tracked[0m
  [35mres5.0.conv3.norm.num_batches_tracked[0m
  [35mres5.0.shortcut.norm.num_batches_tracked[0m
  [35mres5.1.conv1.norm.num_batches_tracked[0m
  [35mres5.1.conv2.norm.num_batches_tracked[0m
  [35mres5.1.conv3.norm.num_batches_tracked[0m
  [35mres5.2.conv1.norm.num_batches_tracked[0m
  [35mres5.2.conv2.norm.num_batches_tracked[0m
  [35mres5.2.conv3.norm.num_batches_tracked[0m
  [35mstem.conv1.norm.num_batches_tracked[0m
  [35mstem.conv2.norm.num_batches_tracked[0m
  [35mstem.conv3.norm.num_batches_tracked[0m
  [35mstem.fc.{bias, weight}[0m
[10/10 13:43:02] d2.engine.train_loop INFO: Starting training from iteration 0
[10/10 13:43:45] d2.utils.events INFO:  eta: 7:47:16  iter: 19  total_loss: 23.5  loss_sem_seg: 19.4  loss_relation: 1.452  loss_center: 1.322  loss_offset: 1.15  time: 1.4042  data_time: 0.6753  lr: 9.982e-06  max_mem: 29131M
[10/10 13:44:13] d2.utils.events INFO:  eta: 7:47:57  iter: 39  total_loss: 23.48  loss_sem_seg: 19.5  loss_relation: 1.153  loss_center: 1.219  loss_offset: 1.181  time: 1.4054  data_time: 0.0282  lr: 1.9945e-05  max_mem: 29131M
[10/10 13:44:42] d2.utils.events INFO:  eta: 7:47:29  iter: 59  total_loss: 22.5  loss_sem_seg: 19.24  loss_relation: 0.8216  loss_center: 1.138  loss_offset: 1.175  time: 1.4062  data_time: 0.0263  lr: 2.9891e-05  max_mem: 29131M
[10/10 13:45:10] d2.utils.events INFO:  eta: 7:47:15  iter: 79  total_loss: 22.49  loss_sem_seg: 19.22  loss_relation: 0.7598  loss_center: 1.224  loss_offset: 1.286  time: 1.4074  data_time: 0.0266  lr: 3.9818e-05  max_mem: 29131M
[10/10 13:45:38] d2.utils.events INFO:  eta: 7:47:05  iter: 99  total_loss: 21.47  loss_sem_seg: 18.45  loss_relation: 0.6834  loss_center: 1.217  loss_offset: 1.213  time: 1.4083  data_time: 0.0281  lr: 4.9728e-05  max_mem: 29131M
[10/10 13:46:06] d2.utils.events INFO:  eta: 7:46:57  iter: 119  total_loss: 21.68  loss_sem_seg: 18.77  loss_relation: 0.654  loss_center: 1.005  loss_offset: 1.32  time: 1.4094  data_time: 0.0304  lr: 5.9619e-05  max_mem: 29131M
[10/10 13:46:35] d2.utils.events INFO:  eta: 7:46:32  iter: 139  total_loss: 20.85  loss_sem_seg: 17.72  loss_relation: 0.5942  loss_center: 0.915  loss_offset: 1.355  time: 1.4099  data_time: 0.0298  lr: 6.9493e-05  max_mem: 29131M
[10/10 13:47:03] d2.utils.events INFO:  eta: 7:45:59  iter: 159  total_loss: 18.83  loss_sem_seg: 15.78  loss_relation: 0.5635  loss_center: 1.112  loss_offset: 1.239  time: 1.4093  data_time: 0.0254  lr: 7.9348e-05  max_mem: 29131M
[10/10 13:47:31] d2.utils.events INFO:  eta: 7:45:31  iter: 179  total_loss: 18.71  loss_sem_seg: 15.79  loss_relation: 0.5308  loss_center: 0.9283  loss_offset: 1.273  time: 1.4096  data_time: 0.0277  lr: 8.9186e-05  max_mem: 29131M
[10/10 13:47:59] d2.utils.events INFO:  eta: 7:45:03  iter: 199  total_loss: 17.6  loss_sem_seg: 14.95  loss_relation: 0.5013  loss_center: 1.052  loss_offset: 1.238  time: 1.4095  data_time: 0.0264  lr: 9.9005e-05  max_mem: 29131M
[10/10 13:48:27] d2.utils.events INFO:  eta: 7:44:28  iter: 219  total_loss: 16.72  loss_sem_seg: 14.29  loss_relation: 0.4828  loss_center: 0.9262  loss_offset: 1.235  time: 1.4096  data_time: 0.0294  lr: 0.00010881  max_mem: 29131M
[10/10 13:48:56] d2.utils.events INFO:  eta: 7:43:59  iter: 239  total_loss: 16.27  loss_sem_seg: 13.53  loss_relation: 0.4729  loss_center: 0.9154  loss_offset: 1.265  time: 1.4094  data_time: 0.0285  lr: 0.00011859  max_mem: 29131M
[10/10 13:49:24] d2.utils.events INFO:  eta: 7:43:27  iter: 259  total_loss: 16.39  loss_sem_seg: 13.55  loss_relation: 0.4757  loss_center: 1.031  loss_offset: 1.22  time: 1.4093  data_time: 0.0287  lr: 0.00012836  max_mem: 29131M
[10/10 13:49:52] d2.utils.events INFO:  eta: 7:42:50  iter: 279  total_loss: 14.78  loss_sem_seg: 11.91  loss_relation: 0.481  loss_center: 1.028  loss_offset: 1.262  time: 1.4094  data_time: 0.0303  lr: 0.0001381  max_mem: 29131M
[10/10 13:50:20] d2.utils.events INFO:  eta: 7:42:14  iter: 299  total_loss: 14.87  loss_sem_seg: 12.21  loss_relation: 0.472  loss_center: 0.8578  loss_offset: 1.44  time: 1.4092  data_time: 0.0273  lr: 0.00014783  max_mem: 29131M
[10/10 13:50:48] d2.utils.events INFO:  eta: 7:41:43  iter: 319  total_loss: 14.67  loss_sem_seg: 11.69  loss_relation: 0.4814  loss_center: 1.192  loss_offset: 1.228  time: 1.4092  data_time: 0.0283  lr: 0.00015754  max_mem: 29131M
[10/10 13:51:16] d2.utils.events INFO:  eta: 7:41:10  iter: 339  total_loss: 13.51  loss_sem_seg: 10.78  loss_relation: 0.4648  loss_center: 1.101  loss_offset: 1.169  time: 1.4089  data_time: 0.0264  lr: 0.00016724  max_mem: 29131M
[10/10 13:51:45] d2.utils.events INFO:  eta: 7:40:39  iter: 359  total_loss: 12.87  loss_sem_seg: 10.09  loss_relation: 0.4782  loss_center: 1.032  loss_offset: 1.112  time: 1.4089  data_time: 0.0291  lr: 0.00017691  max_mem: 29131M
[10/10 13:52:13] d2.utils.events INFO:  eta: 7:40:07  iter: 379  total_loss: 13.46  loss_sem_seg: 10.76  loss_relation: 0.4565  loss_center: 0.9247  loss_offset: 1.23  time: 1.4086  data_time: 0.0262  lr: 0.00018657  max_mem: 29131M
[10/10 13:52:41] d2.utils.events INFO:  eta: 7:39:38  iter: 399  total_loss: 13.79  loss_sem_seg: 11.05  loss_relation: 0.4599  loss_center: 0.9224  loss_offset: 1.187  time: 1.4085  data_time: 0.0277  lr: 0.00019621  max_mem: 29131M
[10/10 13:53:09] d2.utils.events INFO:  eta: 7:39:09  iter: 419  total_loss: 13.11  loss_sem_seg: 10.49  loss_relation: 0.4478  loss_center: 0.8136  loss_offset: 1.289  time: 1.4084  data_time: 0.0273  lr: 0.00020583  max_mem: 29131M
[10/10 13:53:37] d2.utils.events INFO:  eta: 7:38:40  iter: 439  total_loss: 12.6  loss_sem_seg: 10.09  loss_relation: 0.4777  loss_center: 0.9964  loss_offset: 1.066  time: 1.4083  data_time: 0.0262  lr: 0.00021543  max_mem: 29131M
[10/10 13:54:05] d2.utils.events INFO:  eta: 7:38:09  iter: 459  total_loss: 13.38  loss_sem_seg: 10.51  loss_relation: 0.4771  loss_center: 1.041  loss_offset: 1.254  time: 1.4080  data_time: 0.0261  lr: 0.00022502  max_mem: 29131M
[10/10 13:54:33] d2.utils.events INFO:  eta: 7:37:39  iter: 479  total_loss: 12.33  loss_sem_seg: 9.77  loss_relation: 0.4768  loss_center: 1.002  loss_offset: 1.229  time: 1.4078  data_time: 0.0254  lr: 0.00023459  max_mem: 29131M
[10/10 13:55:01] d2.utils.events INFO:  eta: 7:37:08  iter: 499  total_loss: 12  loss_sem_seg: 9.412  loss_relation: 0.4564  loss_center: 1.053  loss_offset: 1.126  time: 1.4079  data_time: 0.0260  lr: 0.00024414  max_mem: 29131M
[10/10 13:55:29] d2.utils.events INFO:  eta: 7:36:37  iter: 519  total_loss: 11.83  loss_sem_seg: 9.113  loss_relation: 0.4529  loss_center: 1.071  loss_offset: 1.162  time: 1.4078  data_time: 0.0265  lr: 0.00025367  max_mem: 29131M
[10/10 13:55:58] d2.utils.events INFO:  eta: 7:36:12  iter: 539  total_loss: 12.42  loss_sem_seg: 9.779  loss_relation: 0.4705  loss_center: 1.008  loss_offset: 1.253  time: 1.4078  data_time: 0.0319  lr: 0.00026318  max_mem: 29131M
[10/10 13:56:26] d2.utils.events INFO:  eta: 7:35:47  iter: 559  total_loss: 12.68  loss_sem_seg: 9.944  loss_relation: 0.4664  loss_center: 0.9073  loss_offset: 1.224  time: 1.4079  data_time: 0.0299  lr: 0.00027267  max_mem: 29131M
[10/10 13:56:54] d2.utils.events INFO:  eta: 7:35:19  iter: 579  total_loss: 11.91  loss_sem_seg: 9.015  loss_relation: 0.4586  loss_center: 0.9999  loss_offset: 1.218  time: 1.4078  data_time: 0.0263  lr: 0.00028215  max_mem: 29131M
[10/10 13:57:22] d2.utils.events INFO:  eta: 7:34:49  iter: 599  total_loss: 11.62  loss_sem_seg: 9.132  loss_relation: 0.4506  loss_center: 0.8849  loss_offset: 1.072  time: 1.4078  data_time: 0.0280  lr: 0.00029161  max_mem: 29131M
[10/10 13:57:50] d2.utils.events INFO:  eta: 7:34:21  iter: 619  total_loss: 11.44  loss_sem_seg: 8.654  loss_relation: 0.4476  loss_center: 0.9886  loss_offset: 1.171  time: 1.4078  data_time: 0.0278  lr: 0.00030105  max_mem: 29131M
[10/10 13:58:18] d2.utils.events INFO:  eta: 7:33:49  iter: 639  total_loss: 12.61  loss_sem_seg: 9.737  loss_relation: 0.4544  loss_center: 1  loss_offset: 1.056  time: 1.4077  data_time: 0.0263  lr: 0.00031047  max_mem: 29131M
[10/10 13:58:47] d2.utils.events INFO:  eta: 7:33:21  iter: 659  total_loss: 12.19  loss_sem_seg: 9.707  loss_relation: 0.4605  loss_center: 0.971  loss_offset: 1.1  time: 1.4076  data_time: 0.0274  lr: 0.00031988  max_mem: 29131M
[10/10 13:59:15] d2.utils.events INFO:  eta: 7:32:52  iter: 679  total_loss: 10.28  loss_sem_seg: 7.872  loss_relation: 0.4597  loss_center: 1.013  loss_offset: 0.9375  time: 1.4076  data_time: 0.0280  lr: 0.00032926  max_mem: 29131M
[10/10 13:59:43] d2.utils.events INFO:  eta: 7:32:27  iter: 699  total_loss: 11  loss_sem_seg: 8.521  loss_relation: 0.4581  loss_center: 1.013  loss_offset: 0.9919  time: 1.4076  data_time: 0.0306  lr: 0.00033863  max_mem: 29131M
[10/10 14:00:11] d2.utils.events INFO:  eta: 7:31:57  iter: 719  total_loss: 10.32  loss_sem_seg: 8.082  loss_relation: 0.453  loss_center: 0.8322  loss_offset: 1.049  time: 1.4075  data_time: 0.0252  lr: 0.00034798  max_mem: 29131M
[10/10 14:00:39] d2.utils.events INFO:  eta: 7:31:29  iter: 739  total_loss: 10.83  loss_sem_seg: 8.089  loss_relation: 0.4501  loss_center: 1.066  loss_offset: 1.054  time: 1.4074  data_time: 0.0256  lr: 0.00035732  max_mem: 29131M
[10/10 14:01:07] d2.utils.events INFO:  eta: 7:31:03  iter: 759  total_loss: 11.71  loss_sem_seg: 9.269  loss_relation: 0.4566  loss_center: 0.9159  loss_offset: 1.045  time: 1.4075  data_time: 0.0314  lr: 0.00036663  max_mem: 29131M
[10/10 14:01:35] d2.utils.events INFO:  eta: 7:30:34  iter: 779  total_loss: 10.74  loss_sem_seg: 8.466  loss_relation: 0.4552  loss_center: 0.9512  loss_offset: 1.033  time: 1.4075  data_time: 0.0285  lr: 0.00037593  max_mem: 29131M
[10/10 14:02:04] d2.utils.events INFO:  eta: 7:30:05  iter: 799  total_loss: 11.1  loss_sem_seg: 8.346  loss_relation: 0.4377  loss_center: 1.006  loss_offset: 0.912  time: 1.4074  data_time: 0.0275  lr: 0.0003852  max_mem: 29131M
[10/10 14:02:32] d2.utils.events INFO:  eta: 7:29:40  iter: 819  total_loss: 10.91  loss_sem_seg: 8.445  loss_relation: 0.4625  loss_center: 0.8919  loss_offset: 1.126  time: 1.4075  data_time: 0.0297  lr: 0.00039446  max_mem: 29131M
[10/10 14:03:00] d2.utils.events INFO:  eta: 7:29:11  iter: 839  total_loss: 12.17  loss_sem_seg: 9.549  loss_relation: 0.4666  loss_center: 1.031  loss_offset: 0.908  time: 1.4075  data_time: 0.0260  lr: 0.00040371  max_mem: 29131M
[10/10 14:03:28] d2.utils.events INFO:  eta: 7:28:42  iter: 859  total_loss: 11.44  loss_sem_seg: 8.983  loss_relation: 0.4539  loss_center: 0.9039  loss_offset: 0.9744  time: 1.4075  data_time: 0.0271  lr: 0.00041293  max_mem: 29131M
[10/10 14:03:56] d2.utils.events INFO:  eta: 7:28:10  iter: 879  total_loss: 10.84  loss_sem_seg: 8.373  loss_relation: 0.454  loss_center: 0.8703  loss_offset: 0.9861  time: 1.4074  data_time: 0.0252  lr: 0.00042213  max_mem: 29131M
[10/10 14:04:24] d2.utils.events INFO:  eta: 7:27:41  iter: 899  total_loss: 11.14  loss_sem_seg: 8.913  loss_relation: 0.452  loss_center: 1.021  loss_offset: 0.9774  time: 1.4073  data_time: 0.0270  lr: 0.00043132  max_mem: 29131M
[10/10 14:04:52] d2.utils.events INFO:  eta: 7:27:13  iter: 919  total_loss: 10.72  loss_sem_seg: 8.214  loss_relation: 0.4404  loss_center: 0.9657  loss_offset: 0.8913  time: 1.4073  data_time: 0.0299  lr: 0.00044049  max_mem: 29131M
[10/10 14:05:20] d2.utils.events INFO:  eta: 7:26:45  iter: 939  total_loss: 11.53  loss_sem_seg: 9.165  loss_relation: 0.4653  loss_center: 1.058  loss_offset: 1.015  time: 1.4073  data_time: 0.0264  lr: 0.00044964  max_mem: 29131M
[10/10 14:05:49] d2.utils.events INFO:  eta: 7:26:15  iter: 959  total_loss: 10.26  loss_sem_seg: 7.885  loss_relation: 0.4457  loss_center: 0.874  loss_offset: 0.8904  time: 1.4072  data_time: 0.0252  lr: 0.00045878  max_mem: 29131M
[10/10 14:06:17] d2.utils.events INFO:  eta: 7:25:48  iter: 979  total_loss: 10.13  loss_sem_seg: 7.771  loss_relation: 0.4539  loss_center: 1.031  loss_offset: 0.8646  time: 1.4072  data_time: 0.0273  lr: 0.00046789  max_mem: 29131M
[10/10 14:06:45] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_0000999.pth
[10/10 14:06:53] d2.data.build INFO: Distribution of instances among all 133 categories:
[36m|   category    | #instances   |   category    | #instances   |   category    | #instances   |
|:-------------:|:-------------|:-------------:|:-------------|:-------------:|:-------------|
|    person     | 1980         |    bicycle    | 80           |      car      | 332          |
|  motorcycle   | 51           |   airplane    | 15           |      bus      | 38           |
|     train     | 21           |     truck     | 70           |     boat      | 53           |
| traffic light | 93           | fire hydrant  | 9            |   stop sign   | 8            |
| parking meter | 1            |     bench     | 56           |     bird      | 86           |
|      cat      | 8            |      dog      | 18           |     horse     | 42           |
|     sheep     | 47           |      cow      | 30           |   elephant    | 29           |
|     bear      | 10           |     zebra     | 47           |    giraffe    | 33           |
|   backpack    | 55           |   umbrella    | 44           |    handbag    | 130          |
|      tie      | 33           |   suitcase    | 18           |    frisbee    | 7            |
|     skis      | 44           |   snowboard   | 11           |  sports ball  | 46           |
|     kite      | 94           | baseball bat  | 24           | baseball gl.. | 32           |
|  skateboard   | 37           |   surfboard   | 55           | tennis racket | 30           |
|    bottle     | 77           |  wine glass   | 41           |      cup      | 104          |
|     fork      | 23           |     knife     | 30           |     spoon     | 23           |
|     bowl      | 51           |    banana     | 52           |     apple     | 14           |
|   sandwich    | 5            |    orange     | 13           |   broccoli    | 3            |
|    carrot     | 16           |    hot dog    | 8            |     pizza     | 14           |
|     donut     | 9            |     cake      | 15           |     chair     | 197          |
|     couch     | 17           | potted plant  | 10           |      bed      | 10           |
| dining table  | 45           |    toilet     | 6            |      tv       | 12           |
|    laptop     | 16           |     mouse     | 2            |    remote     | 23           |
|   keyboard    | 2            |  cell phone   | 25           |   microwave   | 0            |
|     oven      | 3            |    toaster    | 0            |     sink      | 7            |
| refrigerator  | 2            |     book      | 74           |     clock     | 11           |
|     vase      | 1            |   scissors    | 0            |  teddy bear   | 33           |
|  hair drier   | 0            |  toothbrush   | 8            |    banner     | 29           |
|    blanket    | 13           |    bridge     | 9            |   cardboard   | 14           |
|    counter    | 7            |    curtain    | 12           |  door-stuff   | 30           |
|  floor-wood   | 16           |    flower     | 9            |     fruit     | 6            |
|    gravel     | 10           |     house     | 33           |     light     | 41           |
| mirror-stuff  | 7            |      net      | 7            |    pillow     | 7            |
|   platform    | 16           | playingfield  | 39           |   railroad    | 17           |
|     river     | 10           |     road      | 101          |     roof      | 20           |
|     sand      | 28           |      sea      | 53           |     shelf     | 19           |
|     snow      | 27           |    stairs     | 16           |     tent      | 11           |
|     towel     | 12           |  wall-brick   | 24           |  wall-stone   | 15           |
|   wall-tile   | 12           |   wall-wood   | 34           |  water-other  | 10           |
| window-blind  | 8            | window-other  | 40           |  tree-merged  | 224          |
| fence-merged  | 91           | ceiling-mer.. | 32           | sky-other-m.. | 233          |
| cabinet-mer.. | 16           | table-merged  | 46           | floor-other.. | 42           |
| pavement-me.. | 134          | mountain-me.. | 31           | grass-merged  | 128          |
|  dirt-merged  | 57           | paper-merged  | 29           | food-other-.. | 24           |
| building-ot.. | 152          |  rock-merged  | 22           | wall-other-.. | 145          |
|  rug-merged   | 14           |               |              |               |              |
|     total     | 7001         |               |              |               |              |[0m
[10/10 14:06:53] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[10/10 14:06:53] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/10 14:06:53] d2.data.common INFO: Serialized dataset takes 0.86 MiB
[10/10 14:06:53] d2.evaluation.evaluator INFO: Start inference on 250 batches
[10/10 14:07:07] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0002 s/iter. Inference: 0.0928 s/iter. Eval: 0.0285 s/iter. Total: 0.1215 s/iter. ETA=0:00:29
[10/10 14:07:12] d2.evaluation.evaluator INFO: Inference done 53/250. Dataloading: 0.0013 s/iter. Inference: 0.0905 s/iter. Eval: 0.0287 s/iter. Total: 0.1206 s/iter. ETA=0:00:23
[10/10 14:07:17] d2.evaluation.evaluator INFO: Inference done 97/250. Dataloading: 0.0014 s/iter. Inference: 0.0881 s/iter. Eval: 0.0281 s/iter. Total: 0.1177 s/iter. ETA=0:00:18
[10/10 14:07:22] d2.evaluation.evaluator INFO: Inference done 138/250. Dataloading: 0.0015 s/iter. Inference: 0.0888 s/iter. Eval: 0.0288 s/iter. Total: 0.1191 s/iter. ETA=0:00:13
[10/10 14:07:27] d2.evaluation.evaluator INFO: Inference done 181/250. Dataloading: 0.0015 s/iter. Inference: 0.0889 s/iter. Eval: 0.0286 s/iter. Total: 0.1191 s/iter. ETA=0:00:08
[10/10 14:07:32] d2.evaluation.evaluator INFO: Inference done 224/250. Dataloading: 0.0015 s/iter. Inference: 0.0888 s/iter. Eval: 0.0282 s/iter. Total: 0.1186 s/iter. ETA=0:00:03
[10/10 14:07:36] d2.evaluation.evaluator INFO: Total inference time: 0:00:29.316001 (0.119657 s / iter per device, on 2 devices)
[10/10 14:07:36] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:21 (0.088508 s / iter per device, on 2 devices)
[10/10 14:07:36] d2.projects.panoptic_deeplab.evaluator INFO: Writing all panoptic predictions to /tmp/panoptic_evalgw7lm7t5 ...
[10/10 14:07:41] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Relations Evaluation Results: 3.0519344905113535
[10/10 14:07:41] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Evaluation Results:
|        |  PQ   |   SQ   |  RQ   |  #categories  |
|:------:|:-----:|:------:|:-----:|:-------------:|
|  All   | 1.527 | 7.876  | 2.081 |      129      |
| Things | 0.280 | 3.270  | 0.432 |      76       |
| Stuff  | 3.315 | 14.481 | 4.446 |      53       |
[10/10 14:07:41] d2.engine.defaults INFO: Evaluation results for psg_val in csv format:
[10/10 14:07:41] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/10 14:07:41] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[10/10 14:07:41] d2.evaluation.testing INFO: copypaste: 1.5269,7.8757,2.0812,0.2799,3.2695,0.4317,3.3151,14.4807,4.4465
[10/10 14:07:41] d2.evaluation.testing INFO: copypaste: Task: relation_mean_recall
[10/10 14:07:41] d2.evaluation.testing INFO: copypaste: mean_recall
[10/10 14:07:41] d2.evaluation.testing INFO: copypaste: 0.0305
[10/10 14:07:41] d2.utils.events INFO:  eta: 7:25:20  iter: 999  total_loss: 10.58  loss_sem_seg: 8.195  loss_relation: 0.4414  loss_center: 0.9813  loss_offset: 0.8697  time: 1.4072  data_time: 0.0278  lr: 0.00047699  max_mem: 29131M
[10/10 14:07:41] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_transformer_resnet101_alpha5/model_best.pth
[10/10 14:07:48] d2.engine.hooks INFO: Saved first model at 0.03052 @ 999 steps
[10/10 14:08:16] d2.utils.events INFO:  eta: 7:24:51  iter: 1019  total_loss: 11.26  loss_sem_seg: 8.851  loss_relation: 0.4413  loss_center: 1.067  loss_offset: 0.8488  time: 1.4071  data_time: 0.0279  lr: 0.00047701  max_mem: 29131M
[10/10 14:08:44] d2.utils.events INFO:  eta: 7:24:21  iter: 1039  total_loss: 10.6  loss_sem_seg: 8.227  loss_relation: 0.4607  loss_center: 1.003  loss_offset: 0.8229  time: 1.4071  data_time: 0.0283  lr: 0.00047656  max_mem: 29131M
[10/10 14:09:12] d2.utils.events INFO:  eta: 7:23:53  iter: 1059  total_loss: 10.23  loss_sem_seg: 7.742  loss_relation: 0.4483  loss_center: 0.9315  loss_offset: 0.8256  time: 1.4070  data_time: 0.0269  lr: 0.00047611  max_mem: 29131M
[10/10 14:09:40] d2.utils.events INFO:  eta: 7:23:24  iter: 1079  total_loss: 11.59  loss_sem_seg: 9.207  loss_relation: 0.4575  loss_center: 1.006  loss_offset: 0.9182  time: 1.4070  data_time: 0.0271  lr: 0.00047566  max_mem: 29131M
[10/10 14:10:09] d2.utils.events INFO:  eta: 7:22:56  iter: 1099  total_loss: 10.52  loss_sem_seg: 8.073  loss_relation: 0.45  loss_center: 1.014  loss_offset: 0.8447  time: 1.4070  data_time: 0.0278  lr: 0.0004752  max_mem: 29131M
[10/10 14:10:37] d2.utils.events INFO:  eta: 7:22:24  iter: 1119  total_loss: 10.8  loss_sem_seg: 8.715  loss_relation: 0.4407  loss_center: 0.898  loss_offset: 0.8927  time: 1.4070  data_time: 0.0267  lr: 0.00047475  max_mem: 29131M
[10/10 14:11:05] d2.utils.events INFO:  eta: 7:21:54  iter: 1139  total_loss: 9.9  loss_sem_seg: 7.699  loss_relation: 0.4613  loss_center: 0.9897  loss_offset: 0.7972  time: 1.4070  data_time: 0.0258  lr: 0.0004743  max_mem: 29131M
[10/10 14:11:33] d2.utils.events INFO:  eta: 7:21:25  iter: 1159  total_loss: 10.37  loss_sem_seg: 7.901  loss_relation: 0.4468  loss_center: 1.027  loss_offset: 0.9061  time: 1.4069  data_time: 0.0265  lr: 0.00047385  max_mem: 29131M
[10/10 14:12:01] d2.utils.events INFO:  eta: 7:20:54  iter: 1179  total_loss: 9.975  loss_sem_seg: 7.863  loss_relation: 0.4291  loss_center: 1.024  loss_offset: 0.899  time: 1.4068  data_time: 0.0271  lr: 0.00047339  max_mem: 29131M
[10/10 14:12:29] d2.utils.events INFO:  eta: 7:20:25  iter: 1199  total_loss: 10.02  loss_sem_seg: 8.019  loss_relation: 0.4538  loss_center: 0.9646  loss_offset: 0.7324  time: 1.4068  data_time: 0.0283  lr: 0.00047294  max_mem: 29131M
[10/10 14:12:57] d2.utils.events INFO:  eta: 7:19:51  iter: 1219  total_loss: 10.11  loss_sem_seg: 7.648  loss_relation: 0.433  loss_center: 1.019  loss_offset: 0.8408  time: 1.4068  data_time: 0.0281  lr: 0.00047249  max_mem: 29131M
[10/10 14:13:25] d2.utils.events INFO:  eta: 7:19:23  iter: 1239  total_loss: 10.03  loss_sem_seg: 7.86  loss_relation: 0.4318  loss_center: 0.9859  loss_offset: 0.803  time: 1.4068  data_time: 0.0297  lr: 0.00047203  max_mem: 29131M
[10/10 14:13:53] d2.utils.events INFO:  eta: 7:18:54  iter: 1259  total_loss: 9.887  loss_sem_seg: 7.768  loss_relation: 0.4379  loss_center: 0.9779  loss_offset: 0.8222  time: 1.4067  data_time: 0.0296  lr: 0.00047158  max_mem: 29131M
[10/10 14:14:21] d2.utils.events INFO:  eta: 7:18:25  iter: 1279  total_loss: 9.587  loss_sem_seg: 7.166  loss_relation: 0.4183  loss_center: 0.9864  loss_offset: 0.697  time: 1.4067  data_time: 0.0267  lr: 0.00047113  max_mem: 29131M
[10/10 14:14:49] d2.utils.events INFO:  eta: 7:17:57  iter: 1299  total_loss: 9.238  loss_sem_seg: 6.99  loss_relation: 0.4333  loss_center: 0.861  loss_offset: 0.824  time: 1.4066  data_time: 0.0259  lr: 0.00047068  max_mem: 29131M
[10/10 14:15:17] d2.utils.events INFO:  eta: 7:17:28  iter: 1319  total_loss: 10.37  loss_sem_seg: 8.106  loss_relation: 0.4274  loss_center: 0.8875  loss_offset: 0.8027  time: 1.4065  data_time: 0.0273  lr: 0.00047022  max_mem: 29131M
[10/10 14:15:46] d2.utils.events INFO:  eta: 7:16:59  iter: 1339  total_loss: 9.453  loss_sem_seg: 7.013  loss_relation: 0.4428  loss_center: 1.043  loss_offset: 0.7296  time: 1.4065  data_time: 0.0273  lr: 0.00046977  max_mem: 29131M
[10/10 14:16:14] d2.utils.events INFO:  eta: 7:16:27  iter: 1359  total_loss: 10.25  loss_sem_seg: 8.063  loss_relation: 0.4549  loss_center: 1.01  loss_offset: 0.7325  time: 1.4064  data_time: 0.0265  lr: 0.00046932  max_mem: 29131M
[10/10 14:16:42] d2.utils.events INFO:  eta: 7:15:59  iter: 1379  total_loss: 10.65  loss_sem_seg: 8.311  loss_relation: 0.4366  loss_center: 0.9462  loss_offset: 0.6954  time: 1.4064  data_time: 0.0287  lr: 0.00046886  max_mem: 29131M
[10/10 14:17:10] d2.utils.events INFO:  eta: 7:15:29  iter: 1399  total_loss: 10.14  loss_sem_seg: 7.813  loss_relation: 0.4175  loss_center: 0.9318  loss_offset: 0.7514  time: 1.4064  data_time: 0.0286  lr: 0.00046841  max_mem: 29131M
[10/10 14:17:38] d2.utils.events INFO:  eta: 7:15:00  iter: 1419  total_loss: 9.213  loss_sem_seg: 7.099  loss_relation: 0.4336  loss_center: 0.8736  loss_offset: 0.749  time: 1.4064  data_time: 0.0280  lr: 0.00046796  max_mem: 29131M
[10/10 14:18:06] d2.utils.events INFO:  eta: 7:14:31  iter: 1439  total_loss: 9.72  loss_sem_seg: 7.373  loss_relation: 0.4402  loss_center: 0.9696  loss_offset: 0.7977  time: 1.4063  data_time: 0.0268  lr: 0.0004675  max_mem: 29131M
[10/10 14:18:34] d2.utils.events INFO:  eta: 7:14:02  iter: 1459  total_loss: 10  loss_sem_seg: 7.331  loss_relation: 0.4281  loss_center: 0.9851  loss_offset: 0.8584  time: 1.4062  data_time: 0.0266  lr: 0.00046705  max_mem: 29131M
[10/10 14:19:02] d2.utils.events INFO:  eta: 7:13:34  iter: 1479  total_loss: 9.275  loss_sem_seg: 7.161  loss_relation: 0.4333  loss_center: 1.013  loss_offset: 0.8027  time: 1.4062  data_time: 0.0278  lr: 0.0004666  max_mem: 29131M
[10/10 14:19:30] d2.utils.events INFO:  eta: 7:13:07  iter: 1499  total_loss: 9.417  loss_sem_seg: 7.345  loss_relation: 0.4459  loss_center: 0.9512  loss_offset: 0.6946  time: 1.4062  data_time: 0.0297  lr: 0.00046614  max_mem: 29131M
[10/10 14:19:58] d2.utils.events INFO:  eta: 7:12:39  iter: 1519  total_loss: 9.757  loss_sem_seg: 7.632  loss_relation: 0.4099  loss_center: 0.9972  loss_offset: 0.7728  time: 1.4062  data_time: 0.0275  lr: 0.00046569  max_mem: 29131M
[10/10 14:20:26] d2.utils.events INFO:  eta: 7:12:06  iter: 1539  total_loss: 10.05  loss_sem_seg: 7.791  loss_relation: 0.4397  loss_center: 1.005  loss_offset: 0.773  time: 1.4061  data_time: 0.0259  lr: 0.00046524  max_mem: 29131M
[10/10 14:20:55] d2.utils.events INFO:  eta: 7:11:34  iter: 1559  total_loss: 10.01  loss_sem_seg: 7.745  loss_relation: 0.4154  loss_center: 0.9531  loss_offset: 0.7977  time: 1.4061  data_time: 0.0293  lr: 0.00046478  max_mem: 29131M
[10/10 14:21:23] d2.utils.events INFO:  eta: 7:11:05  iter: 1579  total_loss: 9.947  loss_sem_seg: 7.927  loss_relation: 0.4256  loss_center: 0.9323  loss_offset: 0.7385  time: 1.4061  data_time: 0.0274  lr: 0.00046433  max_mem: 29131M
[10/10 14:21:51] d2.utils.events INFO:  eta: 7:10:33  iter: 1599  total_loss: 9.629  loss_sem_seg: 7.277  loss_relation: 0.4138  loss_center: 0.8661  loss_offset: 0.7191  time: 1.4060  data_time: 0.0256  lr: 0.00046387  max_mem: 29131M
[10/10 14:22:19] d2.utils.events INFO:  eta: 7:10:05  iter: 1619  total_loss: 8.892  loss_sem_seg: 6.386  loss_relation: 0.4218  loss_center: 0.9062  loss_offset: 0.7505  time: 1.4060  data_time: 0.0265  lr: 0.00046342  max_mem: 29131M
[10/10 14:22:47] d2.utils.events INFO:  eta: 7:09:37  iter: 1639  total_loss: 9.106  loss_sem_seg: 6.897  loss_relation: 0.4282  loss_center: 1.049  loss_offset: 0.6244  time: 1.4059  data_time: 0.0272  lr: 0.00046297  max_mem: 29131M
[10/10 14:23:15] d2.utils.events INFO:  eta: 7:09:07  iter: 1659  total_loss: 9.84  loss_sem_seg: 7.773  loss_relation: 0.4279  loss_center: 0.9609  loss_offset: 0.7443  time: 1.4059  data_time: 0.0283  lr: 0.00046251  max_mem: 29131M
[10/10 14:23:43] d2.utils.events INFO:  eta: 7:08:38  iter: 1679  total_loss: 8.988  loss_sem_seg: 6.895  loss_relation: 0.4203  loss_center: 0.9699  loss_offset: 0.7223  time: 1.4058  data_time: 0.0257  lr: 0.00046206  max_mem: 29131M
[10/10 14:24:11] d2.utils.events INFO:  eta: 7:08:08  iter: 1699  total_loss: 10.01  loss_sem_seg: 7.903  loss_relation: 0.4209  loss_center: 0.884  loss_offset: 0.6628  time: 1.4058  data_time: 0.0265  lr: 0.0004616  max_mem: 29131M
[10/10 14:24:39] d2.utils.events INFO:  eta: 7:07:40  iter: 1719  total_loss: 8.848  loss_sem_seg: 6.949  loss_relation: 0.4143  loss_center: 0.8704  loss_offset: 0.6343  time: 1.4058  data_time: 0.0294  lr: 0.00046115  max_mem: 29131M
[10/10 14:25:07] d2.utils.events INFO:  eta: 7:07:12  iter: 1739  total_loss: 9.2  loss_sem_seg: 6.81  loss_relation: 0.4176  loss_center: 1.009  loss_offset: 0.73  time: 1.4058  data_time: 0.0263  lr: 0.0004607  max_mem: 29131M
