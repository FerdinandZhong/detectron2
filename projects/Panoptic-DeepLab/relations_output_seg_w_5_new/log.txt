[10/08 14:54:33] detectron2 INFO: Rank of current process: 0. World size: 2
[10/08 14:54:34] detectron2 INFO: Environment info:
----------------------  ----------------------------------------------------------------------
sys.platform            linux
Python                  3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]
numpy                   1.23.3
detectron2              0.6 @/root/autodl-tmp/detectron2/detectron2
Compiler                GCC 7.5
CUDA compiler           CUDA 11.1
detectron2 arch flags   8.6
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.12.0+cu113 @/root/miniconda3/lib/python3.8/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1                 NVIDIA GeForce RTX 3090 (arch=8.6)
Driver version          515.57
CUDA_HOME               /usr/local/cuda
Pillow                  9.1.1
torchvision             0.13.0+cu113 @/root/miniconda3/lib/python3.8/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     4.6.0
----------------------  ----------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[10/08 14:54:34] detectron2 INFO: Command line arguments: Namespace(config_file='configs/COCO-PanopticSegmentation/panoptic_deeplab_R_52_os16_mg124_poly_200k_bs64_crop_640_640_coco_dsconv_custom.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/08 14:54:34] detectron2 INFO: Contents of args.config_file=configs/COCO-PanopticSegmentation/panoptic_deeplab_R_52_os16_mg124_poly_200k_bs64_crop_640_640_coco_dsconv_custom.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m../Cityscapes-PanopticSegmentation/Base-PanopticDeepLab-OS16.yaml
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://DeepLab/R-52.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m123.675[39m,[38;5;15m [39m[38;5;15m116.280[39m,[38;5;15m [39m[38;5;15m103.530[39m]
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m58.395[39m,[38;5;15m [39m[38;5;15m57.120[39m,[38;5;15m [39m[38;5;15m57.375[39m]
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbuild_resnet_deeplab_backbone[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m50
[38;5;15m    [39m[38;5;197mRES5_MULTI_GRID[39m[38;5;15m:[39m[38;5;15m [39m[[38;5;15m1[39m,[38;5;15m [39m[38;5;15m2[39m,[38;5;15m [39m[38;5;15m4[39m]
[38;5;15m    [39m[38;5;197mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdeeplab[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mFalse
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m133
[38;5;15m    [39m[38;5;197mLOSS_TOP_K[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m  [39m[38;5;197mPANOPTIC_DEEPLAB[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mSTUFF_AREA[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mNMS_KERNEL[39m[38;5;15m:[39m[38;5;15m [39m41
[38;5;15m    [39m[38;5;197mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mPREDICT_INSTANCES[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m("psg_train",)
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m[38;5;15m [39m("psg_val",)
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.0005
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m50000
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mRGB[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mGAUSSIAN_SIGMA[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;81m!!python/object/apply:eval[39m[38;5;15m [39m[[38;5;186m"[39m[38;5;186m[int(x[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m0.1[39m[38;5;15m [39m[38;5;186m*[39m[38;5;15m [39m[38;5;186m640)[39m[38;5;15m [39m[38;5;186mfor[39m[38;5;15m [39m[38;5;186mx[39m[38;5;15m [39m[38;5;186min[39m[38;5;15m [39m[38;5;186mrange(5,[39m[38;5;15m [39m[38;5;186m16)][39m[38;5;186m"[39m]
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mchoice[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m960
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mTrue
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mabsolute[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m[38;5;15m [39m(640, 640)
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./relations_output_seg_w_5_new[39m[38;5;186m"[39m
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2000

[10/08 14:54:34] detectron2 INFO: Running with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m10
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mpsg_val
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mpsg_train
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m640
[38;5;15m    [39m-[38;5;15m [39m640
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mabsolute
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mRGB
[38;5;15m  [39m[38;5;197mGAUSSIAN_SIGMA[39m[38;5;15m:[39m[38;5;15m [39m8
[38;5;15m  [39m[38;5;197mIGNORE_CROWD_IN_SEMANTIC[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mIGNORE_STUFF_IN_OFFSET[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m960
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m320
[38;5;15m  [39m-[38;5;15m [39m384
[38;5;15m  [39m-[38;5;15m [39m448
[38;5;15m  [39m-[38;5;15m [39m512
[38;5;15m  [39m-[38;5;15m [39m576
[38;5;15m  [39m-[38;5;15m [39m640
[38;5;15m  [39m-[38;5;15m [39m704
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m-[38;5;15m [39m832
[38;5;15m  [39m-[38;5;15m [39m896
[38;5;15m  [39m-[38;5;15m [39m960
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mchoice
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;15m  [39m[38;5;197mSMALL_INSTANCE_AREA[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m  [39m[38;5;197mSMALL_INSTANCE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m3
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m      [39m-[38;5;15m [39m64
[38;5;15m      [39m-[38;5;15m [39m128
[38;5;15m      [39m-[38;5;15m [39m256
[38;5;15m      [39m-[38;5;15m [39m512
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_resnet_deeplab_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mINS_EMBED_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m6
[38;5;15m    [39m-[38;5;15m [39m12
[38;5;15m    [39m-[38;5;15m [39m18
[38;5;15m    [39m[38;5;197mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mCENTER_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m200.0
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mHEAD_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m32
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLabInsEmbedHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mSyncBN
[38;5;15m    [39m[38;5;197mOFFSET_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLab
[38;5;15m  [39m[38;5;197mPANOPTIC_DEEPLAB[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBENCHMARK_NETWORK_SPEED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCENTER_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mNMS_KERNEL[39m[38;5;15m:[39m[38;5;15m [39m41
[38;5;15m    [39m[38;5;197mPREDICT_INSTANCES[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m    [39m[38;5;197mSTUFF_AREA[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mTOP_K_INSTANCE[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m58.395
[38;5;15m  [39m-[38;5;15m [39m57.12
[38;5;15m  [39m-[38;5;15m [39m57.375
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m50
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m-[38;5;15m [39m2
[38;5;15m    [39m-[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39mdeeplab
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m50
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRes5ROIHeads
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mMaskRCNNConvUpsampleHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m6000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m12000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m6
[38;5;15m    [39m-[38;5;15m [39m12
[38;5;15m    [39m-[38;5;15m [39m18
[38;5;15m    [39m[38;5;197mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mHEAD_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mLOSS_TOP_K[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39mhard_pixel_mining
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mPanopticDeepLabSemSegHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mSyncBN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m133
[38;5;15m    [39m[38;5;197mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m32
[38;5;15m    [39m-[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres2
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m[38;5;197mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39mdetectron2://DeepLab/R-52.pkl
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m./relations_output_seg_w_5_new
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.0005
[38;5;15m  [39m[38;5;197mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m5000
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m16
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupPolyLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m50000
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m3
[38;5;15m  [39m[38;5;197mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39mADAM
[38;5;15m  [39m[38;5;197mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m  [39m[38;5;197mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m30000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m100
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[10/08 14:54:34] detectron2 INFO: Full config saved to ./relations_output_seg_w_5_new/config.yaml
[10/08 14:54:34] d2.utils.env INFO: Using a generated random seed 35108908
[10/08 14:54:35] d2.engine.defaults INFO: Model:
PanopticDeepLab(
  (backbone): ResNet(
    (stem): DeepLabStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
      (conv2): Conv2d(
        64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
      (conv3): Conv2d(
        64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(8, 8), dilation=(8, 8), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): PanopticDeepLabSemSegHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False
            (norm): SyncBatchNorm(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            288, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False
            (norm): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            320, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(40, 40), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (head): DepthwiseSeparableConv2d(
      (depthwise): Conv2d(
        256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=256, bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (pointwise): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (predictor): Conv2d(256, 133, kernel_size=(1, 1), stride=(1, 1))
    (avg_pool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Linear(in_features=256, out_features=56, bias=True)
    (relation_loss): BCEWithLogitsLoss()
    (loss): DeepLabCE(
      (criterion): CrossEntropyLoss()
    )
  )
  (ins_embed_head): PanopticDeepLabInsEmbedHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            160, 160, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=160, bias=False
            (norm): SyncBatchNorm(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False
            (norm): SyncBatchNorm(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), groups=2048, bias=False
                (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(40, 40), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (center_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (center_predictor): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
    (offset_head): DepthwiseSeparableConv2d(
      (depthwise): Conv2d(
        128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128, bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (pointwise): Conv2d(
        128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (offset_predictor): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
    (center_loss): MSELoss()
    (offset_loss): L1Loss()
  )
)
[10/08 14:54:35] d2.projects.panoptic_deeplab.dataset_mapper INFO: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960), max_size=960, sample_style='choice'), RandomCrop(crop_type='absolute', crop_size=[640, 640]), RandomFlip()]
[10/08 14:54:36] d2.data.build INFO: Removed 0 images with no usable annotations. 4500 images left.
[10/08 14:54:36] d2.data.build INFO: Distribution of instances among all 133 categories:
[36m|   category    | #instances   |   category    | #instances   |   category    | #instances   |
|:-------------:|:-------------|:-------------:|:-------------|:-------------:|:-------------|
|    person     | 25660        |    bicycle    | 913          |      car      | 3591         |
|  motorcycle   | 866          |   airplane    | 89           |      bus      | 433          |
|     train     | 179          |     truck     | 537          |     boat      | 269          |
| traffic light | 883          | fire hydrant  | 59           |   stop sign   | 70           |
| parking meter | 75           |     bench     | 805          |     bird      | 420          |
|      cat      | 65           |      dog      | 267          |     horse     | 478          |
|     sheep     | 415          |      cow      | 448          |   elephant    | 219          |
|     bear      | 29           |     zebra     | 137          |    giraffe    | 140          |
|   backpack    | 1070         |   umbrella    | 1038         |    handbag    | 1651         |
|      tie      | 447          |   suitcase    | 359          |    frisbee    | 218          |
|     skis      | 220          |   snowboard   | 98           |  sports ball  | 805          |
|     kite      | 544          | baseball bat  | 512          | baseball gl.. | 621          |
|  skateboard   | 442          |   surfboard   | 257          | tennis racket | 490          |
|    bottle     | 691          |  wine glass   | 257          |      cup      | 573          |
|     fork      | 105          |     knife     | 188          |     spoon     | 90           |
|     bowl      | 229          |    banana     | 157          |     apple     | 73           |
|   sandwich    | 42           |    orange     | 71           |   broccoli    | 9            |
|    carrot     | 52           |    hot dog    | 55           |     pizza     | 130          |
|     donut     | 104          |     cake      | 134          |     chair     | 2464         |
|     couch     | 169          | potted plant  | 313          |      bed      | 52           |
| dining table  | 444          |    toilet     | 24           |      tv       | 151          |
|    laptop     | 201          |     mouse     | 34           |    remote     | 239          |
|   keyboard    | 26           |  cell phone   | 501          |   microwave   | 14           |
|     oven      | 28           |    toaster    | 0            |     sink      | 23           |
| refrigerator  | 30           |     book      | 431          |     clock     | 168          |
|     vase      | 54           |   scissors    | 17           |  teddy bear   | 88           |
|  hair drier   | 5            |  toothbrush   | 28           |    banner     | 431          |
|    blanket    | 49           |    bridge     | 84           |   cardboard   | 115          |
|    counter    | 56           |    curtain    | 121          |  door-stuff   | 283          |
|  floor-wood   | 148          |    flower     | 118          |     fruit     | 29           |
|    gravel     | 112          |     house     | 349          |     light     | 481          |
| mirror-stuff  | 66           |      net      | 140          |    pillow     | 46           |
|   platform    | 132          | playingfield  | 699          |   railroad    | 128          |
|     river     | 66           |     road      | 1178         |     roof      | 286          |
|     sand      | 295          |      sea      | 228          |     shelf     | 91           |
|     snow      | 146          |    stairs     | 237          |     tent      | 149          |
|     towel     | 53           |  wall-brick   | 281          |  wall-stone   | 90           |
|   wall-tile   | 88           |   wall-wood   | 181          |  water-other  | 67           |
| window-blind  | 66           | window-other  | 565          |  tree-merged  | 2047         |
| fence-merged  | 1051         | ceiling-mer.. | 409          | sky-other-m.. | 1874         |
| cabinet-mer.. | 105          | table-merged  | 321          | floor-other.. | 474          |
| pavement-me.. | 1437         | mountain-me.. | 287          | grass-merged  | 1186         |
|  dirt-merged  | 638          | paper-merged  | 283          | food-other-.. | 118          |
| building-ot.. | 1578         |  rock-merged  | 155          | wall-other-.. | 1685         |
|  rug-merged   | 203          |               |              |               |              |
|     total     | 75788        |               |              |               |              |[0m
[10/08 14:54:36] d2.data.build INFO: Using training sampler TrainingSampler
[10/08 14:54:36] d2.data.common INFO: Serializing 4500 elements to byte tensors and concatenating them all ...
[10/08 14:54:36] d2.data.common INFO: Serialized dataset takes 8.84 MiB
[10/08 14:54:36] fvcore.common.checkpoint INFO: [Checkpointer] Loading from detectron2://DeepLab/R-52.pkl ...
[10/08 14:54:36] fvcore.common.checkpoint INFO: Reading a file from 'torchvision'
[10/08 14:54:36] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone:
| Names in Model    | Names in Checkpoint                                                               | Shapes                                          |
|:------------------|:----------------------------------------------------------------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,128,1,1)            |
| res2.0.conv2.*    | res2.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) (256,) (256,) (256,) (256,128,1,1)       |
| res2.1.conv1.*    | res2.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3.3.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3.3.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3.3.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4.3.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4.3.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4.3.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4.4.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4.4.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4.4.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4.5.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4.5.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4.5.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.*      | stem.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (64,) (64,) (64,) (64,) (64,3,3,3)              |
| stem.conv2.*      | stem.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| stem.conv3.*      | stem.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (128,) (128,) (128,) (128,) (128,64,3,3)        |
[10/08 14:54:36] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mins_embed_head.center_head.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.center_head.0.weight[0m
[34mins_embed_head.center_head.1.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.center_head.1.weight[0m
[34mins_embed_head.center_predictor.{bias, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.depthwise.weight[0m
[34mins_embed_head.decoder.res2.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.fuse_conv.pointwise.weight[0m
[34mins_embed_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res2.project_conv.weight[0m
[34mins_embed_head.decoder.res3.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.fuse_conv.depthwise.weight[0m
[34mins_embed_head.decoder.res3.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.fuse_conv.pointwise.weight[0m
[34mins_embed_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res3.project_conv.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.0.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.depthwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.1.pointwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.depthwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.2.pointwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.depthwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.convs.3.pointwise.weight[0m
[34mins_embed_head.decoder.res5.project_conv.convs.4.1.{bias, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.decoder.res5.project_conv.project.weight[0m
[34mins_embed_head.offset_head.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.offset_head.depthwise.weight[0m
[34mins_embed_head.offset_head.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34mins_embed_head.offset_head.pointwise.weight[0m
[34mins_embed_head.offset_predictor.{bias, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.depthwise.weight[0m
[34msem_seg_head.decoder.res2.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.fuse_conv.pointwise.weight[0m
[34msem_seg_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res2.project_conv.weight[0m
[34msem_seg_head.decoder.res3.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.fuse_conv.depthwise.weight[0m
[34msem_seg_head.decoder.res3.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.fuse_conv.pointwise.weight[0m
[34msem_seg_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res3.project_conv.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.0.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.depthwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.1.pointwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.depthwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.2.pointwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.depthwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.convs.3.pointwise.weight[0m
[34msem_seg_head.decoder.res5.project_conv.convs.4.1.{bias, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.decoder.res5.project_conv.project.weight[0m
[34msem_seg_head.fc.{bias, weight}[0m
[34msem_seg_head.head.depthwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.head.depthwise.weight[0m
[34msem_seg_head.head.pointwise.norm.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.head.pointwise.weight[0m
[34msem_seg_head.predictor.{bias, weight}[0m
[10/08 14:54:36] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mres2.0.conv1.norm.num_batches_tracked[0m
  [35mres2.0.conv2.norm.num_batches_tracked[0m
  [35mres2.0.conv3.norm.num_batches_tracked[0m
  [35mres2.0.shortcut.norm.num_batches_tracked[0m
  [35mres2.1.conv1.norm.num_batches_tracked[0m
  [35mres2.1.conv2.norm.num_batches_tracked[0m
  [35mres2.1.conv3.norm.num_batches_tracked[0m
  [35mres2.2.conv1.norm.num_batches_tracked[0m
  [35mres2.2.conv2.norm.num_batches_tracked[0m
  [35mres2.2.conv3.norm.num_batches_tracked[0m
  [35mres3.0.conv1.norm.num_batches_tracked[0m
  [35mres3.0.conv2.norm.num_batches_tracked[0m
  [35mres3.0.conv3.norm.num_batches_tracked[0m
  [35mres3.0.shortcut.norm.num_batches_tracked[0m
  [35mres3.1.conv1.norm.num_batches_tracked[0m
  [35mres3.1.conv2.norm.num_batches_tracked[0m
  [35mres3.1.conv3.norm.num_batches_tracked[0m
  [35mres3.2.conv1.norm.num_batches_tracked[0m
  [35mres3.2.conv2.norm.num_batches_tracked[0m
  [35mres3.2.conv3.norm.num_batches_tracked[0m
  [35mres3.3.conv1.norm.num_batches_tracked[0m
  [35mres3.3.conv2.norm.num_batches_tracked[0m
  [35mres3.3.conv3.norm.num_batches_tracked[0m
  [35mres4.0.conv1.norm.num_batches_tracked[0m
  [35mres4.0.conv2.norm.num_batches_tracked[0m
  [35mres4.0.conv3.norm.num_batches_tracked[0m
  [35mres4.0.shortcut.norm.num_batches_tracked[0m
  [35mres4.1.conv1.norm.num_batches_tracked[0m
  [35mres4.1.conv2.norm.num_batches_tracked[0m
  [35mres4.1.conv3.norm.num_batches_tracked[0m
  [35mres4.2.conv1.norm.num_batches_tracked[0m
  [35mres4.2.conv2.norm.num_batches_tracked[0m
  [35mres4.2.conv3.norm.num_batches_tracked[0m
  [35mres4.3.conv1.norm.num_batches_tracked[0m
  [35mres4.3.conv2.norm.num_batches_tracked[0m
  [35mres4.3.conv3.norm.num_batches_tracked[0m
  [35mres4.4.conv1.norm.num_batches_tracked[0m
  [35mres4.4.conv2.norm.num_batches_tracked[0m
  [35mres4.4.conv3.norm.num_batches_tracked[0m
  [35mres4.5.conv1.norm.num_batches_tracked[0m
  [35mres4.5.conv2.norm.num_batches_tracked[0m
  [35mres4.5.conv3.norm.num_batches_tracked[0m
  [35mres5.0.conv1.norm.num_batches_tracked[0m
  [35mres5.0.conv2.norm.num_batches_tracked[0m
  [35mres5.0.conv3.norm.num_batches_tracked[0m
  [35mres5.0.shortcut.norm.num_batches_tracked[0m
  [35mres5.1.conv1.norm.num_batches_tracked[0m
  [35mres5.1.conv2.norm.num_batches_tracked[0m
  [35mres5.1.conv3.norm.num_batches_tracked[0m
  [35mres5.2.conv1.norm.num_batches_tracked[0m
  [35mres5.2.conv2.norm.num_batches_tracked[0m
  [35mres5.2.conv3.norm.num_batches_tracked[0m
  [35mstem.conv1.norm.num_batches_tracked[0m
  [35mstem.conv2.norm.num_batches_tracked[0m
  [35mstem.conv3.norm.num_batches_tracked[0m
  [35mstem.fc.{bias, weight}[0m
[10/08 14:54:36] d2.engine.train_loop INFO: Starting training from iteration 0
[10/08 14:55:07] d2.utils.events INFO:  eta: 8:13:20  iter: 19  total_loss: 331.6  loss_sem_seg: 19.37  loss_relation: 309.7  loss_center: 1.314  loss_offset: 1.325  time: 0.5996  data_time: 0.8549  lr: 9.9871e-06  max_mem: 12656M
[10/08 14:55:19] d2.utils.events INFO:  eta: 8:19:53  iter: 39  total_loss: 329.1  loss_sem_seg: 20.44  loss_relation: 305.2  loss_center: 1.207  loss_offset: 1.313  time: 0.6178  data_time: 0.0643  lr: 1.9966e-05  max_mem: 12656M
[10/08 14:55:32] d2.utils.events INFO:  eta: 8:31:49  iter: 59  total_loss: 319.6  loss_sem_seg: 20.45  loss_relation: 297.7  loss_center: 1.081  loss_offset: 1.354  time: 0.6206  data_time: 0.0591  lr: 2.9939e-05  max_mem: 12656M
[10/08 14:55:44] d2.utils.events INFO:  eta: 8:22:35  iter: 79  total_loss: 306.8  loss_sem_seg: 19.01  loss_relation: 285.2  loss_center: 1.174  loss_offset: 1.35  time: 0.6138  data_time: 0.0643  lr: 3.9904e-05  max_mem: 12656M
[10/08 14:55:56] d2.utils.events INFO:  eta: 8:21:16  iter: 99  total_loss: 293.4  loss_sem_seg: 19.13  loss_relation: 271.6  loss_center: 1.098  loss_offset: 1.379  time: 0.6118  data_time: 0.0643  lr: 4.9861e-05  max_mem: 12656M
[10/08 14:56:08] d2.utils.events INFO:  eta: 8:18:56  iter: 119  total_loss: 275.3  loss_sem_seg: 18.44  loss_relation: 254.3  loss_center: 1.056  loss_offset: 1.355  time: 0.6091  data_time: 0.0644  lr: 5.9812e-05  max_mem: 12656M
[10/08 14:56:20] d2.utils.events INFO:  eta: 8:20:49  iter: 139  total_loss: 255.9  loss_sem_seg: 18.33  loss_relation: 234.7  loss_center: 1.008  loss_offset: 1.35  time: 0.6096  data_time: 0.0702  lr: 6.9756e-05  max_mem: 12656M
[10/08 14:56:32] d2.utils.events INFO:  eta: 8:18:25  iter: 159  total_loss: 235.6  loss_sem_seg: 17.23  loss_relation: 216.1  loss_center: 1.197  loss_offset: 1.318  time: 0.6075  data_time: 0.0669  lr: 7.9692e-05  max_mem: 12656M
[10/08 14:56:44] d2.utils.events INFO:  eta: 8:17:33  iter: 179  total_loss: 217.6  loss_sem_seg: 17.18  loss_relation: 198.2  loss_center: 1.165  loss_offset: 1.247  time: 0.6064  data_time: 0.0636  lr: 8.9621e-05  max_mem: 12656M
[10/08 14:56:56] d2.utils.events INFO:  eta: 8:17:21  iter: 199  total_loss: 196.9  loss_sem_seg: 16.3  loss_relation: 178.5  loss_center: 1.016  loss_offset: 1.383  time: 0.6067  data_time: 0.0618  lr: 9.9543e-05  max_mem: 12656M
[10/08 14:57:08] d2.utils.events INFO:  eta: 8:16:56  iter: 219  total_loss: 179.5  loss_sem_seg: 15.25  loss_relation: 161.2  loss_center: 1.158  loss_offset: 1.336  time: 0.6070  data_time: 0.0616  lr: 0.00010946  max_mem: 12656M
[10/08 14:57:20] d2.utils.events INFO:  eta: 8:16:28  iter: 239  total_loss: 162.8  loss_sem_seg: 15.39  loss_relation: 145.5  loss_center: 1.024  loss_offset: 1.261  time: 0.6071  data_time: 0.0631  lr: 0.00011936  max_mem: 12656M
[10/08 14:57:32] d2.utils.events INFO:  eta: 8:14:50  iter: 259  total_loss: 150.4  loss_sem_seg: 14.46  loss_relation: 134.6  loss_center: 1.106  loss_offset: 1.304  time: 0.6059  data_time: 0.0597  lr: 0.00012926  max_mem: 12656M
[10/08 14:57:44] d2.utils.events INFO:  eta: 8:14:38  iter: 279  total_loss: 136.4  loss_sem_seg: 14.38  loss_relation: 120.6  loss_center: 0.9937  loss_offset: 1.314  time: 0.6061  data_time: 0.0648  lr: 0.00013916  max_mem: 12656M
[10/08 14:57:56] d2.utils.events INFO:  eta: 8:14:51  iter: 299  total_loss: 125.7  loss_sem_seg: 13.8  loss_relation: 109.4  loss_center: 1.116  loss_offset: 1.243  time: 0.6058  data_time: 0.0697  lr: 0.00014904  max_mem: 12656M
[10/08 14:58:08] d2.utils.events INFO:  eta: 8:13:48  iter: 319  total_loss: 118  loss_sem_seg: 13.75  loss_relation: 102.4  loss_center: 1.087  loss_offset: 1.349  time: 0.6051  data_time: 0.0610  lr: 0.00015892  max_mem: 12656M
[10/08 14:58:20] d2.utils.events INFO:  eta: 8:13:45  iter: 339  total_loss: 111.1  loss_sem_seg: 13.1  loss_relation: 95.68  loss_center: 1.082  loss_offset: 1.274  time: 0.6051  data_time: 0.0658  lr: 0.00016879  max_mem: 12656M
[10/08 14:58:32] d2.utils.events INFO:  eta: 8:13:33  iter: 359  total_loss: 105  loss_sem_seg: 12.63  loss_relation: 89.95  loss_center: 1.072  loss_offset: 1.263  time: 0.6043  data_time: 0.0628  lr: 0.00017866  max_mem: 12656M
[10/08 14:58:44] d2.utils.events INFO:  eta: 8:13:06  iter: 379  total_loss: 101.2  loss_sem_seg: 12.22  loss_relation: 86.25  loss_center: 1.035  loss_offset: 1.254  time: 0.6035  data_time: 0.0635  lr: 0.00018852  max_mem: 12656M
[10/08 14:58:56] d2.utils.events INFO:  eta: 8:12:54  iter: 399  total_loss: 95.2  loss_sem_seg: 12.74  loss_relation: 79.9  loss_center: 1.16  loss_offset: 1.296  time: 0.6038  data_time: 0.0663  lr: 0.00019836  max_mem: 12656M
[10/08 14:59:08] d2.utils.events INFO:  eta: 8:12:52  iter: 419  total_loss: 93.41  loss_sem_seg: 12.44  loss_relation: 78.62  loss_center: 1.049  loss_offset: 1.216  time: 0.6038  data_time: 0.0608  lr: 0.00020821  max_mem: 12656M
[10/08 14:59:20] d2.utils.events INFO:  eta: 8:12:45  iter: 439  total_loss: 92.14  loss_sem_seg: 12.27  loss_relation: 77.49  loss_center: 1.114  loss_offset: 1.297  time: 0.6040  data_time: 0.0602  lr: 0.00021804  max_mem: 12656M
[10/08 14:59:32] d2.utils.events INFO:  eta: 8:12:25  iter: 459  total_loss: 88.84  loss_sem_seg: 12.06  loss_relation: 73.94  loss_center: 1.046  loss_offset: 1.288  time: 0.6036  data_time: 0.0658  lr: 0.00022787  max_mem: 12656M
[10/08 14:59:45] d2.utils.events INFO:  eta: 8:12:22  iter: 479  total_loss: 86.17  loss_sem_seg: 11.81  loss_relation: 72.22  loss_center: 1.071  loss_offset: 1.284  time: 0.6041  data_time: 0.0636  lr: 0.00023769  max_mem: 12656M
[10/08 14:59:57] d2.utils.events INFO:  eta: 8:12:52  iter: 499  total_loss: 90.85  loss_sem_seg: 11.89  loss_relation: 74.89  loss_center: 1.106  loss_offset: 1.296  time: 0.6053  data_time: 0.0647  lr: 0.00024751  max_mem: 12656M
[10/08 15:00:10] d2.utils.events INFO:  eta: 8:13:16  iter: 519  total_loss: 83  loss_sem_seg: 12.11  loss_relation: 68.75  loss_center: 1.066  loss_offset: 1.287  time: 0.6063  data_time: 0.0634  lr: 0.00025731  max_mem: 12656M
[10/08 15:00:23] d2.utils.events INFO:  eta: 8:13:21  iter: 539  total_loss: 84.21  loss_sem_seg: 11.97  loss_relation: 70.64  loss_center: 1.134  loss_offset: 1.189  time: 0.6079  data_time: 0.0678  lr: 0.00026711  max_mem: 12656M
[10/08 15:00:36] d2.utils.events INFO:  eta: 8:14:01  iter: 559  total_loss: 83.64  loss_sem_seg: 11.8  loss_relation: 69.01  loss_center: 1.03  loss_offset: 1.249  time: 0.6094  data_time: 0.0634  lr: 0.0002769  max_mem: 12656M
[10/08 15:00:49] d2.utils.events INFO:  eta: 8:14:21  iter: 579  total_loss: 81.37  loss_sem_seg: 11.31  loss_relation: 67.91  loss_center: 1.019  loss_offset: 1.299  time: 0.6104  data_time: 0.0688  lr: 0.00028669  max_mem: 12656M
[10/08 15:01:02] d2.utils.events INFO:  eta: 8:15:50  iter: 599  total_loss: 83.99  loss_sem_seg: 11.4  loss_relation: 70.66  loss_center: 1.215  loss_offset: 1.247  time: 0.6122  data_time: 0.0643  lr: 0.00029647  max_mem: 12656M
[10/08 15:01:14] d2.utils.events INFO:  eta: 8:15:40  iter: 619  total_loss: 80.31  loss_sem_seg: 11.65  loss_relation: 66.47  loss_center: 1.066  loss_offset: 1.205  time: 0.6125  data_time: 0.0676  lr: 0.00030624  max_mem: 12656M
[10/08 15:01:28] d2.utils.events INFO:  eta: 8:15:48  iter: 639  total_loss: 80.98  loss_sem_seg: 10.94  loss_relation: 67.88  loss_center: 1.022  loss_offset: 1.1  time: 0.6138  data_time: 0.0674  lr: 0.000316  max_mem: 12656M
[10/08 15:01:40] d2.utils.events INFO:  eta: 8:16:26  iter: 659  total_loss: 82.63  loss_sem_seg: 11.09  loss_relation: 69.78  loss_center: 1.068  loss_offset: 1.189  time: 0.6147  data_time: 0.0622  lr: 0.00032576  max_mem: 12656M
[10/08 15:01:54] d2.utils.events INFO:  eta: 8:17:20  iter: 679  total_loss: 78.22  loss_sem_seg: 10.35  loss_relation: 64.17  loss_center: 0.9529  loss_offset: 1.237  time: 0.6161  data_time: 0.0705  lr: 0.00033551  max_mem: 12656M
[10/08 15:02:07] d2.utils.events INFO:  eta: 8:17:27  iter: 699  total_loss: 77.9  loss_sem_seg: 10.62  loss_relation: 64.9  loss_center: 1.032  loss_offset: 1.161  time: 0.6175  data_time: 0.0724  lr: 0.00034525  max_mem: 12656M
[10/08 15:02:20] d2.utils.events INFO:  eta: 8:17:40  iter: 719  total_loss: 75.98  loss_sem_seg: 10.4  loss_relation: 62.83  loss_center: 1.042  loss_offset: 1.139  time: 0.6185  data_time: 0.0686  lr: 0.00035498  max_mem: 12656M
[10/08 15:02:33] d2.utils.events INFO:  eta: 8:18:21  iter: 739  total_loss: 79.57  loss_sem_seg: 10.88  loss_relation: 66.71  loss_center: 1.001  loss_offset: 1.163  time: 0.6198  data_time: 0.0647  lr: 0.00036471  max_mem: 12656M
[10/08 15:02:47] d2.utils.events INFO:  eta: 8:18:42  iter: 759  total_loss: 80.04  loss_sem_seg: 10.5  loss_relation: 68.56  loss_center: 1.069  loss_offset: 1.059  time: 0.6212  data_time: 0.0708  lr: 0.00037443  max_mem: 12656M
[10/08 15:03:00] d2.utils.events INFO:  eta: 8:19:25  iter: 779  total_loss: 79.05  loss_sem_seg: 10.59  loss_relation: 65.24  loss_center: 1.075  loss_offset: 1.102  time: 0.6220  data_time: 0.0708  lr: 0.00038414  max_mem: 12656M
[10/08 15:03:13] d2.utils.events INFO:  eta: 8:19:50  iter: 799  total_loss: 79.47  loss_sem_seg: 10.72  loss_relation: 66.75  loss_center: 1.004  loss_offset: 1.174  time: 0.6225  data_time: 0.0719  lr: 0.00039385  max_mem: 12656M
[10/08 15:03:26] d2.utils.events INFO:  eta: 8:19:51  iter: 819  total_loss: 80.74  loss_sem_seg: 10.73  loss_relation: 66.53  loss_center: 1.151  loss_offset: 1.131  time: 0.6230  data_time: 0.0649  lr: 0.00040355  max_mem: 12656M
[10/08 15:03:39] d2.utils.events INFO:  eta: 8:20:23  iter: 839  total_loss: 79.16  loss_sem_seg: 11.04  loss_relation: 66.5  loss_center: 0.9931  loss_offset: 1.13  time: 0.6238  data_time: 0.0700  lr: 0.00041324  max_mem: 12656M
[10/08 15:03:52] d2.utils.events INFO:  eta: 8:20:26  iter: 859  total_loss: 79.11  loss_sem_seg: 10.33  loss_relation: 65.95  loss_center: 1.018  loss_offset: 1.077  time: 0.6243  data_time: 0.0684  lr: 0.00042292  max_mem: 12656M
[10/08 15:04:05] d2.utils.events INFO:  eta: 8:20:41  iter: 879  total_loss: 77.53  loss_sem_seg: 10.1  loss_relation: 66.25  loss_center: 1.106  loss_offset: 1.039  time: 0.6247  data_time: 0.0681  lr: 0.0004326  max_mem: 12656M
[10/08 15:04:18] d2.utils.events INFO:  eta: 8:21:00  iter: 899  total_loss: 76.14  loss_sem_seg: 9.988  loss_relation: 64.07  loss_center: 1.03  loss_offset: 1.038  time: 0.6253  data_time: 0.0698  lr: 0.00044227  max_mem: 12656M
[10/08 15:04:30] d2.utils.events INFO:  eta: 8:20:43  iter: 919  total_loss: 77.66  loss_sem_seg: 9.431  loss_relation: 65.98  loss_center: 1.039  loss_offset: 0.9819  time: 0.6254  data_time: 0.0689  lr: 0.00045193  max_mem: 12656M
[10/08 15:04:43] d2.utils.events INFO:  eta: 8:20:44  iter: 939  total_loss: 77.39  loss_sem_seg: 9.573  loss_relation: 65.4  loss_center: 1.108  loss_offset: 1.057  time: 0.6257  data_time: 0.0721  lr: 0.00046159  max_mem: 12656M
[10/08 15:04:56] d2.utils.events INFO:  eta: 8:21:34  iter: 959  total_loss: 75.24  loss_sem_seg: 9.786  loss_relation: 62.05  loss_center: 1.12  loss_offset: 1.017  time: 0.6266  data_time: 0.0646  lr: 0.00047124  max_mem: 12656M
[10/08 15:05:09] d2.utils.events INFO:  eta: 8:21:40  iter: 979  total_loss: 74.55  loss_sem_seg: 9.479  loss_relation: 63.09  loss_center: 0.9994  loss_offset: 1.07  time: 0.6271  data_time: 0.0697  lr: 0.00048088  max_mem: 12656M
[10/08 15:05:23] d2.utils.events INFO:  eta: 8:21:42  iter: 999  total_loss: 74.93  loss_sem_seg: 9.677  loss_relation: 62.33  loss_center: 1.033  loss_offset: 1.016  time: 0.6277  data_time: 0.0690  lr: 0.00049051  max_mem: 12656M
[10/08 15:05:36] d2.utils.events INFO:  eta: 8:22:29  iter: 1019  total_loss: 75.13  loss_sem_seg: 9.77  loss_relation: 63.48  loss_center: 1.006  loss_offset: 0.9932  time: 0.6288  data_time: 0.0698  lr: 0.00049082  max_mem: 12656M
[10/08 15:05:49] d2.utils.events INFO:  eta: 8:22:27  iter: 1039  total_loss: 77.64  loss_sem_seg: 9.615  loss_relation: 65.61  loss_center: 0.9669  loss_offset: 1.105  time: 0.6293  data_time: 0.0693  lr: 0.00049064  max_mem: 12656M
[10/08 15:06:02] d2.utils.events INFO:  eta: 8:22:11  iter: 1059  total_loss: 75.18  loss_sem_seg: 10.24  loss_relation: 62.67  loss_center: 1.01  loss_offset: 1.115  time: 0.6296  data_time: 0.0689  lr: 0.00049046  max_mem: 12656M
[10/08 15:06:15] d2.utils.events INFO:  eta: 8:23:31  iter: 1079  total_loss: 74.45  loss_sem_seg: 9.587  loss_relation: 62.52  loss_center: 1.016  loss_offset: 1.02  time: 0.6300  data_time: 0.0662  lr: 0.00049028  max_mem: 12656M
[10/08 15:06:28] d2.utils.events INFO:  eta: 8:24:19  iter: 1099  total_loss: 72.61  loss_sem_seg: 9.569  loss_relation: 61.39  loss_center: 1.019  loss_offset: 1.034  time: 0.6302  data_time: 0.0662  lr: 0.0004901  max_mem: 12656M
[10/08 15:06:41] d2.utils.events INFO:  eta: 8:24:54  iter: 1119  total_loss: 75.68  loss_sem_seg: 9.608  loss_relation: 64.33  loss_center: 1.026  loss_offset: 0.9461  time: 0.6307  data_time: 0.0730  lr: 0.00048992  max_mem: 12656M
[10/08 15:06:54] d2.utils.events INFO:  eta: 8:25:05  iter: 1139  total_loss: 73.11  loss_sem_seg: 9.108  loss_relation: 62.14  loss_center: 1.049  loss_offset: 0.9097  time: 0.6307  data_time: 0.0715  lr: 0.00048974  max_mem: 12656M
[10/08 15:07:07] d2.utils.events INFO:  eta: 8:25:41  iter: 1159  total_loss: 73.69  loss_sem_seg: 9.092  loss_relation: 62.1  loss_center: 1.075  loss_offset: 0.921  time: 0.6308  data_time: 0.0686  lr: 0.00048956  max_mem: 12656M
[10/08 15:07:20] d2.utils.events INFO:  eta: 8:26:46  iter: 1179  total_loss: 71.45  loss_sem_seg: 9.074  loss_relation: 60.48  loss_center: 1.036  loss_offset: 1.012  time: 0.6312  data_time: 0.0698  lr: 0.00048938  max_mem: 12656M
[10/08 15:07:32] d2.utils.events INFO:  eta: 8:27:12  iter: 1199  total_loss: 75.25  loss_sem_seg: 9.564  loss_relation: 64.44  loss_center: 1.032  loss_offset: 1.01  time: 0.6312  data_time: 0.0689  lr: 0.0004892  max_mem: 12656M
[10/08 15:07:46] d2.utils.events INFO:  eta: 8:27:48  iter: 1219  total_loss: 71.37  loss_sem_seg: 9.24  loss_relation: 59.68  loss_center: 1.089  loss_offset: 0.9711  time: 0.6319  data_time: 0.0707  lr: 0.00048902  max_mem: 12656M
[10/08 15:07:58] d2.utils.events INFO:  eta: 8:27:54  iter: 1239  total_loss: 74.84  loss_sem_seg: 9.023  loss_relation: 64.08  loss_center: 0.9474  loss_offset: 0.9826  time: 0.6319  data_time: 0.0728  lr: 0.00048884  max_mem: 12656M
[10/08 15:08:11] d2.utils.events INFO:  eta: 8:28:44  iter: 1259  total_loss: 71.97  loss_sem_seg: 9.147  loss_relation: 60.42  loss_center: 1.052  loss_offset: 0.9392  time: 0.6322  data_time: 0.0692  lr: 0.00048865  max_mem: 12656M
[10/08 15:08:24] d2.utils.events INFO:  eta: 8:29:16  iter: 1279  total_loss: 72.06  loss_sem_seg: 8.853  loss_relation: 61.57  loss_center: 1.215  loss_offset: 0.9254  time: 0.6324  data_time: 0.0717  lr: 0.00048847  max_mem: 12656M
[10/08 15:08:38] d2.utils.events INFO:  eta: 8:30:00  iter: 1299  total_loss: 72.17  loss_sem_seg: 9.249  loss_relation: 60.77  loss_center: 1.027  loss_offset: 1.014  time: 0.6329  data_time: 0.0700  lr: 0.00048829  max_mem: 12656M
[10/08 15:08:51] d2.utils.events INFO:  eta: 8:31:11  iter: 1319  total_loss: 73.28  loss_sem_seg: 8.406  loss_relation: 61.21  loss_center: 1.021  loss_offset: 1.006  time: 0.6332  data_time: 0.0698  lr: 0.00048811  max_mem: 12656M
[10/08 15:09:04] d2.utils.events INFO:  eta: 8:31:57  iter: 1339  total_loss: 71.53  loss_sem_seg: 9.097  loss_relation: 61.26  loss_center: 1.072  loss_offset: 0.9183  time: 0.6334  data_time: 0.0693  lr: 0.00048793  max_mem: 12656M
[10/08 15:09:16] d2.utils.events INFO:  eta: 8:32:19  iter: 1359  total_loss: 71.63  loss_sem_seg: 9.146  loss_relation: 60.65  loss_center: 1.076  loss_offset: 0.9948  time: 0.6332  data_time: 0.0680  lr: 0.00048775  max_mem: 12656M
[10/08 15:09:29] d2.utils.events INFO:  eta: 8:33:33  iter: 1379  total_loss: 73.41  loss_sem_seg: 9.176  loss_relation: 61.93  loss_center: 1.064  loss_offset: 0.9825  time: 0.6336  data_time: 0.0697  lr: 0.00048757  max_mem: 12656M
[10/08 15:09:42] d2.utils.events INFO:  eta: 8:34:06  iter: 1399  total_loss: 77.11  loss_sem_seg: 9.281  loss_relation: 64.91  loss_center: 0.9926  loss_offset: 0.945  time: 0.6337  data_time: 0.0724  lr: 0.00048739  max_mem: 12656M
[10/08 15:09:55] d2.utils.events INFO:  eta: 8:35:47  iter: 1419  total_loss: 72.25  loss_sem_seg: 9.184  loss_relation: 61.06  loss_center: 1.076  loss_offset: 0.9319  time: 0.6342  data_time: 0.0667  lr: 0.00048721  max_mem: 12656M
[10/08 15:10:08] d2.utils.events INFO:  eta: 8:36:29  iter: 1439  total_loss: 71.29  loss_sem_seg: 9.076  loss_relation: 61.23  loss_center: 0.9897  loss_offset: 0.9349  time: 0.6343  data_time: 0.0680  lr: 0.00048703  max_mem: 12656M
[10/08 15:10:21] d2.utils.events INFO:  eta: 8:37:15  iter: 1459  total_loss: 70.04  loss_sem_seg: 8.068  loss_relation: 60.14  loss_center: 1.054  loss_offset: 0.897  time: 0.6344  data_time: 0.0714  lr: 0.00048685  max_mem: 12656M
[10/08 15:10:34] d2.utils.events INFO:  eta: 8:38:10  iter: 1479  total_loss: 72.97  loss_sem_seg: 8.792  loss_relation: 62.2  loss_center: 0.9553  loss_offset: 0.981  time: 0.6346  data_time: 0.0692  lr: 0.00048667  max_mem: 12656M
[10/08 15:10:47] d2.utils.events INFO:  eta: 8:39:13  iter: 1499  total_loss: 69.27  loss_sem_seg: 8.252  loss_relation: 59.2  loss_center: 1.025  loss_offset: 0.9506  time: 0.6347  data_time: 0.0662  lr: 0.00048649  max_mem: 12656M
[10/08 15:11:00] d2.utils.events INFO:  eta: 8:41:07  iter: 1519  total_loss: 73.78  loss_sem_seg: 9.199  loss_relation: 63.04  loss_center: 0.926  loss_offset: 1.014  time: 0.6350  data_time: 0.0683  lr: 0.00048631  max_mem: 12656M
[10/08 15:11:13] d2.utils.events INFO:  eta: 8:41:15  iter: 1539  total_loss: 70.7  loss_sem_seg: 8.352  loss_relation: 59.81  loss_center: 0.9517  loss_offset: 0.9343  time: 0.6352  data_time: 0.0667  lr: 0.00048613  max_mem: 12656M
[10/08 15:11:26] d2.utils.events INFO:  eta: 8:41:03  iter: 1559  total_loss: 69.57  loss_sem_seg: 8.439  loss_relation: 58.38  loss_center: 0.9557  loss_offset: 0.9246  time: 0.6354  data_time: 0.0676  lr: 0.00048595  max_mem: 12656M
[10/08 15:11:40] d2.utils.events INFO:  eta: 8:42:29  iter: 1579  total_loss: 69.84  loss_sem_seg: 8.417  loss_relation: 61.14  loss_center: 1.017  loss_offset: 0.899  time: 0.6358  data_time: 0.0769  lr: 0.00048577  max_mem: 12656M
[10/08 15:11:53] d2.utils.events INFO:  eta: 8:41:49  iter: 1599  total_loss: 71.85  loss_sem_seg: 8.911  loss_relation: 61.01  loss_center: 1.053  loss_offset: 0.8662  time: 0.6361  data_time: 0.0703  lr: 0.00048559  max_mem: 12656M
[10/08 15:12:06] d2.utils.events INFO:  eta: 8:44:19  iter: 1619  total_loss: 73.1  loss_sem_seg: 8.982  loss_relation: 62.71  loss_center: 1.061  loss_offset: 0.9173  time: 0.6364  data_time: 0.0611  lr: 0.00048541  max_mem: 12656M
[10/08 15:12:19] d2.utils.events INFO:  eta: 8:44:29  iter: 1639  total_loss: 69.24  loss_sem_seg: 9.005  loss_relation: 58.92  loss_center: 1.091  loss_offset: 0.8929  time: 0.6367  data_time: 0.0658  lr: 0.00048522  max_mem: 12656M
[10/08 15:12:32] d2.utils.events INFO:  eta: 8:44:16  iter: 1659  total_loss: 71.39  loss_sem_seg: 8.483  loss_relation: 61.17  loss_center: 0.8791  loss_offset: 0.9072  time: 0.6369  data_time: 0.0741  lr: 0.00048504  max_mem: 12656M
[10/08 15:12:45] d2.utils.events INFO:  eta: 8:43:22  iter: 1679  total_loss: 70.25  loss_sem_seg: 8.64  loss_relation: 59.46  loss_center: 1.003  loss_offset: 0.9422  time: 0.6371  data_time: 0.0707  lr: 0.00048486  max_mem: 12656M
[10/08 15:12:58] d2.utils.events INFO:  eta: 8:41:03  iter: 1699  total_loss: 69.44  loss_sem_seg: 8.463  loss_relation: 59.68  loss_center: 0.9708  loss_offset: 0.9232  time: 0.6372  data_time: 0.0673  lr: 0.00048468  max_mem: 12656M
[10/08 15:13:12] d2.utils.events INFO:  eta: 8:40:31  iter: 1719  total_loss: 68.51  loss_sem_seg: 7.633  loss_relation: 58.6  loss_center: 1.018  loss_offset: 0.8744  time: 0.6376  data_time: 0.0689  lr: 0.0004845  max_mem: 12656M
[10/08 15:13:25] d2.utils.events INFO:  eta: 8:39:41  iter: 1739  total_loss: 70.51  loss_sem_seg: 8.224  loss_relation: 59.48  loss_center: 0.9685  loss_offset: 0.919  time: 0.6378  data_time: 0.0746  lr: 0.00048432  max_mem: 12656M
[10/08 15:13:38] d2.utils.events INFO:  eta: 8:38:41  iter: 1759  total_loss: 70.98  loss_sem_seg: 8.536  loss_relation: 59.18  loss_center: 1.057  loss_offset: 0.8978  time: 0.6378  data_time: 0.0669  lr: 0.00048414  max_mem: 12656M
[10/08 15:13:51] d2.utils.events INFO:  eta: 8:38:41  iter: 1779  total_loss: 67.75  loss_sem_seg: 8.295  loss_relation: 57.93  loss_center: 0.995  loss_offset: 0.9337  time: 0.6381  data_time: 0.0685  lr: 0.00048396  max_mem: 12656M
[10/08 15:14:04] d2.utils.events INFO:  eta: 8:38:25  iter: 1799  total_loss: 70.99  loss_sem_seg: 8.067  loss_relation: 61.1  loss_center: 1.034  loss_offset: 0.9285  time: 0.6381  data_time: 0.0624  lr: 0.00048378  max_mem: 12656M
[10/08 15:14:16] d2.utils.events INFO:  eta: 8:38:02  iter: 1819  total_loss: 68.87  loss_sem_seg: 8.732  loss_relation: 58.55  loss_center: 1.016  loss_offset: 0.9057  time: 0.6381  data_time: 0.0681  lr: 0.0004836  max_mem: 12656M
[10/08 15:14:29] d2.utils.events INFO:  eta: 8:35:50  iter: 1839  total_loss: 70.06  loss_sem_seg: 8.22  loss_relation: 59.59  loss_center: 0.97  loss_offset: 0.8683  time: 0.6379  data_time: 0.0689  lr: 0.00048342  max_mem: 12656M
[10/08 15:14:42] d2.utils.events INFO:  eta: 8:35:37  iter: 1859  total_loss: 70  loss_sem_seg: 8.48  loss_relation: 60.17  loss_center: 0.9613  loss_offset: 0.8737  time: 0.6381  data_time: 0.0654  lr: 0.00048324  max_mem: 12656M
[10/08 15:14:54] d2.utils.events INFO:  eta: 8:34:20  iter: 1879  total_loss: 69.52  loss_sem_seg: 8.087  loss_relation: 58.65  loss_center: 1.048  loss_offset: 0.8555  time: 0.6379  data_time: 0.0649  lr: 0.00048306  max_mem: 12656M
[10/08 15:15:07] d2.utils.events INFO:  eta: 8:32:50  iter: 1899  total_loss: 69.15  loss_sem_seg: 8.088  loss_relation: 58.87  loss_center: 0.9931  loss_offset: 0.8836  time: 0.6378  data_time: 0.0641  lr: 0.00048288  max_mem: 12656M
[10/08 15:15:19] d2.utils.events INFO:  eta: 8:32:28  iter: 1919  total_loss: 68.94  loss_sem_seg: 8.431  loss_relation: 58.83  loss_center: 1.048  loss_offset: 0.9256  time: 0.6375  data_time: 0.0636  lr: 0.0004827  max_mem: 12656M
[10/08 15:15:31] d2.utils.events INFO:  eta: 8:31:31  iter: 1939  total_loss: 69.77  loss_sem_seg: 8.208  loss_relation: 59.89  loss_center: 0.9829  loss_offset: 0.8816  time: 0.6372  data_time: 0.0721  lr: 0.00048251  max_mem: 12656M
[10/08 15:15:44] d2.utils.events INFO:  eta: 8:30:42  iter: 1959  total_loss: 70.01  loss_sem_seg: 7.798  loss_relation: 60.67  loss_center: 1.092  loss_offset: 0.8782  time: 0.6370  data_time: 0.0659  lr: 0.00048233  max_mem: 12656M
[10/08 15:15:56] d2.utils.events INFO:  eta: 8:30:09  iter: 1979  total_loss: 69.91  loss_sem_seg: 8.46  loss_relation: 60.31  loss_center: 0.8488  loss_offset: 0.8987  time: 0.6370  data_time: 0.0700  lr: 0.00048215  max_mem: 12656M
[10/08 15:16:10] d2.data.build INFO: Distribution of instances among all 133 categories:
[36m|   category    | #instances   |   category    | #instances   |   category    | #instances   |
|:-------------:|:-------------|:-------------:|:-------------|:-------------:|:-------------|
|    person     | 1980         |    bicycle    | 80           |      car      | 332          |
|  motorcycle   | 51           |   airplane    | 15           |      bus      | 38           |
|     train     | 21           |     truck     | 70           |     boat      | 53           |
| traffic light | 93           | fire hydrant  | 9            |   stop sign   | 8            |
| parking meter | 1            |     bench     | 56           |     bird      | 86           |
|      cat      | 8            |      dog      | 18           |     horse     | 42           |
|     sheep     | 47           |      cow      | 30           |   elephant    | 29           |
|     bear      | 10           |     zebra     | 47           |    giraffe    | 33           |
|   backpack    | 55           |   umbrella    | 44           |    handbag    | 130          |
|      tie      | 33           |   suitcase    | 18           |    frisbee    | 7            |
|     skis      | 44           |   snowboard   | 11           |  sports ball  | 46           |
|     kite      | 94           | baseball bat  | 24           | baseball gl.. | 32           |
|  skateboard   | 37           |   surfboard   | 55           | tennis racket | 30           |
|    bottle     | 77           |  wine glass   | 41           |      cup      | 104          |
|     fork      | 23           |     knife     | 30           |     spoon     | 23           |
|     bowl      | 51           |    banana     | 52           |     apple     | 14           |
|   sandwich    | 5            |    orange     | 13           |   broccoli    | 3            |
|    carrot     | 16           |    hot dog    | 8            |     pizza     | 14           |
|     donut     | 9            |     cake      | 15           |     chair     | 197          |
|     couch     | 17           | potted plant  | 10           |      bed      | 10           |
| dining table  | 45           |    toilet     | 6            |      tv       | 12           |
|    laptop     | 16           |     mouse     | 2            |    remote     | 23           |
|   keyboard    | 2            |  cell phone   | 25           |   microwave   | 0            |
|     oven      | 3            |    toaster    | 0            |     sink      | 7            |
| refrigerator  | 2            |     book      | 74           |     clock     | 11           |
|     vase      | 1            |   scissors    | 0            |  teddy bear   | 33           |
|  hair drier   | 0            |  toothbrush   | 8            |    banner     | 29           |
|    blanket    | 13           |    bridge     | 9            |   cardboard   | 14           |
|    counter    | 7            |    curtain    | 12           |  door-stuff   | 30           |
|  floor-wood   | 16           |    flower     | 9            |     fruit     | 6            |
|    gravel     | 10           |     house     | 33           |     light     | 41           |
| mirror-stuff  | 7            |      net      | 7            |    pillow     | 7            |
|   platform    | 16           | playingfield  | 39           |   railroad    | 17           |
|     river     | 10           |     road      | 101          |     roof      | 20           |
|     sand      | 28           |      sea      | 53           |     shelf     | 19           |
|     snow      | 27           |    stairs     | 16           |     tent      | 11           |
|     towel     | 12           |  wall-brick   | 24           |  wall-stone   | 15           |
|   wall-tile   | 12           |   wall-wood   | 34           |  water-other  | 10           |
| window-blind  | 8            | window-other  | 40           |  tree-merged  | 224          |
| fence-merged  | 91           | ceiling-mer.. | 32           | sky-other-m.. | 233          |
| cabinet-mer.. | 16           | table-merged  | 46           | floor-other.. | 42           |
| pavement-me.. | 134          | mountain-me.. | 31           | grass-merged  | 128          |
|  dirt-merged  | 57           | paper-merged  | 29           | food-other-.. | 24           |
| building-ot.. | 152          |  rock-merged  | 22           | wall-other-.. | 145          |
|  rug-merged   | 14           |               |              |               |              |
|     total     | 7001         |               |              |               |              |[0m
[10/08 15:16:10] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[10/08 15:16:10] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/08 15:16:10] d2.data.common INFO: Serialized dataset takes 0.86 MiB
[10/08 15:16:10] d2.evaluation.evaluator INFO: Start inference on 250 batches
[10/08 15:16:28] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0022 s/iter. Inference: 0.0627 s/iter. Eval: 0.0279 s/iter. Total: 0.0928 s/iter. ETA=0:00:22
[10/08 15:16:33] d2.evaluation.evaluator INFO: Inference done 71/250. Dataloading: 0.0014 s/iter. Inference: 0.0538 s/iter. Eval: 0.0297 s/iter. Total: 0.0850 s/iter. ETA=0:00:15
[10/08 15:16:38] d2.evaluation.evaluator INFO: Inference done 137/250. Dataloading: 0.0016 s/iter. Inference: 0.0506 s/iter. Eval: 0.0287 s/iter. Total: 0.0810 s/iter. ETA=0:00:09
[10/08 15:16:43] d2.evaluation.evaluator INFO: Inference done 203/250. Dataloading: 0.0016 s/iter. Inference: 0.0499 s/iter. Eval: 0.0279 s/iter. Total: 0.0795 s/iter. ETA=0:00:03
[10/08 15:16:47] d2.evaluation.evaluator INFO: Total inference time: 0:00:19.817918 (0.080889 s / iter per device, on 2 devices)
[10/08 15:16:47] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:12 (0.049146 s / iter per device, on 2 devices)
[10/08 15:16:47] d2.projects.panoptic_deeplab.evaluator INFO: Writing all panoptic predictions to /tmp/panoptic_evalzxp3pwi6 ...
[10/08 15:17:18] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Relations Evaluation Results: 12.74745020665195
[10/08 15:17:18] d2.projects.panoptic_deeplab.evaluator INFO: Panoptic Evaluation Results:
|        |  PQ   |   SQ   |  RQ   |  #categories  |
|:------:|:-----:|:------:|:-----:|:-------------:|
|  All   | 2.161 | 10.048 | 2.959 |      129      |
| Things | 0.171 | 3.240  | 0.274 |      76       |
| Stuff  | 5.015 | 19.811 | 6.809 |      53       |
[10/08 15:17:18] d2.engine.defaults INFO: Evaluation results for psg_val in csv format:
[10/08 15:17:18] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/08 15:17:18] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[10/08 15:17:18] d2.evaluation.testing INFO: copypaste: 2.1613,10.0482,2.9589,0.1711,3.2402,0.2739,5.0151,19.8105,6.8091
[10/08 15:17:18] d2.evaluation.testing INFO: copypaste: Task: relation_mean_recall
[10/08 15:17:18] d2.evaluation.testing INFO: copypaste: mean_recall
[10/08 15:17:18] d2.evaluation.testing INFO: copypaste: 0.1275
[10/08 15:17:18] d2.utils.events INFO:  eta: 8:29:34  iter: 1999  total_loss: 71.42  loss_sem_seg: 8.081  loss_relation: 61.16  loss_center: 0.9784  loss_offset: 0.8845  time: 0.6370  data_time: 0.0701  lr: 0.00048197  max_mem: 12656M
[10/08 15:17:18] fvcore.common.checkpoint INFO: Saving checkpoint to ./relations_output_seg_w_5_new/model_best.pth
[10/08 15:17:19] d2.engine.hooks INFO: Saved first model at 0.12747 @ 1999 steps
[10/08 15:17:32] d2.utils.events INFO:  eta: 8:28:53  iter: 2019  total_loss: 70.64  loss_sem_seg: 8.586  loss_relation: 59.11  loss_center: 0.9621  loss_offset: 0.9022  time: 0.6372  data_time: 0.0667  lr: 0.00048179  max_mem: 12656M
[10/08 15:17:45] d2.utils.events INFO:  eta: 8:27:54  iter: 2039  total_loss: 69.06  loss_sem_seg: 7.743  loss_relation: 59.43  loss_center: 0.9872  loss_offset: 0.8903  time: 0.6372  data_time: 0.0629  lr: 0.00048161  max_mem: 12656M
[10/08 15:17:57] d2.utils.events INFO:  eta: 8:26:10  iter: 2059  total_loss: 68.29  loss_sem_seg: 8.471  loss_relation: 56.65  loss_center: 1.007  loss_offset: 0.9332  time: 0.6370  data_time: 0.0686  lr: 0.00048143  max_mem: 12656M
[10/08 15:18:10] d2.utils.events INFO:  eta: 8:25:12  iter: 2079  total_loss: 69.55  loss_sem_seg: 8.299  loss_relation: 58.68  loss_center: 0.9561  loss_offset: 0.8797  time: 0.6370  data_time: 0.0723  lr: 0.00048125  max_mem: 12656M
[10/08 15:18:22] d2.utils.events INFO:  eta: 8:24:47  iter: 2099  total_loss: 69.11  loss_sem_seg: 7.916  loss_relation: 59.19  loss_center: 0.9654  loss_offset: 0.9327  time: 0.6369  data_time: 0.0711  lr: 0.00048107  max_mem: 12656M
[10/08 15:18:35] d2.utils.events INFO:  eta: 8:23:55  iter: 2119  total_loss: 68.58  loss_sem_seg: 7.949  loss_relation: 59.85  loss_center: 1.038  loss_offset: 0.8194  time: 0.6368  data_time: 0.0680  lr: 0.00048089  max_mem: 12656M
[10/08 15:18:47] d2.utils.events INFO:  eta: 8:23:48  iter: 2139  total_loss: 70.88  loss_sem_seg: 8.12  loss_relation: 59.57  loss_center: 1.084  loss_offset: 0.8854  time: 0.6368  data_time: 0.0634  lr: 0.00048071  max_mem: 12656M
[10/08 15:19:00] d2.utils.events INFO:  eta: 8:23:46  iter: 2159  total_loss: 68.89  loss_sem_seg: 8.302  loss_relation: 58.9  loss_center: 1.028  loss_offset: 0.8773  time: 0.6369  data_time: 0.0687  lr: 0.00048053  max_mem: 12656M
[10/08 15:19:13] d2.utils.events INFO:  eta: 8:23:16  iter: 2179  total_loss: 69.76  loss_sem_seg: 8.49  loss_relation: 60.3  loss_center: 1.009  loss_offset: 0.9061  time: 0.6367  data_time: 0.0659  lr: 0.00048035  max_mem: 12656M
[10/08 15:19:25] d2.utils.events INFO:  eta: 8:22:57  iter: 2199  total_loss: 68.16  loss_sem_seg: 8.467  loss_relation: 57.83  loss_center: 1.006  loss_offset: 0.9066  time: 0.6367  data_time: 0.0656  lr: 0.00048016  max_mem: 12656M
[10/08 15:19:38] d2.utils.events INFO:  eta: 8:22:13  iter: 2219  total_loss: 69.14  loss_sem_seg: 8.099  loss_relation: 59.17  loss_center: 0.9694  loss_offset: 0.8525  time: 0.6366  data_time: 0.0728  lr: 0.00047998  max_mem: 12656M
[10/08 15:19:50] d2.utils.events INFO:  eta: 8:21:59  iter: 2239  total_loss: 69.04  loss_sem_seg: 8.017  loss_relation: 59.47  loss_center: 1.062  loss_offset: 0.8466  time: 0.6364  data_time: 0.0686  lr: 0.0004798  max_mem: 12656M
[10/08 15:20:03] d2.utils.events INFO:  eta: 8:21:35  iter: 2259  total_loss: 68.7  loss_sem_seg: 8.021  loss_relation: 58.97  loss_center: 1.004  loss_offset: 0.8815  time: 0.6365  data_time: 0.0684  lr: 0.00047962  max_mem: 12656M
[10/08 15:20:16] d2.utils.events INFO:  eta: 8:20:54  iter: 2279  total_loss: 65.42  loss_sem_seg: 7.623  loss_relation: 55.66  loss_center: 0.9599  loss_offset: 0.9196  time: 0.6364  data_time: 0.0718  lr: 0.00047944  max_mem: 12656M
[10/08 15:20:28] d2.utils.events INFO:  eta: 8:18:49  iter: 2299  total_loss: 67.94  loss_sem_seg: 7.791  loss_relation: 57.9  loss_center: 0.8353  loss_offset: 0.8845  time: 0.6362  data_time: 0.0652  lr: 0.00047926  max_mem: 12656M
[10/08 15:20:41] d2.utils.events INFO:  eta: 8:17:42  iter: 2319  total_loss: 67.5  loss_sem_seg: 8.63  loss_relation: 57.28  loss_center: 1.015  loss_offset: 0.8535  time: 0.6361  data_time: 0.0637  lr: 0.00047908  max_mem: 12656M
[10/08 15:20:53] d2.utils.events INFO:  eta: 8:17:11  iter: 2339  total_loss: 69.62  loss_sem_seg: 8.105  loss_relation: 60.71  loss_center: 1.005  loss_offset: 0.8324  time: 0.6361  data_time: 0.0689  lr: 0.0004789  max_mem: 12656M
[10/08 15:21:06] d2.utils.events INFO:  eta: 8:17:36  iter: 2359  total_loss: 65.99  loss_sem_seg: 7.784  loss_relation: 56.49  loss_center: 0.9872  loss_offset: 0.8918  time: 0.6359  data_time: 0.0628  lr: 0.00047872  max_mem: 12656M
[10/08 15:21:18] d2.utils.events INFO:  eta: 8:17:23  iter: 2379  total_loss: 71.88  loss_sem_seg: 7.778  loss_relation: 63.17  loss_center: 1.002  loss_offset: 0.8651  time: 0.6360  data_time: 0.0651  lr: 0.00047854  max_mem: 12656M
[10/08 15:21:31] d2.utils.events INFO:  eta: 8:16:26  iter: 2399  total_loss: 65.93  loss_sem_seg: 7.469  loss_relation: 56.78  loss_center: 0.9583  loss_offset: 0.8639  time: 0.6357  data_time: 0.0692  lr: 0.00047836  max_mem: 12656M
[10/08 15:21:43] d2.utils.events INFO:  eta: 8:15:55  iter: 2419  total_loss: 68.54  loss_sem_seg: 7.522  loss_relation: 59.13  loss_center: 1.068  loss_offset: 0.88  time: 0.6356  data_time: 0.0644  lr: 0.00047818  max_mem: 12656M
[10/08 15:21:55] d2.utils.events INFO:  eta: 8:15:30  iter: 2439  total_loss: 66.99  loss_sem_seg: 8.007  loss_relation: 56.57  loss_center: 1.062  loss_offset: 0.8929  time: 0.6354  data_time: 0.0680  lr: 0.00047799  max_mem: 12656M
[10/08 15:22:08] d2.utils.events INFO:  eta: 8:14:59  iter: 2459  total_loss: 67.79  loss_sem_seg: 7.792  loss_relation: 57.49  loss_center: 0.9475  loss_offset: 0.8843  time: 0.6355  data_time: 0.0661  lr: 0.00047781  max_mem: 12656M
[10/08 15:22:21] d2.utils.events INFO:  eta: 8:14:04  iter: 2479  total_loss: 69.44  loss_sem_seg: 8.464  loss_relation: 59.93  loss_center: 1.002  loss_offset: 0.8184  time: 0.6353  data_time: 0.0717  lr: 0.00047763  max_mem: 12656M
[10/08 15:22:33] d2.utils.events INFO:  eta: 8:13:28  iter: 2499  total_loss: 69.69  loss_sem_seg: 7.755  loss_relation: 60.97  loss_center: 1.061  loss_offset: 0.8067  time: 0.6351  data_time: 0.0666  lr: 0.00047745  max_mem: 12656M
[10/08 15:22:45] d2.utils.events INFO:  eta: 8:11:53  iter: 2519  total_loss: 68.2  loss_sem_seg: 8.423  loss_relation: 57.84  loss_center: 0.9492  loss_offset: 0.8809  time: 0.6350  data_time: 0.0641  lr: 0.00047727  max_mem: 12656M
[10/08 15:22:58] d2.utils.events INFO:  eta: 8:11:37  iter: 2539  total_loss: 67.86  loss_sem_seg: 8.188  loss_relation: 58.23  loss_center: 0.9416  loss_offset: 0.8735  time: 0.6349  data_time: 0.0688  lr: 0.00047709  max_mem: 12656M
[10/08 15:23:10] d2.utils.events INFO:  eta: 8:10:53  iter: 2559  total_loss: 67.76  loss_sem_seg: 7.925  loss_relation: 57.95  loss_center: 0.9922  loss_offset: 0.8648  time: 0.6348  data_time: 0.0727  lr: 0.00047691  max_mem: 12656M
[10/08 15:23:22] d2.utils.events INFO:  eta: 8:09:26  iter: 2579  total_loss: 67.45  loss_sem_seg: 7.608  loss_relation: 57.86  loss_center: 0.9021  loss_offset: 0.891  time: 0.6346  data_time: 0.0657  lr: 0.00047673  max_mem: 12656M
[10/08 15:23:34] d2.utils.events INFO:  eta: 8:08:33  iter: 2599  total_loss: 72.02  loss_sem_seg: 8.09  loss_relation: 61.96  loss_center: 1.091  loss_offset: 0.9202  time: 0.6344  data_time: 0.0645  lr: 0.00047655  max_mem: 12656M
[10/08 15:23:47] d2.utils.events INFO:  eta: 8:07:52  iter: 2619  total_loss: 69.17  loss_sem_seg: 7.893  loss_relation: 59.77  loss_center: 0.9694  loss_offset: 0.8552  time: 0.6344  data_time: 0.0757  lr: 0.00047637  max_mem: 12656M
[10/08 15:23:59] d2.utils.events INFO:  eta: 8:07:00  iter: 2639  total_loss: 68.07  loss_sem_seg: 7.835  loss_relation: 58.44  loss_center: 1.076  loss_offset: 0.8714  time: 0.6342  data_time: 0.0618  lr: 0.00047619  max_mem: 12656M
[10/08 15:24:11] d2.utils.events INFO:  eta: 8:06:02  iter: 2659  total_loss: 67.82  loss_sem_seg: 7.675  loss_relation: 59.14  loss_center: 0.9794  loss_offset: 0.8224  time: 0.6340  data_time: 0.0671  lr: 0.000476  max_mem: 12656M
[10/08 15:24:24] d2.utils.events INFO:  eta: 8:05:45  iter: 2679  total_loss: 67.17  loss_sem_seg: 8.013  loss_relation: 57.9  loss_center: 0.9352  loss_offset: 0.8939  time: 0.6341  data_time: 0.0634  lr: 0.00047582  max_mem: 12656M
[10/08 15:24:37] d2.utils.events INFO:  eta: 8:06:01  iter: 2699  total_loss: 67.18  loss_sem_seg: 8.088  loss_relation: 57.07  loss_center: 0.9252  loss_offset: 0.8549  time: 0.6343  data_time: 0.0619  lr: 0.00047564  max_mem: 12656M
[10/08 15:24:50] d2.utils.events INFO:  eta: 8:05:19  iter: 2719  total_loss: 67.74  loss_sem_seg: 7.208  loss_relation: 57.19  loss_center: 0.9637  loss_offset: 0.8165  time: 0.6344  data_time: 0.0661  lr: 0.00047546  max_mem: 12656M
[10/08 15:25:03] d2.utils.events INFO:  eta: 8:05:03  iter: 2739  total_loss: 66.32  loss_sem_seg: 7.701  loss_relation: 56.88  loss_center: 1.071  loss_offset: 0.8356  time: 0.6344  data_time: 0.0632  lr: 0.00047528  max_mem: 12656M
[10/08 15:25:16] d2.utils.events INFO:  eta: 8:04:56  iter: 2759  total_loss: 66.97  loss_sem_seg: 8.22  loss_relation: 57.76  loss_center: 0.9  loss_offset: 0.8753  time: 0.6346  data_time: 0.0645  lr: 0.0004751  max_mem: 12656M
[10/08 15:25:30] d2.utils.events INFO:  eta: 8:04:42  iter: 2779  total_loss: 67.36  loss_sem_seg: 7.919  loss_relation: 57.39  loss_center: 1.11  loss_offset: 0.8465  time: 0.6348  data_time: 0.0634  lr: 0.00047492  max_mem: 12656M
[10/08 15:25:43] d2.utils.events INFO:  eta: 8:05:03  iter: 2799  total_loss: 71.27  loss_sem_seg: 7.963  loss_relation: 61.54  loss_center: 0.9623  loss_offset: 0.9095  time: 0.6350  data_time: 0.0664  lr: 0.00047474  max_mem: 12656M
[10/08 15:25:56] d2.utils.events INFO:  eta: 8:04:48  iter: 2819  total_loss: 69.66  loss_sem_seg: 7.835  loss_relation: 59.07  loss_center: 0.9664  loss_offset: 0.9015  time: 0.6351  data_time: 0.0698  lr: 0.00047456  max_mem: 12656M
[10/08 15:26:09] d2.utils.events INFO:  eta: 8:04:38  iter: 2839  total_loss: 65.28  loss_sem_seg: 7.197  loss_relation: 57  loss_center: 0.9727  loss_offset: 0.7986  time: 0.6350  data_time: 0.0620  lr: 0.00047437  max_mem: 12656M
[10/08 15:26:22] d2.utils.events INFO:  eta: 8:03:46  iter: 2859  total_loss: 66.98  loss_sem_seg: 7.725  loss_relation: 56.4  loss_center: 1.025  loss_offset: 0.8247  time: 0.6351  data_time: 0.0709  lr: 0.00047419  max_mem: 12656M
[10/08 15:26:35] d2.utils.events INFO:  eta: 8:04:11  iter: 2879  total_loss: 65.44  loss_sem_seg: 8.119  loss_relation: 55.94  loss_center: 0.9596  loss_offset: 0.8606  time: 0.6353  data_time: 0.0649  lr: 0.00047401  max_mem: 12656M
[10/08 15:26:47] d2.utils.events INFO:  eta: 8:04:15  iter: 2899  total_loss: 68.49  loss_sem_seg: 7.752  loss_relation: 58.77  loss_center: 0.9319  loss_offset: 0.8604  time: 0.6353  data_time: 0.0654  lr: 0.00047383  max_mem: 12656M
[10/08 15:27:00] d2.utils.events INFO:  eta: 8:04:16  iter: 2919  total_loss: 66.01  loss_sem_seg: 7.809  loss_relation: 56.09  loss_center: 0.9917  loss_offset: 0.796  time: 0.6354  data_time: 0.0618  lr: 0.00047365  max_mem: 12656M
[10/08 15:27:13] d2.utils.events INFO:  eta: 8:04:50  iter: 2939  total_loss: 68.59  loss_sem_seg: 7.696  loss_relation: 58.79  loss_center: 0.9271  loss_offset: 0.8541  time: 0.6355  data_time: 0.0654  lr: 0.00047347  max_mem: 12656M
[10/08 15:27:27] d2.utils.events INFO:  eta: 8:04:56  iter: 2959  total_loss: 65.93  loss_sem_seg: 7.347  loss_relation: 57.2  loss_center: 0.9161  loss_offset: 0.8134  time: 0.6357  data_time: 0.0644  lr: 0.00047329  max_mem: 12656M
[10/08 15:27:40] d2.utils.events INFO:  eta: 8:05:00  iter: 2979  total_loss: 65.54  loss_sem_seg: 7.334  loss_relation: 56.56  loss_center: 1.009  loss_offset: 0.8498  time: 0.6358  data_time: 0.0700  lr: 0.00047311  max_mem: 12656M
[10/08 15:27:53] d2.utils.events INFO:  eta: 8:05:06  iter: 2999  total_loss: 66  loss_sem_seg: 7.192  loss_relation: 56.28  loss_center: 0.9214  loss_offset: 0.8191  time: 0.6359  data_time: 0.0624  lr: 0.00047293  max_mem: 12656M
[10/08 15:28:05] d2.utils.events INFO:  eta: 8:04:33  iter: 3019  total_loss: 65.97  loss_sem_seg: 7.225  loss_relation: 56.81  loss_center: 0.9692  loss_offset: 0.805  time: 0.6359  data_time: 0.0678  lr: 0.00047275  max_mem: 12656M
[10/08 15:28:18] d2.utils.events INFO:  eta: 8:04:03  iter: 3039  total_loss: 67.4  loss_sem_seg: 7.53  loss_relation: 58.5  loss_center: 0.9609  loss_offset: 0.8367  time: 0.6358  data_time: 0.0649  lr: 0.00047256  max_mem: 12656M
[10/08 15:28:30] d2.utils.events INFO:  eta: 8:03:47  iter: 3059  total_loss: 66.05  loss_sem_seg: 7.498  loss_relation: 56.38  loss_center: 0.9817  loss_offset: 0.8472  time: 0.6358  data_time: 0.0754  lr: 0.00047238  max_mem: 12656M
[10/08 15:28:43] d2.utils.events INFO:  eta: 8:03:39  iter: 3079  total_loss: 65.21  loss_sem_seg: 7.767  loss_relation: 55.03  loss_center: 1.029  loss_offset: 0.8324  time: 0.6358  data_time: 0.0698  lr: 0.0004722  max_mem: 12656M
[10/08 15:28:56] d2.utils.events INFO:  eta: 8:03:26  iter: 3099  total_loss: 69.22  loss_sem_seg: 7.874  loss_relation: 60.09  loss_center: 0.9834  loss_offset: 0.8774  time: 0.6357  data_time: 0.0651  lr: 0.00047202  max_mem: 12656M
[10/08 15:29:08] d2.utils.events INFO:  eta: 8:03:20  iter: 3119  total_loss: 63.81  loss_sem_seg: 7.579  loss_relation: 54.64  loss_center: 0.9915  loss_offset: 0.8644  time: 0.6357  data_time: 0.0647  lr: 0.00047184  max_mem: 12656M
[10/08 15:29:21] d2.utils.events INFO:  eta: 8:03:11  iter: 3139  total_loss: 66.82  loss_sem_seg: 7.164  loss_relation: 57.7  loss_center: 0.9885  loss_offset: 0.799  time: 0.6356  data_time: 0.0669  lr: 0.00047166  max_mem: 12656M
[10/08 15:29:34] d2.utils.events INFO:  eta: 8:02:45  iter: 3159  total_loss: 67.49  loss_sem_seg: 7.112  loss_relation: 58.89  loss_center: 0.9529  loss_offset: 0.7764  time: 0.6356  data_time: 0.0640  lr: 0.00047148  max_mem: 12656M
[10/08 15:29:47] d2.utils.events INFO:  eta: 8:02:46  iter: 3179  total_loss: 66.33  loss_sem_seg: 7.593  loss_relation: 57.11  loss_center: 1.025  loss_offset: 0.8637  time: 0.6358  data_time: 0.0682  lr: 0.0004713  max_mem: 12656M
[10/08 15:29:59] d2.utils.events INFO:  eta: 8:02:27  iter: 3199  total_loss: 67.75  loss_sem_seg: 7.626  loss_relation: 58.39  loss_center: 0.9941  loss_offset: 0.8389  time: 0.6357  data_time: 0.0677  lr: 0.00047111  max_mem: 12656M
[10/08 15:30:12] d2.utils.events INFO:  eta: 8:02:22  iter: 3219  total_loss: 66.03  loss_sem_seg: 7.584  loss_relation: 56.07  loss_center: 0.9315  loss_offset: 0.908  time: 0.6358  data_time: 0.0623  lr: 0.00047093  max_mem: 12656M
[10/08 15:30:25] d2.utils.events INFO:  eta: 8:02:05  iter: 3239  total_loss: 66.91  loss_sem_seg: 7.469  loss_relation: 56.63  loss_center: 0.9484  loss_offset: 0.8464  time: 0.6356  data_time: 0.0676  lr: 0.00047075  max_mem: 12656M
[10/08 15:30:37] d2.utils.events INFO:  eta: 8:01:47  iter: 3259  total_loss: 67.66  loss_sem_seg: 7.975  loss_relation: 58.5  loss_center: 0.9656  loss_offset: 0.8563  time: 0.6356  data_time: 0.0671  lr: 0.00047057  max_mem: 12656M
[10/08 15:30:50] d2.utils.events INFO:  eta: 8:01:41  iter: 3279  total_loss: 65.42  loss_sem_seg: 7.667  loss_relation: 54.94  loss_center: 0.9788  loss_offset: 0.8453  time: 0.6356  data_time: 0.0723  lr: 0.00047039  max_mem: 12656M
[10/08 15:31:03] d2.utils.events INFO:  eta: 8:02:06  iter: 3299  total_loss: 69.43  loss_sem_seg: 8.308  loss_relation: 59.96  loss_center: 1.017  loss_offset: 0.8347  time: 0.6356  data_time: 0.0742  lr: 0.00047021  max_mem: 12656M
[10/08 15:31:15] d2.utils.events INFO:  eta: 8:01:57  iter: 3319  total_loss: 65.28  loss_sem_seg: 7.373  loss_relation: 55.87  loss_center: 0.9794  loss_offset: 0.8671  time: 0.6356  data_time: 0.0675  lr: 0.00047003  max_mem: 12656M
[10/08 15:31:29] d2.utils.events INFO:  eta: 8:01:46  iter: 3339  total_loss: 67.9  loss_sem_seg: 7.834  loss_relation: 57.7  loss_center: 0.9369  loss_offset: 0.843  time: 0.6358  data_time: 0.0706  lr: 0.00046985  max_mem: 12656M
[10/08 15:31:42] d2.utils.events INFO:  eta: 8:02:06  iter: 3359  total_loss: 64.77  loss_sem_seg: 7.215  loss_relation: 56.43  loss_center: 0.9413  loss_offset: 0.7898  time: 0.6359  data_time: 0.0653  lr: 0.00046966  max_mem: 12656M
[10/08 15:31:54] d2.utils.events INFO:  eta: 8:01:56  iter: 3379  total_loss: 68.34  loss_sem_seg: 7.793  loss_relation: 57.65  loss_center: 0.9515  loss_offset: 0.8277  time: 0.6359  data_time: 0.0665  lr: 0.00046948  max_mem: 12656M
[10/08 15:32:07] d2.utils.events INFO:  eta: 8:02:36  iter: 3399  total_loss: 65.5  loss_sem_seg: 7.969  loss_relation: 56.08  loss_center: 0.9973  loss_offset: 0.8543  time: 0.6359  data_time: 0.0663  lr: 0.0004693  max_mem: 12656M
[10/08 15:32:20] d2.utils.events INFO:  eta: 8:02:33  iter: 3419  total_loss: 67.77  loss_sem_seg: 7.877  loss_relation: 58.85  loss_center: 0.9952  loss_offset: 0.8288  time: 0.6359  data_time: 0.0697  lr: 0.00046912  max_mem: 12656M
[10/08 15:32:33] d2.utils.events INFO:  eta: 8:02:14  iter: 3439  total_loss: 67.79  loss_sem_seg: 7.702  loss_relation: 57.75  loss_center: 0.9657  loss_offset: 0.7735  time: 0.6359  data_time: 0.0712  lr: 0.00046894  max_mem: 12656M
[10/08 15:32:45] d2.utils.events INFO:  eta: 8:01:36  iter: 3459  total_loss: 66.55  loss_sem_seg: 7.486  loss_relation: 56.89  loss_center: 0.9358  loss_offset: 0.8281  time: 0.6359  data_time: 0.0651  lr: 0.00046876  max_mem: 12656M
[10/08 15:32:58] d2.utils.events INFO:  eta: 8:02:22  iter: 3479  total_loss: 66.88  loss_sem_seg: 7.494  loss_relation: 57.43  loss_center: 0.9212  loss_offset: 0.8629  time: 0.6359  data_time: 0.0649  lr: 0.00046858  max_mem: 12656M
[10/08 15:33:11] d2.utils.events INFO:  eta: 8:02:36  iter: 3499  total_loss: 65.73  loss_sem_seg: 7.892  loss_relation: 55.9  loss_center: 0.8605  loss_offset: 0.8468  time: 0.6360  data_time: 0.0694  lr: 0.0004684  max_mem: 12656M
[10/08 15:33:24] d2.utils.events INFO:  eta: 8:03:20  iter: 3519  total_loss: 63.33  loss_sem_seg: 6.917  loss_relation: 53.55  loss_center: 0.8751  loss_offset: 0.8232  time: 0.6360  data_time: 0.0778  lr: 0.00046821  max_mem: 12656M
[10/08 15:33:37] d2.utils.events INFO:  eta: 8:04:02  iter: 3539  total_loss: 66.04  loss_sem_seg: 7.146  loss_relation: 56.71  loss_center: 0.9499  loss_offset: 0.83  time: 0.6361  data_time: 0.0627  lr: 0.00046803  max_mem: 12656M
[10/08 15:33:50] d2.utils.events INFO:  eta: 8:04:00  iter: 3559  total_loss: 64.41  loss_sem_seg: 7.502  loss_relation: 55.55  loss_center: 0.9707  loss_offset: 0.7902  time: 0.6361  data_time: 0.0728  lr: 0.00046785  max_mem: 12656M
[10/08 15:34:03] d2.utils.events INFO:  eta: 8:04:25  iter: 3579  total_loss: 66.64  loss_sem_seg: 7.099  loss_relation: 57.5  loss_center: 0.8981  loss_offset: 0.8008  time: 0.6361  data_time: 0.0676  lr: 0.00046767  max_mem: 12656M
[10/08 15:34:15] d2.utils.events INFO:  eta: 8:05:22  iter: 3599  total_loss: 63.05  loss_sem_seg: 7.21  loss_relation: 53.34  loss_center: 0.9575  loss_offset: 0.8407  time: 0.6361  data_time: 0.0695  lr: 0.00046749  max_mem: 12656M
[10/08 15:34:28] d2.utils.events INFO:  eta: 8:05:09  iter: 3619  total_loss: 66.31  loss_sem_seg: 7.842  loss_relation: 57.67  loss_center: 1.022  loss_offset: 0.846  time: 0.6361  data_time: 0.0688  lr: 0.00046731  max_mem: 12656M
[10/08 15:34:41] d2.utils.events INFO:  eta: 8:05:41  iter: 3639  total_loss: 67.99  loss_sem_seg: 7.245  loss_relation: 57.83  loss_center: 0.967  loss_offset: 0.8512  time: 0.6361  data_time: 0.0744  lr: 0.00046713  max_mem: 12656M
[10/08 15:34:53] d2.utils.events INFO:  eta: 8:05:56  iter: 3659  total_loss: 65.4  loss_sem_seg: 7.366  loss_relation: 55.14  loss_center: 0.9678  loss_offset: 0.8067  time: 0.6360  data_time: 0.0672  lr: 0.00046695  max_mem: 12656M
[10/08 15:35:06] d2.utils.events INFO:  eta: 8:05:44  iter: 3679  total_loss: 68.08  loss_sem_seg: 6.96  loss_relation: 59.14  loss_center: 1.018  loss_offset: 0.8031  time: 0.6361  data_time: 0.0685  lr: 0.00046676  max_mem: 12656M
[10/08 15:35:19] d2.utils.events INFO:  eta: 8:06:37  iter: 3699  total_loss: 63.79  loss_sem_seg: 7.398  loss_relation: 55.05  loss_center: 1.06  loss_offset: 0.8019  time: 0.6362  data_time: 0.0691  lr: 0.00046658  max_mem: 12656M
[10/08 15:35:32] d2.utils.events INFO:  eta: 8:05:32  iter: 3719  total_loss: 66.37  loss_sem_seg: 7.388  loss_relation: 56.19  loss_center: 0.9482  loss_offset: 0.8108  time: 0.6362  data_time: 0.0686  lr: 0.0004664  max_mem: 12656M
[10/08 15:35:45] d2.utils.events INFO:  eta: 8:05:30  iter: 3739  total_loss: 63.92  loss_sem_seg: 7.685  loss_relation: 54.61  loss_center: 0.9626  loss_offset: 0.8701  time: 0.6362  data_time: 0.0811  lr: 0.00046622  max_mem: 12656M
[10/08 15:35:57] d2.utils.events INFO:  eta: 8:04:38  iter: 3759  total_loss: 65.57  loss_sem_seg: 7.461  loss_relation: 56.89  loss_center: 0.9386  loss_offset: 0.7813  time: 0.6362  data_time: 0.0639  lr: 0.00046604  max_mem: 12656M
[10/08 15:36:10] d2.utils.events INFO:  eta: 8:04:10  iter: 3779  total_loss: 67.03  loss_sem_seg: 7.333  loss_relation: 57.93  loss_center: 0.939  loss_offset: 0.8155  time: 0.6362  data_time: 0.0677  lr: 0.00046586  max_mem: 12656M
[10/08 15:36:23] d2.utils.events INFO:  eta: 8:02:23  iter: 3799  total_loss: 64.6  loss_sem_seg: 7.407  loss_relation: 55.68  loss_center: 0.9492  loss_offset: 0.8416  time: 0.6362  data_time: 0.0644  lr: 0.00046568  max_mem: 12656M
